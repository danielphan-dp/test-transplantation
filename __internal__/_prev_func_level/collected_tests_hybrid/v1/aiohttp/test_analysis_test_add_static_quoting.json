{
  "test_name": "test_add_static_quoting",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_urldispatch.py",
  "static_methods": [
    {
      "name": "router.add_static",
      "source_code": "    def add_static(\n        self,\n        prefix: str,\n        path: PathLike,\n        *,\n        name: Optional[str] = None,\n        expect_handler: Optional[_ExpectHandler] = None,\n        chunk_size: int = 256 * 1024,\n        show_index: bool = False,\n        follow_symlinks: bool = False,\n        append_version: bool = False,\n    ) -> StaticResource:\n        \"\"\"Add static files view.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/web_urldispatcher.py",
      "line_number": 1152
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "router.add_static",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/web_urldispatcher.py",
      "line": 1152,
      "caller": "test_add_static_quoting",
      "source_code": "    def add_static(\n        self,\n        prefix: str,\n        path: PathLike,\n        *,\n        name: Optional[str] = None,\n        expect_handler: Optional[_ExpectHandler] = None,\n        chunk_size: int = 256 * 1024,\n        show_index: bool = False,\n        follow_symlinks: bool = False,\n        append_version: bool = False,\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_add_static_quoting",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_add_static_quoting",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert router['static'] is resource",
    "assert url.path == '/\u043f\u0440\u0435 /\u0444\u0438\u043a\u0441/1 2/\u0444\u0430\u0439\u043b%2F.txt'",
    "assert str(url) == '/%D0%BF%D1%80%D0%B5%20%2F%D1%84%D0%B8%D0%BA%D1%81/1%202/%D1%84%D0%B0%D0%B9%D0%BB%252F.txt'",
    "assert len(resource) == 2"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_add_static_quoting(router: web.UrlDispatcher) -> None:\n    resource = router.add_static(\n        \"/\u043f\u0440\u0435 %2F\u0444\u0438\u043a\u0441\", pathlib.Path(aiohttp.__file__).parent, name=\"static\"\n    )\n    assert router[\"static\"] is resource\n    url = resource.url_for(filename=\"/1 2/\u0444\u0430\u0439\u043b%2F.txt\")\n    assert url.path == \"/\u043f\u0440\u0435 /\u0444\u0438\u043a\u0441/1 2/\u0444\u0430\u0439\u043b%2F.txt\"\n    assert str(url) == (\n        \"/%D0%BF%D1%80%D0%B5%20%2F%D1%84%D0%B8%D0%BA%D1%81\"\n        \"/1%202/%D1%84%D0%B0%D0%B9%D0%BB%252F.txt\"\n    )\n    assert len(resource) == 2"
}