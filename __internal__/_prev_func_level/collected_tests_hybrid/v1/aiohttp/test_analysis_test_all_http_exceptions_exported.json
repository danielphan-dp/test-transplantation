{
  "test_name": "test_all_http_exceptions_exported",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_web_exceptions.py",
  "static_methods": [
    {
      "name": "dir",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "name.startswith",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "issubclass",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "dir",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_all_http_exceptions_exported",
      "source_code": ""
    },
    {
      "function": "name.startswith",
      "filename": "",
      "line": 0,
      "caller": "test_all_http_exceptions_exported",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_all_http_exceptions_exported",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_all_http_exceptions_exported",
      "source_code": ""
    },
    {
      "function": "issubclass",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_all_http_exceptions_exported",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert 'HTTPException' in web.__all__",
    "assert name in web.__all__"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_all_http_exceptions_exported() -> None:\n    assert \"HTTPException\" in web.__all__\n    for name in dir(web):\n        if name.startswith(\"_\"):\n            continue\n        obj = getattr(web, name)\n        if isinstance(obj, type) and issubclass(obj, web.HTTPException):\n            assert name in web.__all__"
}