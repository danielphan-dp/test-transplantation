{
  "test_name": "test_content_length_setter_with_enable_chunked_encoding",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_web_response.py",
  "static_methods": [
    {
      "name": "web.StreamResponse",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "resp.enable_chunked_encoding",
      "source_code": "    def enable_chunked_encoding(self) -> None:\n        \"\"\"Enables automatic chunked transfer encoding.\"\"\"\n        self._chunked = True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/web_response.py",
      "line_number": 187
    }
  ],
  "dynamic_methods": [
    {
      "function": "web.StreamResponse",
      "filename": "",
      "line": 0,
      "caller": "test_content_length_setter_with_enable_chunked_encoding",
      "source_code": ""
    },
    {
      "function": "resp.enable_chunked_encoding",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/web_response.py",
      "line": 187,
      "caller": "test_content_length_setter_with_enable_chunked_encoding",
      "source_code": "    def enable_chunked_encoding(self) -> None:\n        \"\"\"Enables automatic chunked transfer encoding.\"\"\"\n        self._chunked = True\n\n        if hdrs.CONTENT_LENGTH in self._headers:\n            raise RuntimeError(\n                \"You can't enable chunked encoding when a content length is set\"\n            )\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_content_length_setter_with_enable_chunked_encoding() -> None:\n    resp = web.StreamResponse()\n\n    resp.enable_chunked_encoding()\n    with pytest.raises(RuntimeError):\n        resp.content_length = 234"
}