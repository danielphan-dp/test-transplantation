{
  "test_name": "test_proxy_auth_property",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_proxy.py",
  "static_methods": [
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "URL",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "URL",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_proxy_auth_property",
      "source_code": ""
    },
    {
      "function": "URL",
      "filename": "",
      "line": 0,
      "caller": "test_proxy_auth_property",
      "source_code": ""
    },
    {
      "function": "URL",
      "filename": "",
      "line": 0,
      "caller": "test_proxy_auth_property",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_proxy_auth_property(self) -> None:\n        req = aiohttp.ClientRequest(\n            \"GET\",\n            URL(\"http://localhost:1234/path\"),\n            proxy=URL(\"http://proxy.example.com\"),\n            proxy_auth=aiohttp.helpers.BasicAuth(\"user\", \"pass\"),\n            loop=self.loop,\n        )\n        self.assertEqual((\"user\", \"pass\", \"latin1\"), req.proxy_auth)"
}