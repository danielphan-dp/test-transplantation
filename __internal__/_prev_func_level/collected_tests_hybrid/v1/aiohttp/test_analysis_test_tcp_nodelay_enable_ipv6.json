{
  "test_name": "test_tcp_nodelay_enable_ipv6",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_tcp_helpers.py",
  "static_methods": [
    {
      "name": "mock.Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "tcp_nodelay",
      "source_code": "def tcp_nodelay(transport: asyncio.Transport, value: bool) -> None:\n    sock = transport.get_extra_info(\"socket\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/tcp_helpers.py",
      "line_number": 24
    },
    {
      "name": "s.getsockopt",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "mock.Mock",
      "filename": "",
      "line": 0,
      "caller": "test_tcp_nodelay_enable_ipv6",
      "source_code": ""
    },
    {
      "function": "tcp_nodelay",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/tcp_helpers.py",
      "line": 24,
      "caller": "test_tcp_nodelay_enable_ipv6",
      "source_code": "def tcp_nodelay(transport: asyncio.Transport, value: bool) -> None:\n    sock = transport.get_extra_info(\"socket\")\n\n    if sock is None:\n        return\n\n    if sock.family not in (socket.AF_INET, socket.AF_INET6):\n        return\n\n    value = bool(value)\n\n    # socket may be closed already, on windows OSError get raised\n    with suppress(OSError):\n        sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, value)\n"
    },
    {
      "function": "s.getsockopt",
      "filename": "",
      "line": 0,
      "caller": "test_tcp_nodelay_enable_ipv6",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert s.getsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_tcp_nodelay_enable_ipv6() -> None:\n    transport = mock.Mock()\n    with socket.socket(socket.AF_INET6, socket.SOCK_STREAM) as s:\n        transport.get_extra_info.return_value = s\n        tcp_nodelay(transport, True)\n        assert s.getsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY)"
}