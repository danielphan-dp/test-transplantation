{
  "test_name": "test_trace_config_ctx_request_ctx",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_tracing.py",
  "static_methods": [
    {
      "name": "Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "TraceConfig",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "trace_config.trace_config_ctx",
      "source_code": "    def trace_config_ctx(self, trace_request_ctx: Any = None) -> _T:\n        \"\"\"Return a new trace_config_ctx instance\"\"\"\n        return self._trace_config_ctx_factory(trace_request_ctx=trace_request_ctx)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/tracing.py",
      "line_number": 113
    }
  ],
  "dynamic_methods": [
    {
      "function": "Mock",
      "filename": "",
      "line": 0,
      "caller": "test_trace_config_ctx_request_ctx",
      "source_code": ""
    },
    {
      "function": "TraceConfig",
      "filename": "",
      "line": 0,
      "caller": "test_trace_config_ctx_request_ctx",
      "source_code": ""
    },
    {
      "function": "trace_config.trace_config_ctx",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/tracing.py",
      "line": 113,
      "caller": "test_trace_config_ctx_request_ctx",
      "source_code": "    def trace_config_ctx(self, trace_request_ctx: Any = None) -> _T:\n        \"\"\"Return a new trace_config_ctx instance\"\"\"\n        return self._trace_config_ctx_factory(trace_request_ctx=trace_request_ctx)\n\n"
    }
  ],
  "assertions": [
    "assert trace_config_ctx.trace_request_ctx is trace_request_ctx"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_trace_config_ctx_request_ctx(self) -> None:\n        trace_request_ctx = Mock()\n        trace_config = TraceConfig()\n        trace_config_ctx = trace_config.trace_config_ctx(\n            trace_request_ctx=trace_request_ctx\n        )\n        assert trace_config_ctx.trace_request_ctx is trace_request_ctx"
}