{
  "test_name": "test_FormatChecker_cls_checks",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_deprecations.py",
  "static_methods": [
    {
      "name": "self.assertWarnsRegex",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.addCleanup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertWarnsRegex",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FormatChecker.cls_checks",
      "source_code": "    def cls_checks(\n        cls, format: str, raises: _RaisesType = (),\n    ) -> typing.Callable[[_F], _F]:\n        warnings.warn(\n            (\n                \"FormatChecker.cls_checks is deprecated. Call \"\n                \"FormatChecker.checks on a specific FormatChecker instance \"\n                \"instead.\"\n            ),\n            DeprecationWarning,\n            stacklevel=2,\n        )\n        return cls._cls_checks(format=format, raises=raises)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/_format.py",
      "line_number": 89
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertWarnsRegex",
      "filename": "",
      "line": 0,
      "caller": "test_FormatChecker_cls_checks",
      "source_code": ""
    },
    {
      "function": "self.addCleanup",
      "filename": "",
      "line": 0,
      "caller": "test_FormatChecker_cls_checks",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_FormatChecker_cls_checks",
      "source_code": ""
    },
    {
      "function": "self.assertWarnsRegex",
      "filename": "",
      "line": 0,
      "caller": "test_FormatChecker_cls_checks",
      "source_code": ""
    },
    {
      "function": "FormatChecker.cls_checks",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/_format.py",
      "line": 89,
      "caller": "test_FormatChecker_cls_checks",
      "source_code": "    @classmethod\n    def cls_checks(\n        cls, format: str, raises: _RaisesType = (),\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_FormatChecker_cls_checks(self):\n        \"\"\"\n        As of v4.14.0, FormatChecker.cls_checks is deprecated without\n        replacement.\n        \"\"\"\n\n        self.addCleanup(FormatChecker.checkers.pop, \"boom\", None)\n\n        message = \"FormatChecker.cls_checks \"\n        with self.assertWarnsRegex(DeprecationWarning, message) as w:\n            FormatChecker.cls_checks(\"boom\")\n\n        self.assertEqual(w.filename, __file__)"
}