{
  "test_name": "test_flaskify_path",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/tests/test_flask_utils.py",
  "static_methods": [
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    },
    {
      "name": "flask_utils.flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line_number": 103
    }
  ],
  "dynamic_methods": [
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    },
    {
      "function": "flask_utils.flaskify_path",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/connexion/frameworks/flask.py",
      "line": 103,
      "caller": "test_flaskify_path",
      "source_code": "def flaskify_path(swagger_path, types=None):\n    \"\"\"\n    Convert swagger path templates to flask path templates\n\n    :type swagger_path: str\n    :type types: dict\n    :rtype: str\n\n    >>> flaskify_path('/foo-bar/{my-param}')\n    '/foo-bar/<my_param>'\n\n    >>> flaskify_path('/foo/{someint}', {'someint': 'int'})\n    '/foo/<int:someint>'\n    \"\"\"\n    if types is None:\n        types = {}\n    convert_match = functools.partial(convert_path_parameter, types=types)\n    return PATH_PARAMETER.sub(convert_match, swagger_path)\n\n\n"
    }
  ],
  "assertions": [
    "assert flask_utils.flaskify_path('{test-path}') == '<test_path>'",
    "assert flask_utils.flaskify_path('api/{test-path}') == 'api/<test_path>'",
    "assert flask_utils.flaskify_path('my-api/{test-path}') == 'my-api/<test_path>'",
    "assert flask_utils.flaskify_path('foo_bar/{a-b}/{c_d}') == 'foo_bar/<a_b>/<c_d>'",
    "assert flask_utils.flaskify_path('foo/{a}/{b}', {'a': 'integer'}) == 'foo/<int:a>/<b>'",
    "assert flask_utils.flaskify_path('foo/{a}/{b}', {'a': 'number'}) == 'foo/<float:a>/<b>'",
    "assert flask_utils.flaskify_path('foo/{a}/{b}', {'a': 'path'}) == 'foo/<path:a>/<b>'",
    "assert flask_utils.flaskify_path('foo/{a}', {'a': 'path'}) == 'foo/<path:a>'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_flaskify_path():\n    assert flask_utils.flaskify_path(\"{test-path}\") == \"<test_path>\"\n    assert flask_utils.flaskify_path(\"api/{test-path}\") == \"api/<test_path>\"\n    assert flask_utils.flaskify_path(\"my-api/{test-path}\") == \"my-api/<test_path>\"\n    assert flask_utils.flaskify_path(\"foo_bar/{a-b}/{c_d}\") == \"foo_bar/<a_b>/<c_d>\"\n    assert (\n        flask_utils.flaskify_path(\"foo/{a}/{b}\", {\"a\": \"integer\"}) == \"foo/<int:a>/<b>\"\n    )\n    assert (\n        flask_utils.flaskify_path(\"foo/{a}/{b}\", {\"a\": \"number\"}) == \"foo/<float:a>/<b>\"\n    )\n    assert flask_utils.flaskify_path(\"foo/{a}/{b}\", {\"a\": \"path\"}) == \"foo/<path:a>/<b>\"\n    assert flask_utils.flaskify_path(\"foo/{a}\", {\"a\": \"path\"}) == \"foo/<path:a>\""
}