{
  "test_name": "test_from_contents_unneeded_default",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/referencing/tests/test_core.py",
  "static_methods": [
    {
      "name": "Resource.from_contents",
      "source_code": "    def from_contents(\n        cls,\n        contents: D,\n        default_specification: (\n            type[Specification[D]] | Specification[D]\n        ) = Specification,\n    ) -> Resource[D]:\n        \"\"\"\n        Create a resource guessing which specification applies to the contents.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/referencing/_core.py",
      "line_number": 191
    },
    {
      "name": "Resource",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "Resource.from_contents",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/referencing/_core.py",
      "line": 191,
      "caller": "test_from_contents_unneeded_default",
      "source_code": "    @classmethod\n    def from_contents(\n        cls,\n        contents: D,\n        default_specification: (\n            type[Specification[D]] | Specification[D]\n        ) = Specification,\n"
    },
    {
      "function": "Resource",
      "filename": "",
      "line": 0,
      "caller": "test_from_contents_unneeded_default",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert resource == Resource(contents=schema, specification=DRAFT202012)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_from_contents_unneeded_default(self):\n        schema = {\"$schema\": \"https://json-schema.org/draft/2020-12/schema\"}\n        resource = Resource.from_contents(\n            schema,\n            default_specification=Specification.OPAQUE,\n        )\n        assert resource == Resource(\n            contents=schema,\n            specification=DRAFT202012,\n        )"
}