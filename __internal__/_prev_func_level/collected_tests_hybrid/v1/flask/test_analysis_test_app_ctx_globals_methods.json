{
  "test_name": "test_app_ctx_globals_methods",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_appctx.py",
  "static_methods": [
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_app_ctx_globals_methods",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_app_ctx_globals_methods",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert flask.g.get('foo') is None",
    "assert flask.g.get('foo', 'bar') == 'bar'",
    "assert 'foo' not in flask.g",
    "assert 'foo' in flask.g",
    "assert flask.g.bar == 'the cake is a lie'",
    "assert flask.g.pop('bar') == 'the cake is a lie'",
    "assert flask.g.pop('bar', 'more cake') == 'more cake'",
    "assert list(flask.g) == ['foo']",
    "assert repr(flask.g) == \"<flask.g of 'flask_test'>\""
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_app_ctx_globals_methods(app, app_ctx):\n    # get\n    assert flask.g.get(\"foo\") is None\n    assert flask.g.get(\"foo\", \"bar\") == \"bar\"\n    # __contains__\n    assert \"foo\" not in flask.g\n    flask.g.foo = \"bar\"\n    assert \"foo\" in flask.g\n    # setdefault\n    flask.g.setdefault(\"bar\", \"the cake is a lie\")\n    flask.g.setdefault(\"bar\", \"hello world\")\n    assert flask.g.bar == \"the cake is a lie\"\n    # pop\n    assert flask.g.pop(\"bar\") == \"the cake is a lie\"\n    with pytest.raises(KeyError):\n        flask.g.pop(\"bar\")\n    assert flask.g.pop(\"bar\", \"more cake\") == \"more cake\"\n    # __iter__\n    assert list(flask.g) == [\"foo\"]\n    # __repr__\n    assert repr(flask.g) == \"<flask.g of 'flask_test'>\""
}