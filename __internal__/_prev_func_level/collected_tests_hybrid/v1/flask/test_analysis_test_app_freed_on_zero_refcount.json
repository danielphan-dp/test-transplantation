{
  "test_name": "test_app_freed_on_zero_refcount",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    {
      "name": "weak",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "weak",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "require_cpython_gc",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "weak",
      "filename": "",
      "line": 0,
      "caller": "test_app_freed_on_zero_refcount",
      "source_code": ""
    },
    {
      "function": "weak",
      "filename": "",
      "line": 0,
      "caller": "test_app_freed_on_zero_refcount",
      "source_code": ""
    },
    {
      "function": "require_cpython_gc",
      "filename": "",
      "line": 0,
      "caller": "test_app_freed_on_zero_refcount",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert app.view_functions['static']",
    "assert weak() is not None",
    "assert weak() is None"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_app_freed_on_zero_refcount():\n    # A Flask instance should not create a reference cycle that prevents CPython\n    # from freeing it when all external references to it are released (see #3761).\n    gc.disable()\n    try:\n        app = flask.Flask(__name__)\n        assert app.view_functions[\"static\"]\n        weak = weakref.ref(app)\n        assert weak() is not None\n        del app\n        assert weak() is None\n    finally:\n        gc.enable()"
}