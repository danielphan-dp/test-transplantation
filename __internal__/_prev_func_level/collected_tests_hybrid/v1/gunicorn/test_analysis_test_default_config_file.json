{
  "test_name": "test_default_config_file",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_config.py",
  "static_methods": [
    {
      "name": "AltArgs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "config.get_default_config_file",
      "source_code": "def get_default_config_file():\n    config_path = os.path.join(os.path.abspath(os.getcwd()),\n                               'gunicorn.conf.py')\n    if os.path.exists(config_path):\n        return config_path\n    return None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/config.py",
      "line_number": 542
    },
    {
      "name": "AltArgs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "NoConfigApp",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "AltArgs",
      "filename": "",
      "line": 0,
      "caller": "test_default_config_file",
      "source_code": ""
    },
    {
      "function": "config.get_default_config_file",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/config.py",
      "line": 542,
      "caller": "test_default_config_file",
      "source_code": "def get_default_config_file():\n    config_path = os.path.join(os.path.abspath(os.getcwd()),\n                               'gunicorn.conf.py')\n    if os.path.exists(config_path):\n        return config_path\n    return None\n\n\n"
    },
    {
      "function": "AltArgs",
      "filename": "",
      "line": 0,
      "caller": "test_default_config_file",
      "source_code": ""
    },
    {
      "function": "NoConfigApp",
      "filename": "",
      "line": 0,
      "caller": "test_default_config_file",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert config.get_default_config_file() == create_config_file.name",
    "assert app.cfg.bind == ['0.0.0.0:9090']"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_default_config_file(create_config_file):\n    assert config.get_default_config_file() == create_config_file.name\n\n    with AltArgs([\"prog_name\"]):\n        app = NoConfigApp()\n    assert app.cfg.bind == [\"0.0.0.0:9090\"]"
}