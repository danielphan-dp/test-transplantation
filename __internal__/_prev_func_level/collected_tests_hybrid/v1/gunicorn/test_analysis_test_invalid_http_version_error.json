{
  "test_name": "test_invalid_http_version_error",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
  "static_methods": [
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "InvalidHTTPVersion",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "InvalidHTTPVersion",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_invalid_http_version_error",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_invalid_http_version_error",
      "source_code": ""
    },
    {
      "function": "InvalidHTTPVersion",
      "filename": "",
      "line": 0,
      "caller": "test_invalid_http_version_error",
      "source_code": ""
    },
    {
      "function": "InvalidHTTPVersion",
      "filename": "",
      "line": 0,
      "caller": "test_invalid_http_version_error",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert str(InvalidHTTPVersion('foo')) == \"Invalid HTTP Version: 'foo'\"",
    "assert str(InvalidHTTPVersion((2, 1))) == 'Invalid HTTP Version: (2, 1)'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_invalid_http_version_error():\n    assert str(InvalidHTTPVersion('foo')) == \"Invalid HTTP Version: 'foo'\"\n    assert str(InvalidHTTPVersion((2, 1))) == 'Invalid HTTP Version: (2, 1)'"
}