{
  "test_name": "test_iter_unreader_chunk",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
  "static_methods": [
    {
      "name": "IterUnreader",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "iter_unreader.chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line_number": 16
    },
    {
      "name": "iter_unreader.chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line_number": 16
    },
    {
      "name": "iter_unreader.chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line_number": 16
    },
    {
      "name": "iter_unreader.chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line_number": 16
    },
    {
      "name": "iter_unreader.chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line_number": 16
    }
  ],
  "dynamic_methods": [
    {
      "function": "IterUnreader",
      "filename": "",
      "line": 0,
      "caller": "test_iter_unreader_chunk",
      "source_code": ""
    },
    {
      "function": "iter_unreader.chunk",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line": 16,
      "caller": "test_iter_unreader_chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "iter_unreader.chunk",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line": 16,
      "caller": "test_iter_unreader_chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "iter_unreader.chunk",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line": 16,
      "caller": "test_iter_unreader_chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "iter_unreader.chunk",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line": 16,
      "caller": "test_iter_unreader_chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "iter_unreader.chunk",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/gunicorn/http/unreader.py",
      "line": 16,
      "caller": "test_iter_unreader_chunk",
      "source_code": "    def chunk(self):\n        raise NotImplementedError()\n\n"
    }
  ],
  "assertions": [
    "assert iter_unreader.chunk() == b'ab'",
    "assert iter_unreader.chunk() == b'cd'",
    "assert iter_unreader.chunk() == b'ef'",
    "assert iter_unreader.chunk() == b''",
    "assert iter_unreader.chunk() == b''"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_iter_unreader_chunk():\n    iter_unreader = IterUnreader((b'ab', b'cd', b'ef'))\n\n    assert iter_unreader.chunk() == b'ab'\n    assert iter_unreader.chunk() == b'cd'\n    assert iter_unreader.chunk() == b'ef'\n    assert iter_unreader.chunk() == b''\n    assert iter_unreader.chunk() == b''"
}