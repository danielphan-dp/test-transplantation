{
  "test_name": "test_pos_int_validation",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_config.py",
  "static_methods": [
    {
      "name": "config.Config",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "c.set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "c.set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "c.set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "config.Config",
      "filename": "",
      "line": 0,
      "caller": "test_pos_int_validation",
      "source_code": ""
    },
    {
      "function": "c.set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_pos_int_validation",
      "source_code": ""
    },
    {
      "function": "c.set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_pos_int_validation",
      "source_code": ""
    },
    {
      "function": "c.set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_pos_int_validation",
      "source_code": ""
    },
    {
      "function": "c.set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_pos_int_validation",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert c.workers == 1",
    "assert c.workers == 4",
    "assert c.workers == 5",
    "assert c.workers == 255",
    "assert c.workers == 1"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_pos_int_validation():\n    c = config.Config()\n    assert c.workers == 1\n    c.set(\"workers\", 4)\n    assert c.workers == 4\n    c.set(\"workers\", \"5\")\n    assert c.workers == 5\n    c.set(\"workers\", \"0xFF\")\n    assert c.workers == 255\n    c.set(\"workers\", True)\n    assert c.workers == 1  # Yes. That's right...\n    pytest.raises(ValueError, c.set, \"workers\", -21)\n    pytest.raises(TypeError, c.set, \"workers\", c)"
}