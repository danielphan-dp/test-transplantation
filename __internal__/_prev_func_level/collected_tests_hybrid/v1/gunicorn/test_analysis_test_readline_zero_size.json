{
  "test_name": "test_readline_zero_size",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
  "static_methods": [
    {
      "name": "assert_readline",
      "source_code": "def assert_readline(payload, size, expected):\n    body = Body(io.BytesIO(payload))\n    assert body.readline(size) == expected",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
      "line_number": 24
    },
    {
      "name": "assert_readline",
      "source_code": "def assert_readline(payload, size, expected):\n    body = Body(io.BytesIO(payload))\n    assert body.readline(size) == expected",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
      "line_number": 24
    }
  ],
  "dynamic_methods": [
    {
      "function": "assert_readline",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
      "line": 24,
      "caller": "test_readline_zero_size",
      "source_code": "def assert_readline(payload, size, expected):\n    body = Body(io.BytesIO(payload))\n    assert body.readline(size) == expected\n\n\n"
    },
    {
      "function": "assert_readline",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/gunicorn/tests/test_http.py",
      "line": 24,
      "caller": "test_readline_zero_size",
      "source_code": "def assert_readline(payload, size, expected):\n    body = Body(io.BytesIO(payload))\n    assert body.readline(size) == expected\n\n\n"
    }
  ],
  "assertions": [
    "assert_readline(b'abc', 0, b'')",
    "assert_readline(b'\\n', 0, b'')"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_readline_zero_size():\n    assert_readline(b\"abc\", 0, b\"\")\n    assert_readline(b\"\\n\", 0, b\"\")"
}