{
  "test_name": "test__normalize_name_unicode",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
  "static_methods": [
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_normalize_name",
      "source_code": "def _normalize_name(name: str) -> str:\n    \"\"\"Make a name consistent regardless of source (environment or file)\"\"\"\n    name = name.lower().replace(\"_\", \"-\")\n    if name.startswith(\"--\"):\n        name = name[2:]  # only prefer long opts\n    return name",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_internal/configuration.py",
      "line_number": 50
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__normalize_name_unicode",
      "source_code": ""
    },
    {
      "function": "_normalize_name",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_internal/configuration.py",
      "line": 50,
      "caller": "test__normalize_name_unicode",
      "source_code": "def _normalize_name(name: str) -> str:\n    \"\"\"Make a name consistent regardless of source (environment or file)\"\"\"\n    name = name.lower().replace(\"_\", \"-\")\n    if name.startswith(\"--\"):\n        name = name[2:]  # only prefer long opts\n    return name\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test__normalize_name_unicode(self):\n        from zope.interface.adapter import _normalize_name\n\n        USTR = 'ustr'\n        self.assertEqual(_normalize_name(USTR), USTR)"
}