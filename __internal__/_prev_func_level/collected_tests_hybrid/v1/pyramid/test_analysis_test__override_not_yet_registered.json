{
  "test_name": "test__override_not_yet_registered",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
  "static_methods": [
    {
      "name": "DummyPackage",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyAssetSource",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "config._override",
      "source_code": "    def _override(\n        self, package, path, override_source, PackageOverrides=PackageOverrides\n    ):\n        pkg_name = package.__name__\n        override = self.registry.queryUtility(IPackageOverrides, name=pkg_name)\n        if override is None:\n            override = PackageOverrides(package)\n            self.registry.registerUtility(\n                override, IPackageOverrides, name=pkg_name\n            )\n        override.insert(path, override_source)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/assets.py",
      "line_number": 306
    },
    {
      "name": "config.registry.queryUtility",
      "source_code": "    def queryUtility(interface, name='', default=None):\n        \"\"\"Look up a utility that provides an interface.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 1063
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyPackage",
      "filename": "",
      "line": 0,
      "caller": "test__override_not_yet_registered",
      "source_code": ""
    },
    {
      "function": "DummyAssetSource",
      "filename": "",
      "line": 0,
      "caller": "test__override_not_yet_registered",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test__override_not_yet_registered",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "config._override",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/assets.py",
      "line": 306,
      "caller": "test__override_not_yet_registered",
      "source_code": "    def _override(\n        self, package, path, override_source, PackageOverrides=PackageOverrides\n"
    },
    {
      "function": "config.registry.queryUtility",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 1063,
      "caller": "test__override_not_yet_registered",
      "source_code": "    def queryUtility(interface, name='', default=None):\n        \"\"\"Look up a utility that provides an interface.\n\n        If one is not found, returns default.\n        \"\"\"\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__override_not_yet_registered",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__override_not_yet_registered",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test__override_not_yet_registered(self):\n        from pyramid.interfaces import IPackageOverrides\n\n        package = DummyPackage('package')\n        source = DummyAssetSource()\n        config = self._makeOne()\n        config._override(\n            package, 'path', source, PackageOverrides=DummyPackageOverrides\n        )\n        overrides = config.registry.queryUtility(\n            IPackageOverrides, name='package'\n        )\n        self.assertEqual(overrides.inserted, [('path', source)])\n        self.assertEqual(overrides.package, package)"
}