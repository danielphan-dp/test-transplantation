{
  "test_name": "test__uncached_lookup_empty_ro",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
  "static_methods": [
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeRegistry",
      "source_code": "    def _makeRegistry(self, depth):",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line_number": 1377
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "alb._uncached_lookup",
      "source_code": "    def _uncached_lookup(self, required, provided, name=''):\n        required = tuple(required)\n        result = None\n        order = len(required)\n        for registry in self._registry.ro:\n            byorder = registry._adapters\n            if order >= len(byorder):\n                continue",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/adapter.py",
      "line_number": 831
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIn",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "IFoo.weakref",
      "source_code": "    def weakref(self, callback=None):\n        return weakref.ref(self, callback)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 540
    }
  ],
  "dynamic_methods": [
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "self._makeRegistry",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line": 1377,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": "    def _makeRegistry(self, depth):\n\n        class WithGeneration:\n            _generation = 1\n\n        class Registry:\n            def __init__(self, depth):\n                self.ro = [WithGeneration() for i in range(depth)]\n\n        return Registry(depth)\n\n"
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "alb._uncached_lookup",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/adapter.py",
      "line": 831,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": "    def _uncached_lookup(self, required, provided, name=''):\n        required = tuple(required)\n        result = None\n        order = len(required)\n        for registry in self._registry.ro:\n            byorder = registry._adapters\n            if order >= len(byorder):\n                continue\n\n            extendors = registry._v_lookup._extendors.get(provided)\n            if not extendors:\n                continue\n\n            components = byorder[order]\n            result = _lookup(components, required, extendors, name, 0,\n                             order)\n            if result is not None:\n                break\n\n        self._subscribe(*required)\n\n        return result\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "self.assertIn",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": ""
    },
    {
      "function": "IFoo.weakref",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 540,
      "caller": "test__uncached_lookup_empty_ro",
      "source_code": "    def weakref(self, callback=None):\n        return weakref.ref(self, callback)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test__uncached_lookup_empty_ro(self):\n        from zope.interface.interface import InterfaceClass\n        IFoo = InterfaceClass('IFoo')\n        IBar = InterfaceClass('IBar', (IFoo,))\n        registry = self._makeRegistry()\n        alb = self._makeOne(registry)\n        result = alb._uncached_lookup((IFoo,), IBar)\n        self.assertEqual(result, None)\n        self.assertEqual(len(alb._required), 1)\n        self.assertIn(IFoo.weakref(), alb._required)"
}