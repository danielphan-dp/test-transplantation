{
  "test_name": "test_add_subscriber_predicate",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_adapters.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "config.add_subscriber_predicate",
      "source_code": "    def add_subscriber_predicate(\n        self, name, factory, weighs_more_than=None, weighs_less_than=None\n    ):\n        \"\"\"\n        .. versionadded:: 1.4",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/adapters.py",
      "line_number": 133
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "L.append",
      "source_code": "    def append(\n        self, text: Union[\"Text\", str], style: Optional[Union[str, \"Style\"]] = None\n    ) -> \"Text\":\n        \"\"\"Add text with an optional style.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/text.py",
      "line_number": 917
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_add_subscriber_predicate",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "config.add_subscriber_predicate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/adapters.py",
      "line": 133,
      "caller": "test_add_subscriber_predicate",
      "source_code": "    @action_method\n    def add_subscriber_predicate(\n        self, name, factory, weighs_more_than=None, weighs_less_than=None\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_subscriber_predicate",
      "source_code": ""
    },
    {
      "function": "L.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/text.py",
      "line": 917,
      "caller": "test_add_subscriber_predicate",
      "source_code": "    def append(\n        self, text: Union[\"Text\", str], style: Optional[Union[str, \"Style\"]] = None\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_add_subscriber_predicate(self):\n        config = self._makeOne()\n        L = []\n\n        def add_predicate(\n            type, name, factory, weighs_less_than=None, weighs_more_than=None\n        ):\n            self.assertEqual(type, 'subscriber')\n            self.assertEqual(name, 'name')\n            self.assertEqual(factory, 'factory')\n            self.assertEqual(weighs_more_than, 1)\n            self.assertEqual(weighs_less_than, 2)\n            L.append(1)\n\n        config._add_predicate = add_predicate\n        config.add_subscriber_predicate('name', 'factory', 1, 2)\n        self.assertTrue(L)"
}