{
  "test_name": "test_basic_user_can_edit_back",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tests/test_functional.py",
  "static_methods": [
    {
      "name": "testapp.login",
      "source_code": "    def login(self, params, status=303, **kw):\n        \"\"\" Convenience method to login the client.\"\"\"\n        body = dict(csrf_token=self.get_csrf_token())\n        body.update(params)\n        return self.post('/login', body, **kw)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tests/conftest.py",
      "line_number": 100
    },
    {
      "name": "testapp.get",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line_number": 14
    }
  ],
  "dynamic_methods": [
    {
      "function": "testapp.login",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tests/conftest.py",
      "line": 100,
      "caller": "test_basic_user_can_edit_back",
      "source_code": "    def login(self, params, status=303, **kw):\n        \"\"\" Convenience method to login the client.\"\"\"\n        body = dict(csrf_token=self.get_csrf_token())\n        body.update(params)\n        return self.post('/login', body, **kw)\n\n"
    },
    {
      "function": "testapp.get",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line": 14,
      "caller": "test_basic_user_can_edit_back",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()\n\n"
    }
  ],
  "assertions": [
    "assert b'Editing' in res.body"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_basic_user_can_edit_back(testapp):\n    testapp.login(basic_login)\n    res = testapp.get('/BackPage/edit_page', status=200)\n    assert b'Editing' in res.body"
}