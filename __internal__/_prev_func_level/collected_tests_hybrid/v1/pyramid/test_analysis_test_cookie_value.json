{
  "test_name": "test_cookie_value",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_authentication.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "ticket.cookie_value",
      "source_code": "    def cookie_value(self):\n        v = f'{self.digest()}{int(self.time):08x}{quote(self.userid)}!'\n        if self.tokens:\n            v += self.tokens + '!'\n        v += self.user_data\n        return v",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/authentication.py",
      "line_number": 719
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_cookie_value",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "ticket.cookie_value",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/authentication.py",
      "line": 719,
      "caller": "test_cookie_value",
      "source_code": "    def cookie_value(self):\n        v = f'{self.digest()}{int(self.time):08x}{quote(self.userid)}!'\n        if self.tokens:\n            v += self.tokens + '!'\n        v += self.user_data\n        return v\n\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_cookie_value",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_cookie_value(self):\n        ticket = self._makeOne(\n            'secret', 'userid', '0.0.0.0', time=10, tokens=('a', 'b')\n        )\n        result = ticket.cookie_value()\n        self.assertEqual(\n            result, '66f9cc3e423dc57c91df696cf3d1f0d80000000auserid!a,b!'\n        )"
}