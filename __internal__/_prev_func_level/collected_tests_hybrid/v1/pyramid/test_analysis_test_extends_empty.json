{
  "test_name": "test_extends_empty",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
  "static_methods": [
    {
      "name": "self._getEmpty",
      "source_code": "    def _getEmpty(self):\n        from zope.interface.declarations import Declaration\n        return Declaration()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
      "line_number": 87
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "decl.extends",
      "source_code": "    def extends(self, interface, strict=True):\n        \"\"\"Does the specification extend the given interface?",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 528
    },
    {
      "name": "decl.extends",
      "source_code": "    def extends(self, interface, strict=True):\n        \"\"\"Does the specification extend the given interface?",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 528
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._getEmpty",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
      "line": 87,
      "caller": "test_extends_empty",
      "source_code": "    def _getEmpty(self):\n        from zope.interface.declarations import Declaration\n        return Declaration()\n\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_extends_empty",
      "source_code": ""
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_extends_empty",
      "source_code": ""
    },
    {
      "function": "decl.extends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 528,
      "caller": "test_extends_empty",
      "source_code": "    def extends(self, interface, strict=True):\n        \"\"\"Does the specification extend the given interface?\n\n        Test whether an interface in the specification extends the\n        given interface\n        \"\"\"\n        return (\n            (interface in self._implied) and (\n                (not strict) or (self != interface)\n            )\n        )\n\n"
    },
    {
      "function": "decl.extends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 528,
      "caller": "test_extends_empty",
      "source_code": "    def extends(self, interface, strict=True):\n        \"\"\"Does the specification extend the given interface?\n\n        Test whether an interface in the specification extends the\n        given interface\n        \"\"\"\n        return (\n            (interface in self._implied) and (\n                (not strict) or (self != interface)\n            )\n        )\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_extends_empty(self):\n        from zope.interface.interface import Interface\n        decl = self._getEmpty()\n        self.assertTrue(decl.extends(Interface))\n        self.assertTrue(decl.extends(Interface, strict=True))"
}