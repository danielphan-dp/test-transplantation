{
  "test_name": "test_get_factory",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_response.py",
  "static_methods": [
    {
      "name": "Registry",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_get_response_factory",
      "source_code": "def _get_response_factory(registry):\n    \"\"\"Obtain a :class: `pyramid.response.Response` using the\n    `pyramid.interfaces.IResponseFactory`.\n    \"\"\"\n    response_factory = registry.queryUtility(\n        IResponseFactory, default=lambda r: Response()\n    )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/response.py",
      "line_number": 185
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_get_response_factory",
      "source_code": "def _get_response_factory(registry):\n    \"\"\"Obtain a :class: `pyramid.response.Response` using the\n    `pyramid.interfaces.IResponseFactory`.\n    \"\"\"\n    response_factory = registry.queryUtility(\n        IResponseFactory, default=lambda r: Response()\n    )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/response.py",
      "line_number": 185
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "Registry",
      "filename": "",
      "line": 0,
      "caller": "test_get_factory",
      "source_code": ""
    },
    {
      "function": "_get_response_factory",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/response.py",
      "line": 185,
      "caller": "test_get_factory",
      "source_code": "def _get_response_factory(registry):\n    \"\"\"Obtain a :class: `pyramid.response.Response` using the\n    `pyramid.interfaces.IResponseFactory`.\n    \"\"\"\n    response_factory = registry.queryUtility(\n        IResponseFactory, default=lambda r: Response()\n    )\n\n    return response_factory\n\n\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_get_factory",
      "source_code": ""
    },
    {
      "function": "_get_response_factory",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/response.py",
      "line": 185,
      "caller": "test_get_factory",
      "source_code": "def _get_response_factory(registry):\n    \"\"\"Obtain a :class: `pyramid.response.Response` using the\n    `pyramid.interfaces.IResponseFactory`.\n    \"\"\"\n    response_factory = registry.queryUtility(\n        IResponseFactory, default=lambda r: Response()\n    )\n\n    return response_factory\n\n\n"
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_get_factory",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_get_factory(self):\n        from pyramid.registry import Registry\n        from pyramid.response import Response, _get_response_factory\n\n        registry = Registry()\n        response = _get_response_factory(registry)(None)\n        self.assertTrue(isinstance(response, Response))"
}