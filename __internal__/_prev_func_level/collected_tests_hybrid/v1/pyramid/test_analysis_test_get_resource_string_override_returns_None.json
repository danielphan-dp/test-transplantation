{
  "test_name": "test_get_resource_string_override_returns_None",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
  "static_methods": [
    {
      "name": "DummyOverrides",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._registerOverrides",
      "source_code": "    def _registerOverrides(self, overrides, name='tests.test_config'):\n        from pyramid.interfaces import IPackageOverrides\n        from pyramid.threadlocal import get_current_registry",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
      "line_number": 346
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "provider.get_resource_string",
      "source_code": "    def get_resource_string(manager, resource_name):\n        \"\"\"Return a string containing the contents of `resource_name`",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line_number": 538
    },
    {
      "name": "_assertBody",
      "source_code": "def _assertBody(body, filename):\n    if defaultlocale is None:  # pragma: no cover\n        # If system locale does not have an encoding then default to utf-8\n        filename = filename.encode('utf-8')\n    # strip both \\n and \\r for windows\n    body = body.replace(b'\\r', b'')\n    body = body.replace(b'\\n', b'')\n    data = read_(filename)\n    data = data.replace(b'\\r', b'')\n    data = data.replace(b'\\n', b'')\n    assert body == data",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_integration.py",
      "line_number": 1017
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyOverrides",
      "filename": "",
      "line": 0,
      "caller": "test_get_resource_string_override_returns_None",
      "source_code": ""
    },
    {
      "function": "self._registerOverrides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
      "line": 346,
      "caller": "test_get_resource_string_override_returns_None",
      "source_code": "    def _registerOverrides(self, overrides, name='tests.test_config'):\n        from pyramid.interfaces import IPackageOverrides\n        from pyramid.threadlocal import get_current_registry\n\n        reg = get_current_registry()\n        reg.registerUtility(overrides, IPackageOverrides, name=name)\n\n"
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_get_resource_string_override_returns_None",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "provider.get_resource_string",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line": 538,
      "caller": "test_get_resource_string_override_returns_None",
      "source_code": "    def get_resource_string(manager, resource_name):\n        \"\"\"Return a string containing the contents of `resource_name`\n\n        `manager` must be an ``IResourceManager``\"\"\"\n\n"
    },
    {
      "function": "_assertBody",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_integration.py",
      "line": 1017,
      "caller": "test_get_resource_string_override_returns_None",
      "source_code": "def _assertBody(body, filename):\n    if defaultlocale is None:  # pragma: no cover\n        # If system locale does not have an encoding then default to utf-8\n        filename = filename.encode('utf-8')\n    # strip both \\n and \\r for windows\n    body = body.replace(b'\\r', b'')\n    body = body.replace(b'\\n', b'')\n    data = read_(filename)\n    data = data.replace(b'\\r', b'')\n    data = data.replace(b'\\n', b'')\n    assert body == data\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_get_resource_string_override_returns_None(self):\n        overrides = DummyOverrides(None)\n        self._registerOverrides(overrides)\n        resource_name = 'test_assets.py'\n        import tests.test_config\n\n        provider = self._makeOne(tests.test_config)\n        result = provider.get_resource_string(None, resource_name)\n        _assertBody(result, os.path.join(here, resource_name))"
}