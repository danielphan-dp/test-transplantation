{
  "test_name": "test_is_authenticated_true_matches",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_predicates.py",
  "static_methods": [
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "DummyRequest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "predicates",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Dummy",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_is_authenticated_true_matches",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "DummyRequest",
      "filename": "",
      "line": 0,
      "caller": "test_is_authenticated_true_matches",
      "source_code": ""
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_is_authenticated_true_matches",
      "source_code": ""
    },
    {
      "function": "predicates",
      "filename": "",
      "line": 0,
      "caller": "test_is_authenticated_true_matches",
      "source_code": ""
    },
    {
      "function": "Dummy",
      "filename": "",
      "line": 0,
      "caller": "test_is_authenticated_true_matches",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_is_authenticated_true_matches(self):\n        _, predicates, _ = self._callFUT(is_authenticated=True)\n        request = DummyRequest()\n        request.is_authenticated = True\n        self.assertTrue(predicates[0](Dummy(), request))"
}