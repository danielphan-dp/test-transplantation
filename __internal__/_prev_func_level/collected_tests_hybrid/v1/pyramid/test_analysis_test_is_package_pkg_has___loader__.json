{
  "test_name": "test_is_package_pkg_has___loader__",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
  "static_methods": [
    {
      "name": "DummyPackage",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyLoader",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "po.is_package",
      "source_code": "    def is_package(self, fullname):\n        \"\"\"\n        Return true, if the named module is a package.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/six.py",
      "line_number": 219
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyPackage",
      "filename": "",
      "line": 0,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": ""
    },
    {
      "function": "DummyLoader",
      "filename": "",
      "line": 0,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": ""
    },
    {
      "function": "po.is_package",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/six.py",
      "line": 219,
      "caller": "test_is_package_pkg_has___loader__",
      "source_code": "    def is_package(self, fullname):\n        \"\"\"\n        Return true, if the named module is a package.\n\n        We need this method to get correct spec objects with\n        Python 3.4 (see PEP451)\n        \"\"\"\n        return hasattr(self.__get_module(fullname), \"__path__\")\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_is_package_pkg_has___loader__(self):\n        package = DummyPackage('package')\n        loader = package.__loader__ = DummyLoader()\n        po = self._makeOne(package)\n        self.assertTrue(po.is_package('whatever'))\n        self.assertEqual(loader._is_package, 'whatever')"
}