{
  "test_name": "test_it_notsubmitted",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki/src/tests/tests/test_views.py",
  "static_methods": [
    {
      "name": "testing.DummyResource",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "testing.DummyRequest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "request.resource_url",
      "source_code": "def resource_url(resource, request, *elements, **kw):\n    \"\"\"\n    This is a backwards compatibility function.  Its result is the same as\n    calling::",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/url.py",
      "line_number": 807
    }
  ],
  "dynamic_methods": [
    {
      "function": "testing.DummyResource",
      "filename": "",
      "line": 0,
      "caller": "test_it_notsubmitted",
      "source_code": ""
    },
    {
      "function": "testing.DummyRequest",
      "filename": "",
      "line": 0,
      "caller": "test_it_notsubmitted",
      "source_code": ""
    },
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_it_notsubmitted",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "request.resource_url",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/url.py",
      "line": 807,
      "caller": "test_it_notsubmitted",
      "source_code": "def resource_url(resource, request, *elements, **kw):\n    \"\"\"\n    This is a backwards compatibility function.  Its result is the same as\n    calling::\n\n        request.resource_url(resource, *elements, **kw)\n\n    See :meth:`pyramid.request.Request.resource_url` for more information.\n    \"\"\"\n    return request.resource_url(resource, *elements, **kw)\n\n\n"
    }
  ],
  "assertions": [
    "assert info['page'] == context",
    "assert info['save_url'] == request.resource_url(context, 'edit_page')"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_it_notsubmitted(self):\n        context = testing.DummyResource()\n        request = testing.DummyRequest()\n        info = self._callFUT(context, request)\n        assert info['page'] == context\n        assert info['save_url'] == request.resource_url(context, 'edit_page')"
}