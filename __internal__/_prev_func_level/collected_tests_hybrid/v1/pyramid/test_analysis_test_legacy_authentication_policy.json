{
  "test_name": "test_legacy_authentication_policy",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
  "static_methods": [
    {
      "name": "_makeRequest",
      "source_code": "def _makeRequest(environ=None):\n    from pyramid.registry import Registry",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_traversal.py",
      "line_number": 1298
    },
    {
      "name": "_registerAuthenticationPolicy",
      "source_code": "def _registerAuthenticationPolicy(reg, result):\n    from pyramid.interfaces import IAuthenticationPolicy",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line_number": 629
    },
    {
      "name": "_registerLegacySecurityPolicy",
      "source_code": "def _registerLegacySecurityPolicy(reg):\n    from pyramid.interfaces import ISecurityPolicy\n    from pyramid.security import LegacySecurityPolicy",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line_number": 620
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "_makeRequest",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_traversal.py",
      "line": 1298,
      "caller": "test_legacy_authentication_policy",
      "source_code": "def _makeRequest(environ=None):\n    from pyramid.registry import Registry\n\n    request = DummyRequest()\n    request.registry = Registry()\n    return request\n"
    },
    {
      "function": "_registerAuthenticationPolicy",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line": 629,
      "caller": "test_legacy_authentication_policy",
      "source_code": "def _registerAuthenticationPolicy(reg, result):\n    from pyramid.interfaces import IAuthenticationPolicy\n\n    policy = DummyAuthenticationPolicy(result)\n    reg.registerUtility(policy, IAuthenticationPolicy)\n    return policy\n\n\n"
    },
    {
      "function": "_registerLegacySecurityPolicy",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line": 620,
      "caller": "test_legacy_authentication_policy",
      "source_code": "def _registerLegacySecurityPolicy(reg):\n    from pyramid.interfaces import ISecurityPolicy\n    from pyramid.security import LegacySecurityPolicy\n\n    policy = LegacySecurityPolicy()\n    reg.registerUtility(policy, ISecurityPolicy)\n    return policy\n\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_legacy_authentication_policy",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_legacy_authentication_policy(self):\n        request = _makeRequest()\n        _registerAuthenticationPolicy(request.registry, 'yo')\n        _registerLegacySecurityPolicy(request.registry)\n        self.assertEqual(request.effective_principals, 'yo')"
}