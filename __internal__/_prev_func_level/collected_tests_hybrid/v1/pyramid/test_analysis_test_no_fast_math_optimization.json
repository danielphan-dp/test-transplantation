{
  "test_name": "test_no_fast_math_optimization",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_compile_flags.py",
  "static_methods": [
    {
      "name": "self.assertNotEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertNotEqual",
      "filename": "",
      "line": 0,
      "caller": "test_no_fast_math_optimization",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_no_fast_math_optimization(self):\n        # Building with -Ofast enables -ffast-math, which sets certain FPU\n        # flags that can cause breakage elsewhere.  A library such as BTrees\n        # has no business changing global FPU flags for the entire process.\n        zero_bits = struct.unpack(\"!Q\", struct.pack(\"!d\", 0.0))[0]\n        next_up = zero_bits + 1\n        smallest_subnormal = struct.unpack(\"!d\", struct.pack(\"!Q\", next_up))[0]\n        self.assertNotEqual(smallest_subnormal, 0.0)"
}