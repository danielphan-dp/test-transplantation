{
  "test_name": "test_redundant_with_super_still_implements",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
  "static_methods": [
    {
      "name": "self._check_implementer",
      "source_code": "    def _check_implementer(self, Foo,\n                           orig_spec=None,\n                           spec_name=__name__ + '.Foo',\n                           inherit=\"not given\"):\n        from zope.interface.declarations import ClassProvides\n        from zope.interface.interface import InterfaceClass\n        IFoo = InterfaceClass('IFoo')",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
      "line_number": 911
    },
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "IBase.implementedBy",
      "source_code": "    def implementedBy(self, cls):\n        \"\"\"Test whether the specification is implemented by a class or factory.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 165
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._check_implementer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
      "line": 911,
      "caller": "test_redundant_with_super_still_implements",
      "source_code": "    def _check_implementer(self, Foo,\n                           orig_spec=None,\n                           spec_name=__name__ + '.Foo',\n                           inherit=\"not given\"):\n        from zope.interface.declarations import ClassProvides\n        from zope.interface.interface import InterfaceClass\n        IFoo = InterfaceClass('IFoo')\n\n        returned = self._callFUT(Foo, IFoo)\n\n        self.assertIs(returned, Foo)\n        spec = Foo.__implemented__\n        if orig_spec is not None:\n            self.assertIs(spec, orig_spec)\n\n        self.assertEqual(spec.__name__,\n                         spec_name)\n        inherit = Foo if inherit == \"not given\" else inherit\n        self.assertIs(spec.inherit, inherit)\n        self.assertIs(Foo.__implemented__, spec)\n        if self.FUT_SETS_PROVIDED_BY:\n            self.assertIsInstance(Foo.__providedBy__, ClassProvides)\n            self.assertIsInstance(Foo.__provides__, ClassProvides)\n            self.assertEqual(Foo.__provides__, Foo.__providedBy__)\n\n        return Foo, IFoo\n\n"
    },
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_redundant_with_super_still_implements",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_redundant_with_super_still_implements",
      "source_code": ""
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_redundant_with_super_still_implements",
      "source_code": ""
    },
    {
      "function": "IBase.implementedBy",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 165,
      "caller": "test_redundant_with_super_still_implements",
      "source_code": "    def implementedBy(self, cls):\n        \"\"\"Test whether the specification is implemented by a class or factory.\n\n        Raise TypeError if argument is neither a class nor a callable.\n        \"\"\"\n        spec = implementedBy(cls)\n        return self in spec._implied\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_redundant_with_super_still_implements(self):\n        Base, IBase = self._check_implementer(\n            type('Foo', (object,), {}),\n            inherit=None,\n        )\n\n        class Child(Base):\n            pass\n\n        self._callFUT(Child, IBase)\n        self.assertTrue(IBase.implementedBy(Child))"
}