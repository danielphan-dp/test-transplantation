{
  "test_name": "test_taggedValues",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_element.py",
  "static_methods": [
    {
      "name": "Element",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Element",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "e1.setTaggedValue",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 120
    },
    {
      "name": "e2.setTaggedValue",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "e1.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    },
    {
      "name": "e2.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    }
  ],
  "dynamic_methods": [
    {
      "function": "Element",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValues",
      "source_code": ""
    },
    {
      "function": "Element",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValues",
      "source_code": ""
    },
    {
      "function": "e1.setTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 120,
      "caller": "test_taggedValues",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value\n\n"
    },
    {
      "function": "e2.setTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 120,
      "caller": "test_taggedValues",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValues",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValues",
      "source_code": ""
    },
    {
      "function": "e1.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_taggedValues",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    },
    {
      "function": "e2.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_taggedValues",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_taggedValues(self):\n        \"\"\"Test that we can update tagged values of more than one element\n        \"\"\"\n\n        e1 = Element(\"foo\")\n        e2 = Element(\"bar\")\n        e1.setTaggedValue(\"x\", 1)\n        e2.setTaggedValue(\"x\", 2)\n        self.assertEqual(e1.getTaggedValue(\"x\"), 1)\n        self.assertEqual(e2.getTaggedValue(\"x\"), 2)"
}