{
  "test_name": "test_unsubscribe",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "DummyDependent",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "spec.subscribe",
      "source_code": "    def subscribe(self, callback, existing=True):\n        \"\"\"Invoke `callback` for all distributions",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line_number": 907
    },
    {
      "name": "spec.subscribe",
      "source_code": "    def subscribe(self, callback, existing=True):\n        \"\"\"Invoke `callback` for all distributions",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line_number": 907
    },
    {
      "name": "spec.unsubscribe",
      "source_code": "    def unsubscribe(self, dependent):\n        try:\n            n = self._dependents[dependent]\n        except TypeError:\n            raise KeyError(dependent)\n        n -= 1\n        if not n:\n            del self.dependents[dependent]\n        else:\n            assert n > 0\n            self.dependents[dependent] = n",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 393
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "spec.unsubscribe",
      "source_code": "    def unsubscribe(self, dependent):\n        try:\n            n = self._dependents[dependent]\n        except TypeError:\n            raise KeyError(dependent)\n        n -= 1\n        if not n:\n            del self.dependents[dependent]\n        else:\n            assert n > 0\n            self.dependents[dependent] = n",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 393
    },
    {
      "name": "self.assertNotIn",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_unsubscribe",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "DummyDependent",
      "filename": "",
      "line": 0,
      "caller": "test_unsubscribe",
      "source_code": ""
    },
    {
      "function": "spec.subscribe",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line": 907,
      "caller": "test_unsubscribe",
      "source_code": "    def subscribe(self, callback, existing=True):\n        \"\"\"Invoke `callback` for all distributions\n\n        If `existing=True` (default),\n        call on all existing ones, as well.\n        \"\"\"\n        if callback in self.callbacks:\n            return\n        self.callbacks.append(callback)\n        if not existing:\n            return\n        for dist in self:\n            callback(dist)\n\n"
    },
    {
      "function": "spec.subscribe",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pkg_resources/__init__.py",
      "line": 907,
      "caller": "test_unsubscribe",
      "source_code": "    def subscribe(self, callback, existing=True):\n        \"\"\"Invoke `callback` for all distributions\n\n        If `existing=True` (default),\n        call on all existing ones, as well.\n        \"\"\"\n        if callback in self.callbacks:\n            return\n        self.callbacks.append(callback)\n        if not existing:\n            return\n        for dist in self:\n            callback(dist)\n\n"
    },
    {
      "function": "spec.unsubscribe",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 393,
      "caller": "test_unsubscribe",
      "source_code": "    def unsubscribe(self, dependent):\n        try:\n            n = self._dependents[dependent]\n        except TypeError:\n            raise KeyError(dependent)\n        n -= 1\n        if not n:\n            del self.dependents[dependent]\n        else:\n            assert n > 0\n            self.dependents[dependent] = n\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_unsubscribe",
      "source_code": ""
    },
    {
      "function": "spec.unsubscribe",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 393,
      "caller": "test_unsubscribe",
      "source_code": "    def unsubscribe(self, dependent):\n        try:\n            n = self._dependents[dependent]\n        except TypeError:\n            raise KeyError(dependent)\n        n -= 1\n        if not n:\n            del self.dependents[dependent]\n        else:\n            assert n > 0\n            self.dependents[dependent] = n\n\n"
    },
    {
      "function": "self.assertNotIn",
      "filename": "",
      "line": 0,
      "caller": "test_unsubscribe",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_unsubscribe(self):\n        spec = self._makeOne()\n        dep = DummyDependent()\n        spec.subscribe(dep)\n        spec.subscribe(dep)\n        spec.unsubscribe(dep)\n        self.assertEqual(spec.dependents[dep], 1)\n        spec.unsubscribe(dep)\n        self.assertNotIn(dep, spec.dependents)"
}