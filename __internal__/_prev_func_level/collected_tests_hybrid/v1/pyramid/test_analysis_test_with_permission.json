{
  "test_name": "test_with_permission",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
  "static_methods": [
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "directlyProvides",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n    ):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare interfaces declared directly for an object.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 684
    },
    {
      "name": "self._registerSecuredView",
      "source_code": "    def _registerSecuredView(self, view_name, allow=True):\n        from zope.interface import Interface",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line_number": 245
    },
    {
      "name": "testing.DummyRequest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "directlyProvides",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n    ):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare interfaces declared directly for an object.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 684
    },
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_with_permission",
      "source_code": ""
    },
    {
      "function": "directlyProvides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 684,
      "caller": "test_with_permission",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n"
    },
    {
      "function": "self._registerSecuredView",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_security.py",
      "line": 245,
      "caller": "test_with_permission",
      "source_code": "    def _registerSecuredView(self, view_name, allow=True):\n        from zope.interface import Interface\n\n        from pyramid.interfaces import ISecuredView, IViewClassifier\n        from pyramid.threadlocal import get_current_registry\n\n        class Checker:\n            def __permitted__(self, context, request):\n                self.context = context\n                self.request = request\n                return allow\n\n        checker = Checker()\n        reg = get_current_registry()\n        reg.registerAdapter(\n            checker,\n            (IViewClassifier, Interface, Interface),\n            ISecuredView,\n            view_name,\n        )\n        return checker\n\n"
    },
    {
      "function": "testing.DummyRequest",
      "filename": "",
      "line": 0,
      "caller": "test_with_permission",
      "source_code": ""
    },
    {
      "function": "directlyProvides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 684,
      "caller": "test_with_permission",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n"
    },
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_with_permission",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_with_permission",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_with_permission(self):\n        from zope.interface import Interface, directlyProvides\n\n        from pyramid.interfaces import IRequest\n\n        class IContext(Interface):\n            pass\n\n        context = DummyContext()\n        directlyProvides(context, IContext)\n        self._registerSecuredView('', True)\n        request = testing.DummyRequest({})\n        directlyProvides(request, IRequest)\n        result = self._callFUT(context, request, '')\n        self.assertTrue(result)"
}