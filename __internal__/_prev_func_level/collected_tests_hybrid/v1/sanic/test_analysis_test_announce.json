{
  "test_name": "test_announce",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_dist.py",
  "static_methods": [
    {
      "name": "Distribution",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "dist.announce",
      "source_code": "    def announce(self, msg, level=logging.INFO):\n        log.log(level, msg)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dist.py",
      "line_number": 945
    }
  ],
  "dynamic_methods": [
    {
      "function": "Distribution",
      "filename": "",
      "line": 0,
      "caller": "test_announce",
      "source_code": ""
    },
    {
      "function": "dist.announce",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dist.py",
      "line": 945,
      "caller": "test_announce",
      "source_code": "    def announce(self, msg, level=logging.INFO):\n        log.log(level, msg)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_announce(self):\n        # make sure the level is known\n        dist = Distribution()\n        with pytest.raises(TypeError):\n            dist.announce('ok', level='ok2')"
}