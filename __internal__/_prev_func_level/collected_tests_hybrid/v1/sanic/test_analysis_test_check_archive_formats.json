{
  "test_name": "test_check_archive_formats",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_archive_util.py",
  "static_methods": [
    {
      "name": "check_archive_formats",
      "source_code": "def check_archive_formats(formats):\n    \"\"\"Returns the first format from the 'format' list that is unknown.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/archive_util.py",
      "line_number": 196
    },
    {
      "name": "check_archive_formats",
      "source_code": "def check_archive_formats(formats):\n    \"\"\"Returns the first format from the 'format' list that is unknown.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/archive_util.py",
      "line_number": 196
    }
  ],
  "dynamic_methods": [
    {
      "function": "check_archive_formats",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/archive_util.py",
      "line": 196,
      "caller": "test_check_archive_formats",
      "source_code": "def check_archive_formats(formats):\n    \"\"\"Returns the first format from the 'format' list that is unknown.\n\n    If all formats are known, returns None\n    \"\"\"\n    for format in formats:\n        if format not in ARCHIVE_FORMATS:\n            return format\n    return None\n\n\n"
    },
    {
      "function": "check_archive_formats",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/archive_util.py",
      "line": 196,
      "caller": "test_check_archive_formats",
      "source_code": "def check_archive_formats(formats):\n    \"\"\"Returns the first format from the 'format' list that is unknown.\n\n    If all formats are known, returns None\n    \"\"\"\n    for format in formats:\n        if format not in ARCHIVE_FORMATS:\n            return format\n    return None\n\n\n"
    }
  ],
  "assertions": [
    "assert check_archive_formats(['gztar', 'xxx', 'zip']) == 'xxx'",
    "assert check_archive_formats(['gztar', 'bztar', 'xztar', 'ztar', 'tar', 'zip']) is None"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_check_archive_formats(self):\n        assert check_archive_formats(['gztar', 'xxx', 'zip']) == 'xxx'\n        assert (\n            check_archive_formats(['gztar', 'bztar', 'xztar', 'ztar', 'tar', 'zip'])\n            is None\n        )"
}