{
  "test_name": "test_ensure_relative",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_dir_util.py",
  "static_methods": [
    {
      "name": "ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line_number": 236
    },
    {
      "name": "ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line_number": 236
    },
    {
      "name": "ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line_number": 236
    },
    {
      "name": "ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line_number": 236
    }
  ],
  "dynamic_methods": [
    {
      "function": "ensure_relative",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line": 236,
      "caller": "test_ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.\n\n    This is useful to make 'path' the second argument to os.path.join().\n    \"\"\"\n    drive, path = os.path.splitdrive(path)\n    if path[0:1] == os.sep:\n        path = drive + path[1:]\n    return path\n"
    },
    {
      "function": "ensure_relative",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line": 236,
      "caller": "test_ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.\n\n    This is useful to make 'path' the second argument to os.path.join().\n    \"\"\"\n    drive, path = os.path.splitdrive(path)\n    if path[0:1] == os.sep:\n        path = drive + path[1:]\n    return path\n"
    },
    {
      "function": "ensure_relative",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line": 236,
      "caller": "test_ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.\n\n    This is useful to make 'path' the second argument to os.path.join().\n    \"\"\"\n    drive, path = os.path.splitdrive(path)\n    if path[0:1] == os.sep:\n        path = drive + path[1:]\n    return path\n"
    },
    {
      "function": "ensure_relative",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/dir_util.py",
      "line": 236,
      "caller": "test_ensure_relative",
      "source_code": "def ensure_relative(path):\n    \"\"\"Take the full path 'path', and make it a relative path.\n\n    This is useful to make 'path' the second argument to os.path.join().\n    \"\"\"\n    drive, path = os.path.splitdrive(path)\n    if path[0:1] == os.sep:\n        path = drive + path[1:]\n    return path\n"
    }
  ],
  "assertions": [
    "assert ensure_relative('/home/foo') == 'home/foo'",
    "assert ensure_relative('some/path') == 'some/path'",
    "assert ensure_relative('c:\\\\home\\\\foo') == 'c:home\\\\foo'",
    "assert ensure_relative('home\\\\foo') == 'home\\\\foo'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_ensure_relative(self):\n        if os.sep == '/':\n            assert ensure_relative('/home/foo') == 'home/foo'\n            assert ensure_relative('some/path') == 'some/path'\n        else:  # \\\\\n            assert ensure_relative('c:\\\\home\\\\foo') == 'c:home\\\\foo'\n            assert ensure_relative('home\\\\foo') == 'home\\\\foo'"
}