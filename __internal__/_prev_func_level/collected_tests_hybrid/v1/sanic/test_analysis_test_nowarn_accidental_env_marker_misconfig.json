{
  "test_name": "test_nowarn_accidental_env_marker_misconfig",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/config/test_setupcfg.py",
  "static_methods": [
    {
      "name": "get_dist",
      "source_code": "    def get_dist(self) -> BaseDistribution:\n        if self.metadata_directory:\n            return get_directory_distribution(self.metadata_directory)\n        elif self.local_file_path and self.is_wheel:\n            return get_wheel_distribution(\n                FilesystemWheel(self.local_file_path), canonicalize_name(self.name)\n            )\n        raise AssertionError(\n            f\"InstallRequirement {self} has no metadata directory and no wheel: \"\n            f\"can't make a distribution.\"\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/req/req_install.py",
      "line_number": 568
    },
    {
      "name": "fake_env",
      "source_code": "def fake_env(\n    tmpdir, setup_cfg, setup_py=None, encoding='ascii', package_path='fake_package'",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/config/test_setupcfg.py",
      "line_number": 36
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "get_dist",
      "source_code": "    def get_dist(self) -> BaseDistribution:\n        if self.metadata_directory:\n            return get_directory_distribution(self.metadata_directory)\n        elif self.local_file_path and self.is_wheel:\n            return get_wheel_distribution(\n                FilesystemWheel(self.local_file_path), canonicalize_name(self.name)\n            )\n        raise AssertionError(\n            f\"InstallRequirement {self} has no metadata directory and no wheel: \"\n            f\"can't make a distribution.\"\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/req/req_install.py",
      "line_number": 568
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "get_dist",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/req/req_install.py",
      "line": 568,
      "caller": "test_nowarn_accidental_env_marker_misconfig",
      "source_code": "    def get_dist(self) -> BaseDistribution:\n        if self.metadata_directory:\n            return get_directory_distribution(self.metadata_directory)\n        elif self.local_file_path and self.is_wheel:\n            return get_wheel_distribution(\n                FilesystemWheel(self.local_file_path), canonicalize_name(self.name)\n            )\n        raise AssertionError(\n            f\"InstallRequirement {self} has no metadata directory and no wheel: \"\n            f\"can't make a distribution.\"\n        )\n\n"
    },
    {
      "function": "fake_env",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/config/test_setupcfg.py",
      "line": 36,
      "caller": "test_nowarn_accidental_env_marker_misconfig",
      "source_code": "def fake_env(\n    tmpdir, setup_cfg, setup_py=None, encoding='ascii', package_path='fake_package'\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_nowarn_accidental_env_marker_misconfig",
      "source_code": ""
    },
    {
      "function": "get_dist",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/req/req_install.py",
      "line": 568,
      "caller": "test_nowarn_accidental_env_marker_misconfig",
      "source_code": "    def get_dist(self) -> BaseDistribution:\n        if self.metadata_directory:\n            return get_directory_distribution(self.metadata_directory)\n        elif self.local_file_path and self.is_wheel:\n            return get_wheel_distribution(\n                FilesystemWheel(self.local_file_path), canonicalize_name(self.name)\n            )\n        raise AssertionError(\n            f\"InstallRequirement {self} has no metadata directory and no wheel: \"\n            f\"can't make a distribution.\"\n        )\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_nowarn_accidental_env_marker_misconfig",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert len(recwarn) == num_warnings"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_nowarn_accidental_env_marker_misconfig(self, config, tmpdir, recwarn):\n        fake_env(tmpdir, config)\n        num_warnings = len(recwarn)\n        with get_dist(tmpdir) as _:\n            pass\n        # The examples are valid, no warnings shown\n        assert len(recwarn) == num_warnings"
}