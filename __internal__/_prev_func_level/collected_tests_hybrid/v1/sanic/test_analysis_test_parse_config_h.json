{
  "test_name": "test_parse_config_h",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sysconfig.py",
  "static_methods": [
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_parse_config_h",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_parse_config_h",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_parse_config_h",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_parse_config_h",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_parse_config_h",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert input is result",
    "assert isinstance(result, dict)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_parse_config_h(self):\n        config_h = sysconfig.get_config_h_filename()\n        input = {}\n        with open(config_h, encoding=\"utf-8\") as f:\n            result = sysconfig.parse_config_h(f, g=input)\n        assert input is result\n        with open(config_h, encoding=\"utf-8\") as f:\n            result = sysconfig.parse_config_h(f)\n        assert isinstance(result, dict)"
}