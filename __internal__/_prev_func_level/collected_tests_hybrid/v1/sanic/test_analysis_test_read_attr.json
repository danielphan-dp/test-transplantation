{
  "test_name": "test_read_attr",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/config/test_expand.py",
  "static_methods": [
    {
      "name": "monkeypatch.context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "write_files",
      "source_code": "    def write_files(self, base_dir):\n        log.info(f\"creating '{self.filename}' and adding '{base_dir}' to it\")\n        deferred = []\n        for root, dirnames, filenames in os.walk(base_dir):\n            # Sort the directory names so that `os.walk` will walk them in a\n            # defined order on the next iteration.\n            dirnames.sort()\n            for name in sorted(filenames):\n                path = os.path.normpath(os.path.join(root, name))\n                if os.path.isfile(path):\n                    arcname = os.path.relpath(path, base_dir).replace(os.path.sep, \"/\")\n                    if arcname == self.record_path:\n                        pass\n                    elif root.endswith(\".dist-info\"):\n                        deferred.append((path, arcname))\n                    else:\n                        self.write(path, arcname)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_vendor/wheel/wheelfile.py",
      "line_number": 122
    },
    {
      "name": "expand.read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line_number": 153
    },
    {
      "name": "monkeypatch.context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "m.chdir",
      "source_code": "def chdir(d):\n    cwd = os.getcwd()\n    try:\n        os.chdir(d)\n        yield\n    finally:\n        os.chdir(cwd)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/distlib/util.py",
      "line_number": 424
    },
    {
      "name": "expand.read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line_number": 153
    },
    {
      "name": "expand.read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line_number": 153
    },
    {
      "name": "expand.read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line_number": 153
    }
  ],
  "dynamic_methods": [
    {
      "function": "monkeypatch.context",
      "filename": "",
      "line": 0,
      "caller": "test_read_attr",
      "source_code": ""
    },
    {
      "function": "write_files",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_vendor/wheel/wheelfile.py",
      "line": 122,
      "caller": "test_read_attr",
      "source_code": "    def write_files(self, base_dir):\n        log.info(f\"creating '{self.filename}' and adding '{base_dir}' to it\")\n        deferred = []\n        for root, dirnames, filenames in os.walk(base_dir):\n            # Sort the directory names so that `os.walk` will walk them in a\n            # defined order on the next iteration.\n            dirnames.sort()\n            for name in sorted(filenames):\n                path = os.path.normpath(os.path.join(root, name))\n                if os.path.isfile(path):\n                    arcname = os.path.relpath(path, base_dir).replace(os.path.sep, \"/\")\n                    if arcname == self.record_path:\n                        pass\n                    elif root.endswith(\".dist-info\"):\n                        deferred.append((path, arcname))\n                    else:\n                        self.write(path, arcname)\n\n        deferred.sort()\n        for path, arcname in deferred:\n            self.write(path, arcname)\n\n"
    },
    {
      "function": "expand.read_attr",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line": 153,
      "caller": "test_read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,\n"
    },
    {
      "function": "monkeypatch.context",
      "filename": "",
      "line": 0,
      "caller": "test_read_attr",
      "source_code": ""
    },
    {
      "function": "m.chdir",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/distlib/util.py",
      "line": 424,
      "caller": "test_read_attr",
      "source_code": "@contextlib.contextmanager\ndef chdir(d):\n    cwd = os.getcwd()\n    try:\n        os.chdir(d)\n        yield\n    finally:\n        os.chdir(cwd)\n\n\n"
    },
    {
      "function": "expand.read_attr",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line": 153,
      "caller": "test_read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,\n"
    },
    {
      "function": "expand.read_attr",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line": 153,
      "caller": "test_read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,\n"
    },
    {
      "function": "expand.read_attr",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/config/expand.py",
      "line": 153,
      "caller": "test_read_attr",
      "source_code": "def read_attr(\n    attr_desc: str,\n    package_dir: Mapping[str, str] | None = None,\n    root_dir: StrPath | None = None,\n"
    }
  ],
  "assertions": [
    "assert values['a'] == 0",
    "assert values['b'] == {42}",
    "assert expand.read_attr('pkg.sub.VERSION', root_dir=tmp_path) == '0.1.1'",
    "assert values['c'] == (0, 1, 1)",
    "assert expand.read_attr('pkg.sub.VERSION') == '0.1.1'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_read_attr(self, tmp_path, monkeypatch):\n        files = {\n            \"pkg/__init__.py\": \"\",\n            \"pkg/sub/__init__.py\": \"VERSION = '0.1.1'\",\n            \"pkg/sub/mod.py\": (\n                \"VALUES = {'a': 0, 'b': {42}, 'c': (0, 1, 1)}\\nraise SystemExit(1)\"\n            ),\n        }\n        write_files(files, tmp_path)\n\n        with monkeypatch.context() as m:\n            m.chdir(tmp_path)\n            # Make sure it can read the attr statically without evaluating the module\n            assert expand.read_attr('pkg.sub.VERSION') == '0.1.1'\n            values = expand.read_attr('lib.mod.VALUES', {'lib': 'pkg/sub'})\n\n        assert values['a'] == 0\n        assert values['b'] == {42}\n\n        # Make sure the same APIs work outside cwd\n        assert expand.read_attr('pkg.sub.VERSION', root_dir=tmp_path) == '0.1.1'\n        values = expand.read_attr('lib.mod.VALUES', {'lib': 'pkg/sub'}, tmp_path)\n        assert values['c'] == (0, 1, 1)"
}