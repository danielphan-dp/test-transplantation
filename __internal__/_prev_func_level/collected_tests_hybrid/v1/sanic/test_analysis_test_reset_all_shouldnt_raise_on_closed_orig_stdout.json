{
  "test_name": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/ansitowin32_test.py",
  "static_methods": [
    {
      "name": "StringIO",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "AnsiToWin32",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "stream.close",
      "source_code": "    def close(self):\n        pass",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line_number": 23
    },
    {
      "name": "converter.reset_all",
      "source_code": "    def reset_all(self):\n        if self.convert:\n            self.call_win32('m', (0,))\n        elif not self.strip and not self.stream.closed:\n            self.wrapped.write(Style.RESET_ALL)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/ansitowin32.py",
      "line_number": 185
    }
  ],
  "dynamic_methods": [
    {
      "function": "StringIO",
      "filename": "",
      "line": 0,
      "caller": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
      "source_code": ""
    },
    {
      "function": "AnsiToWin32",
      "filename": "",
      "line": 0,
      "caller": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
      "source_code": ""
    },
    {
      "function": "stream.close",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line": 23,
      "caller": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
      "source_code": "    def close(self):\n        pass\n\n\n"
    },
    {
      "function": "converter.reset_all",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/ansitowin32.py",
      "line": 185,
      "caller": "test_reset_all_shouldnt_raise_on_closed_orig_stdout",
      "source_code": "    def reset_all(self):\n        if self.convert:\n            self.call_win32('m', (0,))\n        elif not self.strip and not self.stream.closed:\n            self.wrapped.write(Style.RESET_ALL)\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_reset_all_shouldnt_raise_on_closed_orig_stdout(self):\n        stream = StringIO()\n        converter = AnsiToWin32(stream)\n        stream.close()\n\n        converter.reset_all()"
}