{
  "test_name": "test_run_inspector_arbitrary",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/worker/test_inspector.py",
  "static_methods": [
    {
      "name": "http_client.post",
      "source_code": "    def post(self) -> None:\n        return None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/packaging/version.py",
      "line_number": 144
    }
  ],
  "dynamic_methods": [
    {
      "function": "http_client.post",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/packaging/version.py",
      "line": 144,
      "caller": "test_run_inspector_arbitrary",
      "source_code": "    @property\n    def post(self) -> None:\n        return None\n\n"
    }
  ],
  "assertions": [
    "assert response.status == 200",
    "assert response.json == {'meta': {'action': 'foo'}, 'result': 'bar is 99'}"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_run_inspector_arbitrary(http_client):\n    _, response = http_client.post(\"/foo\", json={\"bar\": 99})\n    assert response.status == 200\n    assert response.json == {\"meta\": {\"action\": \"foo\"}, \"result\": \"bar is 99\"}"
}