{
  "test_name": "test_skip_build",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_bdist.py",
  "static_methods": [
    {
      "name": "bdist",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.create_dist",
      "source_code": "    def create_dist(self, pkg_name='foo', **kw):\n        \"\"\"Will generate a test environment.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/support.py",
      "line_number": 38
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "bdist",
      "filename": "",
      "line": 0,
      "caller": "test_skip_build",
      "source_code": ""
    },
    {
      "function": "self.create_dist",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/support.py",
      "line": 38,
      "caller": "test_skip_build",
      "source_code": "    def create_dist(self, pkg_name='foo', **kw):\n        \"\"\"Will generate a test environment.\n\n        This function creates:\n         - a Distribution instance using keywords\n         - a temporary directory with a package structure\n\n        It returns the package directory and the distribution\n        instance.\n        \"\"\"\n        tmp_dir = self.mkdtemp()\n        pkg_dir = os.path.join(tmp_dir, pkg_name)\n        os.mkdir(pkg_dir)\n        dist = Distribution(attrs=kw)\n\n        return pkg_dir, dist\n\n\n"
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_skip_build",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert subcmd.skip_build, f'{name} should take --skip-build from bdist'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_skip_build(self):\n        # bug #10946: bdist --skip-build should trickle down to subcommands\n        dist = self.create_dist()[1]\n        cmd = bdist(dist)\n        cmd.skip_build = True\n        cmd.ensure_finalized()\n        dist.command_obj['bdist'] = cmd\n\n        names = [\n            'bdist_dumb',\n        ]  # bdist_rpm does not support --skip-build\n\n        for name in names:\n            subcmd = cmd.get_finalized_command(name)\n            if getattr(subcmd, '_unsupported', False):\n                # command is not supported on this build\n                continue\n            assert subcmd.skip_build, f'{name} should take --skip-build from bdist'"
}