{
  "test_name": "test_state_values",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/worker/test_state.py",
  "static_methods": [
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "gen_state.values",
      "source_code": "    def values(self):\n        \"\"\"Return a new view of the dictionary's values.\"\"\"\n        return _ValuesView(self._impl)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 109
    },
    {
      "name": "values",
      "source_code": "    def values(self):\n        \"\"\"Return a new view of the dictionary's values.\"\"\"\n        return _ValuesView(self._impl)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 109
    },
    {
      "name": "gen_state",
      "source_code": "def gen_state(**kwargs):\n    return WorkerState({\"foo\": kwargs}, \"foo\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/worker/test_state.py",
      "line_number": 6
    }
  ],
  "dynamic_methods": [
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_state_values",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_state_values",
      "source_code": ""
    },
    {
      "function": "gen_state.values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 109,
      "caller": "test_state_values",
      "source_code": "    def values(self):\n        \"\"\"Return a new view of the dictionary's values.\"\"\"\n        return _ValuesView(self._impl)\n\n"
    },
    {
      "function": "values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 109,
      "caller": "test_state_values",
      "source_code": "    def values(self):\n        \"\"\"Return a new view of the dictionary's values.\"\"\"\n        return _ValuesView(self._impl)\n\n"
    },
    {
      "function": "gen_state",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/worker/test_state.py",
      "line": 6,
      "caller": "test_state_values",
      "source_code": "def gen_state(**kwargs):\n    return WorkerState({\"foo\": kwargs}, \"foo\")\n\n\n"
    }
  ],
  "assertions": [
    "assert list(gen_state(one=1, two=2).values()) == list({'one': 1, 'two': 2}.values())"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_state_values():\n    assert list(gen_state(one=1, two=2).values()) == list(\n        {\"one\": 1, \"two\": 2}.values()\n    )"
}