{
  "test_name": "test_wheel_info",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_wheel.py",
  "static_methods": [
    {
      "name": "Wheel",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Wheel",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "info.keys",
      "source_code": "    def keys(self):\n        \"\"\"Return a new view of the dictionary's keys.\"\"\"\n        return _KeysView(self._impl)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 101
    }
  ],
  "dynamic_methods": [
    {
      "function": "Wheel",
      "filename": "",
      "line": 0,
      "caller": "test_wheel_info",
      "source_code": ""
    },
    {
      "function": "Wheel",
      "filename": "",
      "line": 0,
      "caller": "test_wheel_info",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_wheel_info",
      "source_code": ""
    },
    {
      "function": "info.keys",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 101,
      "caller": "test_wheel_info",
      "source_code": "    def keys(self):\n        \"\"\"Return a new view of the dictionary's keys.\"\"\"\n        return _KeysView(self._impl)\n\n"
    }
  ],
  "assertions": [
    "assert {k: getattr(w, k) for k in info.keys()} == info"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_wheel_info(filename, info):\n    if inspect.isclass(info):\n        with pytest.raises(info):\n            Wheel(filename)\n        return\n    w = Wheel(filename)\n    assert {k: getattr(w, k) for k in info.keys()} == info"
}