{
  "test_name": "test_Cancelled_str",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
  "static_methods": [
    {
      "name": "_core.Cancelled._create",
      "source_code": "    def _create(cls: type[_T], *k, **kw) -> _T:\n        try:\n            return super().__call__(*k, **kw)  # type: ignore[no-any-return,misc]\n        except TypeError:\n            sig = signature(getattr(cls, \"__init__\"))\n            known_kw = {k: v for k, v in kw.items() if k in sig.parameters}\n            from .warning_types import PytestDeprecationWarning",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/nodes.py",
      "line_number": 108
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "_core.Cancelled._create",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/nodes.py",
      "line": 108,
      "caller": "test_Cancelled_str",
      "source_code": "    def _create(cls: type[_T], *k, **kw) -> _T:\n        try:\n            return super().__call__(*k, **kw)  # type: ignore[no-any-return,misc]\n        except TypeError:\n            sig = signature(getattr(cls, \"__init__\"))\n            known_kw = {k: v for k, v in kw.items() if k in sig.parameters}\n            from .warning_types import PytestDeprecationWarning\n\n            warnings.warn(\n                PytestDeprecationWarning(\n                    f\"{cls} is not using a cooperative constructor and only takes {set(known_kw)}.\\n\"\n                    \"See https://docs.pytest.org/en/stable/deprecations.html\"\n                    \"#constructors-of-custom-pytest-node-subclasses-should-take-kwargs \"\n                    \"for more details.\"\n                )\n            )\n\n            return super().__call__(*k, **known_kw)  # type: ignore[no-any-return,misc]\n\n\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_Cancelled_str",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert str(cancelled) == 'Cancelled'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_Cancelled_str() -> None:\n    cancelled = _core.Cancelled._create()\n    assert str(cancelled) == \"Cancelled\""
}