{
  "test_name": "test__keep_alive",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/tests/test_connection.py",
  "static_methods": [
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "Request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "Response",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "_keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line_number": 72
    },
    {
      "name": "Request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Response",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Response",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Response",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "Request",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "Response",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "_keep_alive",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/h11/_connection.py",
      "line": 72,
      "caller": "test__keep_alive",
      "source_code": "def _keep_alive(event: Union[Request, Response]) -> bool:\n    connection = get_comma_header(event.headers, b\"connection\")\n    if b\"close\" in connection:\n        return False\n    if getattr(event, \"http_version\", b\"1.1\") < b\"1.1\":\n        return False\n    return True\n\n\n"
    },
    {
      "function": "Request",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "Request",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "Request",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "Response",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "Response",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    },
    {
      "function": "Response",
      "filename": "",
      "line": 0,
      "caller": "test__keep_alive",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert _keep_alive(Request(method='GET', target='/', headers=[('Host', 'Example.com')]))",
    "assert not _keep_alive(Request(method='GET', target='/', headers=[('Host', 'Example.com'), ('Connection', 'close')]))",
    "assert not _keep_alive(Request(method='GET', target='/', headers=[('Host', 'Example.com'), ('Connection', 'a, b, cLOse, foo')]))",
    "assert not _keep_alive(Request(method='GET', target='/', headers=[], http_version='1.0'))",
    "assert _keep_alive(Response(status_code=200, headers=[]))",
    "assert not _keep_alive(Response(status_code=200, headers=[('Connection', 'close')]))",
    "assert not _keep_alive(Response(status_code=200, headers=[('Connection', 'a, b, cLOse, foo')]))",
    "assert not _keep_alive(Response(status_code=200, headers=[], http_version='1.0'))"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test__keep_alive() -> None:\n    assert _keep_alive(\n        Request(method=\"GET\", target=\"/\", headers=[(\"Host\", \"Example.com\")])\n    )\n    assert not _keep_alive(\n        Request(\n            method=\"GET\",\n            target=\"/\",\n            headers=[(\"Host\", \"Example.com\"), (\"Connection\", \"close\")],\n        )\n    )\n    assert not _keep_alive(\n        Request(\n            method=\"GET\",\n            target=\"/\",\n            headers=[(\"Host\", \"Example.com\"), (\"Connection\", \"a, b, cLOse, foo\")],\n        )\n    )\n    assert not _keep_alive(\n        Request(method=\"GET\", target=\"/\", headers=[], http_version=\"1.0\")  # type: ignore[arg-type]\n    )\n\n    assert _keep_alive(Response(status_code=200, headers=[]))  # type: ignore[arg-type]\n    assert not _keep_alive(Response(status_code=200, headers=[(\"Connection\", \"close\")]))\n    assert not _keep_alive(\n        Response(status_code=200, headers=[(\"Connection\", \"a, b, cLOse, foo\")])\n    )\n    assert not _keep_alive(Response(status_code=200, headers=[], http_version=\"1.0\"))"
}