{
  "test_name": "test_async_methods_generated_once",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_file_io.py",
  "static_methods": [
    {
      "name": "dir",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "dir",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_async_methods_generated_once",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_async_methods_generated_once",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_async_methods_generated_once",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert getattr(async_file, meth_name) is getattr(async_file, meth_name)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_async_methods_generated_once(async_file: AsyncIOWrapper[mock.Mock]) -> None:\n    for meth_name in _FILE_ASYNC_METHODS:\n        if meth_name not in dir(async_file):\n            continue\n\n        assert getattr(async_file, meth_name) is getattr(async_file, meth_name)"
}