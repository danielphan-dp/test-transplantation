{
  "test_name": "test_concat_tb",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
  "static_methods": [
    {
      "name": "get_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line_number": 47
    },
    {
      "name": "get_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line_number": 47
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line_number": 114
    },
    {
      "name": "concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line_number": 114
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line_number": 114
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "extract_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 272
    },
    {
      "name": "concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line_number": 114
    },
    {
      "name": "concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line_number": 114
    },
    {
      "name": "get_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line_number": 47
    },
    {
      "name": "get_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line_number": 47
    }
  ],
  "dynamic_methods": [
    {
      "function": "get_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line": 47,
      "caller": "test_concat_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__\n\n\n"
    },
    {
      "function": "get_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line": 47,
      "caller": "test_concat_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__\n\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "concat_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line": 114,
      "caller": "test_concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None\n"
    },
    {
      "function": "concat_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line": 114,
      "caller": "test_concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "concat_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line": 114,
      "caller": "test_concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "extract_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 272,
      "caller": "test_concat_tb",
      "source_code": "    def extract_tb(tb, limit=0):\n        frames = traceback.extract_tb(tb, limit=limit)\n        frame_summary = frames[-1]\n        return [frame_summary[:2]]\n\n"
    },
    {
      "function": "concat_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line": 114,
      "caller": "test_concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None\n"
    },
    {
      "function": "concat_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_concat_tb.py",
      "line": 114,
      "caller": "test_concat_tb",
      "source_code": "def concat_tb(\n    head: TracebackType | None, tail: TracebackType | None\n"
    },
    {
      "function": "get_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line": 47,
      "caller": "test_concat_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__\n\n\n"
    },
    {
      "function": "get_tb",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_exceptiongroup_gc.py",
      "line": 47,
      "caller": "test_concat_tb",
      "source_code": "def get_tb(raiser: Callable[[], NoReturn]) -> TracebackType | None:\n    return get_exc(raiser).__traceback__\n\n\n"
    }
  ],
  "assertions": [
    "assert extract_tb(tb12) == entries1 + entries2",
    "assert extract_tb(tb21) == entries2 + entries1",
    "assert extract_tb(concat_tb(None, tb1)) == entries1",
    "assert extract_tb(concat_tb(tb1, None)) == entries1",
    "assert concat_tb(None, None) is None",
    "assert extract_tb(get_tb(raiser1)) == entries1",
    "assert extract_tb(get_tb(raiser2)) == entries2"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_concat_tb() -> None:\n    tb1 = get_tb(raiser1)\n    tb2 = get_tb(raiser2)\n\n    # These return a list of (filename, lineno, fn name, text) tuples\n    # https://docs.python.org/3/library/traceback.html#traceback.extract_tb\n    entries1 = extract_tb(tb1)\n    entries2 = extract_tb(tb2)\n\n    tb12 = concat_tb(tb1, tb2)\n    assert extract_tb(tb12) == entries1 + entries2\n\n    tb21 = concat_tb(tb2, tb1)\n    assert extract_tb(tb21) == entries2 + entries1\n\n    # Check degenerate cases\n    assert extract_tb(concat_tb(None, tb1)) == entries1\n    assert extract_tb(concat_tb(tb1, None)) == entries1\n    assert concat_tb(None, None) is None\n\n    # Make sure the original tracebacks didn't get mutated by mistake\n    assert extract_tb(get_tb(raiser1)) == entries1\n    assert extract_tb(get_tb(raiser2)) == entries2"
}