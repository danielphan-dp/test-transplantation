{
  "test_name": "test_csv",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_datastructures.py",
  "static_methods": [
    {
      "name": "CommaSeparatedStrings",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CommaSeparatedStrings",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CommaSeparatedStrings",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CommaSeparatedStrings",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "CommaSeparatedStrings",
      "filename": "",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "CommaSeparatedStrings",
      "filename": "",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "CommaSeparatedStrings",
      "filename": "",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "CommaSeparatedStrings",
      "filename": "",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_csv",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert list(csv) == ['localhost', '127.0.0.1', '0.0.0.0']",
    "assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"",
    "assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"",
    "assert csv[0] == 'localhost'",
    "assert len(csv) == 3",
    "assert list(csv) == ['localhost', '127.0.0.1', '0.0.0.0']",
    "assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"",
    "assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"",
    "assert list(csv) == ['localhost', '127.0.0.1', '0.0.0.0']",
    "assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"",
    "assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"",
    "assert list(csv) == ['localhost', '127.0.0.1', '0.0.0.0']",
    "assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"",
    "assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\""
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_csv() -> None:\n    csv = CommaSeparatedStrings('\"localhost\", \"127.0.0.1\", 0.0.0.0')\n    assert list(csv) == [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"]\n    assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"\n    assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"\n    assert csv[0] == \"localhost\"\n    assert len(csv) == 3\n\n    csv = CommaSeparatedStrings(\"'localhost', '127.0.0.1', 0.0.0.0\")\n    assert list(csv) == [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"]\n    assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"\n    assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"\n\n    csv = CommaSeparatedStrings(\"localhost, 127.0.0.1, 0.0.0.0\")\n    assert list(csv) == [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"]\n    assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"\n    assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\"\n\n    csv = CommaSeparatedStrings([\"localhost\", \"127.0.0.1\", \"0.0.0.0\"])\n    assert list(csv) == [\"localhost\", \"127.0.0.1\", \"0.0.0.0\"]\n    assert repr(csv) == \"CommaSeparatedStrings(['localhost', '127.0.0.1', '0.0.0.0'])\"\n    assert str(csv) == \"'localhost', '127.0.0.1', '0.0.0.0'\""
}