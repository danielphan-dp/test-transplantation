{
  "test_name": "test_decorator_deprecations",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_routing.py",
  "static_methods": [
    {
      "name": "Router",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "router.route",
      "source_code": "    def route(\n        self,\n        path: str,\n        methods: list[str] | None = None,\n        name: str | None = None,\n        include_in_schema: bool = True,\n    ) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 804
    },
    {
      "name": "router.websocket_route",
      "source_code": "    def websocket_route(self, path: str, name: str | None = None) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 836
    },
    {
      "name": "router.on_event",
      "source_code": "    def on_event(self, event_type: str) -> typing.Callable:  # type: ignore[type-arg]\n        warnings.warn(\n            \"The `on_event` decorator is deprecated, and will be removed in version 1.0.0. \"\n            \"Refer to https://www.starlette.io/lifespan/ for recommended approach.\",\n            DeprecationWarning,\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 864
    },
    {
      "name": "router.route",
      "source_code": "    def route(\n        self,\n        path: str,\n        methods: list[str] | None = None,\n        name: str | None = None,\n        include_in_schema: bool = True,\n    ) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 804
    },
    {
      "name": "router.websocket_route",
      "source_code": "    def websocket_route(self, path: str, name: str | None = None) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 836
    },
    {
      "name": "router.on_event",
      "source_code": "    def on_event(self, event_type: str) -> typing.Callable:  # type: ignore[type-arg]\n        warnings.warn(\n            \"The `on_event` decorator is deprecated, and will be removed in version 1.0.0. \"\n            \"Refer to https://www.starlette.io/lifespan/ for recommended approach.\",\n            DeprecationWarning,\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 864
    }
  ],
  "dynamic_methods": [
    {
      "function": "Router",
      "filename": "",
      "line": 0,
      "caller": "test_decorator_deprecations",
      "source_code": ""
    },
    {
      "function": "router.route",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 804,
      "caller": "test_decorator_deprecations",
      "source_code": "    def route(\n        self,\n        path: str,\n        methods: list[str] | None = None,\n        name: str | None = None,\n        include_in_schema: bool = True,\n"
    },
    {
      "function": "router.websocket_route",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 836,
      "caller": "test_decorator_deprecations",
      "source_code": "    def websocket_route(self, path: str, name: str | None = None) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:\n\n        >>> routes = [WebSocketRoute(path, endpoint=...), ...]\n        >>> app = Starlette(routes=routes)\n        \"\"\"\n        warnings.warn(\n            \"The `websocket_route` decorator is deprecated, and will be removed in version 1.0.0. Refer to \"\n            \"https://www.starlette.io/routing/#websocket-routing for the recommended approach.\",\n            DeprecationWarning,\n        )\n\n        def decorator(func: typing.Callable) -> typing.Callable:  # type: ignore[type-arg]\n            self.add_websocket_route(path, func, name=name)\n            return func\n\n        return decorator\n\n"
    },
    {
      "function": "router.on_event",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 864,
      "caller": "test_decorator_deprecations",
      "source_code": "    def on_event(self, event_type: str) -> typing.Callable:  # type: ignore[type-arg]\n        warnings.warn(\n            \"The `on_event` decorator is deprecated, and will be removed in version 1.0.0. \"\n            \"Refer to https://www.starlette.io/lifespan/ for recommended approach.\",\n            DeprecationWarning,\n        )\n\n        def decorator(func: typing.Callable) -> typing.Callable:  # type: ignore[type-arg]\n            self.add_event_handler(event_type, func)\n            return func\n\n        return decorator\n"
    },
    {
      "function": "router.route",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 804,
      "caller": "test_decorator_deprecations",
      "source_code": "    def route(\n        self,\n        path: str,\n        methods: list[str] | None = None,\n        name: str | None = None,\n        include_in_schema: bool = True,\n"
    },
    {
      "function": "router.websocket_route",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 836,
      "caller": "test_decorator_deprecations",
      "source_code": "    def websocket_route(self, path: str, name: str | None = None) -> typing.Callable:  # type: ignore[type-arg]\n        \"\"\"\n        We no longer document this decorator style API, and its usage is discouraged.\n        Instead you should use the following approach:\n\n        >>> routes = [WebSocketRoute(path, endpoint=...), ...]\n        >>> app = Starlette(routes=routes)\n        \"\"\"\n        warnings.warn(\n            \"The `websocket_route` decorator is deprecated, and will be removed in version 1.0.0. Refer to \"\n            \"https://www.starlette.io/routing/#websocket-routing for the recommended approach.\",\n            DeprecationWarning,\n        )\n\n        def decorator(func: typing.Callable) -> typing.Callable:  # type: ignore[type-arg]\n            self.add_websocket_route(path, func, name=name)\n            return func\n\n        return decorator\n\n"
    },
    {
      "function": "router.on_event",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 864,
      "caller": "test_decorator_deprecations",
      "source_code": "    def on_event(self, event_type: str) -> typing.Callable:  # type: ignore[type-arg]\n        warnings.warn(\n            \"The `on_event` decorator is deprecated, and will be removed in version 1.0.0. \"\n            \"Refer to https://www.starlette.io/lifespan/ for recommended approach.\",\n            DeprecationWarning,\n        )\n\n        def decorator(func: typing.Callable) -> typing.Callable:  # type: ignore[type-arg]\n            self.add_event_handler(event_type, func)\n            return func\n\n        return decorator\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_decorator_deprecations() -> None:\n    router = Router()\n\n    with pytest.deprecated_call():\n        router.route(\"/\")(homepage)\n\n    with pytest.deprecated_call():\n        router.websocket_route(\"/ws\")(websocket_endpoint)\n\n    with pytest.deprecated_call():\n\n        async def startup() -> None: ...  # pragma: no cover\n\n        router.on_event(\"startup\")(startup)"
}