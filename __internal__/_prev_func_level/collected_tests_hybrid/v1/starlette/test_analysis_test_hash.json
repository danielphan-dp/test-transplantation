{
  "test_name": "test_hash",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_rarray.py",
  "static_methods": [
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "RArray",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RArray",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RArray",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RArray",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "RArray",
      "filename": "",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "RArray",
      "filename": "",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "RArray",
      "filename": "",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    },
    {
      "function": "RArray",
      "filename": "",
      "line": 0,
      "caller": "test_hash",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert hash(RArray(int_rprimitive, 10)) == hash(RArray(int_rprimitive, 10))",
    "assert hash(RArray(bool_rprimitive, 5)) == hash(RArray(bool_rprimitive, 5))"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_hash(self) -> None:\n        assert hash(RArray(int_rprimitive, 10)) == hash(RArray(int_rprimitive, 10))\n        assert hash(RArray(bool_rprimitive, 5)) == hash(RArray(bool_rprimitive, 5))"
}