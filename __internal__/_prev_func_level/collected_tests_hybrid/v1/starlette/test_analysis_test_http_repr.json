{
  "test_name": "test_http_repr",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_exceptions.py",
  "static_methods": [
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "HTTPException",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "HTTPException",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CustomHTTPException",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    },
    {
      "function": "HTTPException",
      "filename": "",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    },
    {
      "function": "HTTPException",
      "filename": "",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    },
    {
      "function": "CustomHTTPException",
      "filename": "",
      "line": 0,
      "caller": "test_http_repr",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert repr(HTTPException(404)) == \"HTTPException(status_code=404, detail='Not Found')\"",
    "assert repr(HTTPException(404, detail='Not Found: foo')) == \"HTTPException(status_code=404, detail='Not Found: foo')\"",
    "assert repr(CustomHTTPException(500, detail='Something custom')) == \"CustomHTTPException(status_code=500, detail='Something custom')\""
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_http_repr() -> None:\n    assert repr(HTTPException(404)) == (\"HTTPException(status_code=404, detail='Not Found')\")\n    assert repr(HTTPException(404, detail=\"Not Found: foo\")) == (\n        \"HTTPException(status_code=404, detail='Not Found: foo')\"\n    )\n\n    class CustomHTTPException(HTTPException):\n        pass\n\n    assert repr(CustomHTTPException(500, detail=\"Something custom\")) == (\n        \"CustomHTTPException(status_code=500, detail='Something custom')\"\n    )"
}