{
  "test_name": "test_initial_task_error",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
  "static_methods": [
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "_core.run",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n    ) -> RunResult:\n        \"\"\"Run a command with arguments.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line_number": 1363
    }
  ],
  "dynamic_methods": [
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_initial_task_error",
      "source_code": ""
    },
    {
      "function": "_core.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line": 1363,
      "caller": "test_initial_task_error",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n"
    }
  ],
  "assertions": [
    "assert excinfo.value.args == (17,)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_initial_task_error() -> None:\n    async def main(x: object) -> NoReturn:\n        raise ValueError(x)\n\n    with pytest.raises(ValueError, match=\"^17$\") as excinfo:\n        _core.run(main, 17)\n    assert excinfo.value.args == (17,)"
}