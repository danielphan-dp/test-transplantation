{
  "test_name": "test_make_module_translation_map",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_namegen.py",
  "static_methods": [
    {
      "name": "make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line_number": 94
    },
    {
      "name": "make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line_number": 94
    },
    {
      "name": "make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line_number": 94
    },
    {
      "name": "make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line_number": 94
    }
  ],
  "dynamic_methods": [
    {
      "function": "make_module_translation_map",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line": 94,
      "caller": "test_make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result\n\n\n"
    },
    {
      "function": "make_module_translation_map",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line": 94,
      "caller": "test_make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result\n\n\n"
    },
    {
      "function": "make_module_translation_map",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line": 94,
      "caller": "test_make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result\n\n\n"
    },
    {
      "function": "make_module_translation_map",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/namegen.py",
      "line": 94,
      "caller": "test_make_module_translation_map",
      "source_code": "def make_module_translation_map(names: list[str]) -> dict[str, str]:\n    num_instances: dict[str, int] = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            num_instances[suffix] = num_instances.get(suffix, 0) + 1\n    result = {}\n    for name in names:\n        for suffix in candidate_suffixes(name):\n            if num_instances[suffix] == 1:\n                result[name] = suffix\n                break\n        else:\n            assert False, names\n    return result\n\n\n"
    }
  ],
  "assertions": [
    "assert make_module_translation_map(['foo', 'bar']) == {'foo': 'foo.', 'bar': 'bar.'}",
    "assert make_module_translation_map(['foo.bar', 'foo.baz']) == {'foo.bar': 'bar.', 'foo.baz': 'baz.'}",
    "assert make_module_translation_map(['zar', 'foo.bar', 'foo.baz']) == {'foo.bar': 'bar.', 'foo.baz': 'baz.', 'zar': 'zar.'}",
    "assert make_module_translation_map(['foo.bar', 'fu.bar', 'foo.baz']) == {'foo.bar': 'foo.bar.', 'fu.bar': 'fu.bar.', 'foo.baz': 'baz.'}"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_make_module_translation_map(self) -> None:\n        assert make_module_translation_map([\"foo\", \"bar\"]) == {\"foo\": \"foo.\", \"bar\": \"bar.\"}\n        assert make_module_translation_map([\"foo.bar\", \"foo.baz\"]) == {\n            \"foo.bar\": \"bar.\",\n            \"foo.baz\": \"baz.\",\n        }\n        assert make_module_translation_map([\"zar\", \"foo.bar\", \"foo.baz\"]) == {\n            \"foo.bar\": \"bar.\",\n            \"foo.baz\": \"baz.\",\n            \"zar\": \"zar.\",\n        }\n        assert make_module_translation_map([\"foo.bar\", \"fu.bar\", \"foo.baz\"]) == {\n            \"foo.bar\": \"foo.bar.\",\n            \"fu.bar\": \"fu.bar.\",\n            \"foo.baz\": \"baz.\",\n        }"
}