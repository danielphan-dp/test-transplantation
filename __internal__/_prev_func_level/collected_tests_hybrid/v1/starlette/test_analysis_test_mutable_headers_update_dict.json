{
  "test_name": "test_mutable_headers_update_dict",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_datastructures.py",
  "static_methods": [
    {
      "name": "MutableHeaders",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "dict",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "h.items",
      "source_code": "    def items(self) -> Iterator[tuple[str, str]]:\n        for name in self:\n            yield name, self[name]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/iniconfig/__init__.py",
      "line_number": 100
    }
  ],
  "dynamic_methods": [
    {
      "function": "MutableHeaders",
      "filename": "",
      "line": 0,
      "caller": "test_mutable_headers_update_dict",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_mutable_headers_update_dict",
      "source_code": ""
    },
    {
      "function": "dict",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_mutable_headers_update_dict",
      "source_code": ""
    },
    {
      "function": "h.items",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/iniconfig/__init__.py",
      "line": 100,
      "caller": "test_mutable_headers_update_dict",
      "source_code": "    def items(self) -> Iterator[tuple[str, str]]:\n        for name in self:\n            yield name, self[name]\n\n\n"
    }
  ],
  "assertions": [
    "assert isinstance(h, MutableHeaders)",
    "assert dict(h) == {'a': '1'}",
    "assert h.items() == [('a', '1')]",
    "assert h.raw == [(b'a', b'1')]"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_mutable_headers_update_dict() -> None:\n    h = MutableHeaders()\n    h |= {\"a\": \"1\"}\n    assert isinstance(h, MutableHeaders)\n    assert dict(h) == {\"a\": \"1\"}\n    assert h.items() == [(\"a\", \"1\")]\n    assert h.raw == [(b\"a\", b\"1\")]"
}