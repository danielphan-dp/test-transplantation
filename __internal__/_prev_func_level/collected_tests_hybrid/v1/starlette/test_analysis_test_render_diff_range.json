{
  "test_name": "test_render_diff_range",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/meta/test_diff_helper.py",
  "static_methods": [
    {
      "name": "diff_ranges",
      "source_code": "def diff_ranges(\n    left: list[str], right: list[str]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 47
    },
    {
      "name": "render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 72
    },
    {
      "name": "render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 72
    },
    {
      "name": "diff_ranges",
      "source_code": "def diff_ranges(\n    left: list[str], right: list[str]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 47
    },
    {
      "name": "render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 72
    },
    {
      "name": "render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line_number": 72
    },
    {
      "name": "output.getvalue",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line_number": 187
    },
    {
      "name": "output.getvalue",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line_number": 187
    },
    {
      "name": "output.getvalue",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line_number": 187
    },
    {
      "name": "output.getvalue",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line_number": 187
    }
  ],
  "dynamic_methods": [
    {
      "function": "diff_ranges",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 47,
      "caller": "test_render_diff_range",
      "source_code": "def diff_ranges(\n    left: list[str], right: list[str]\n"
    },
    {
      "function": "render_diff_range",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 72,
      "caller": "test_render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,\n"
    },
    {
      "function": "render_diff_range",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 72,
      "caller": "test_render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,\n"
    },
    {
      "function": "diff_ranges",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 47,
      "caller": "test_render_diff_range",
      "source_code": "def diff_ranges(\n    left: list[str], right: list[str]\n"
    },
    {
      "function": "render_diff_range",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 72,
      "caller": "test_render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,\n"
    },
    {
      "function": "render_diff_range",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypy/test/helpers.py",
      "line": 72,
      "caller": "test_render_diff_range",
      "source_code": "def render_diff_range(\n    ranges: list[tuple[int, int]],\n    content: list[str],\n    *,\n    colour: str | None = None,\n    output: IO[str] = sys.stderr,\n    indent: int = 2,\n"
    },
    {
      "function": "output.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line": 187,
      "caller": "test_render_diff_range",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")\n\n\n"
    },
    {
      "function": "output.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line": 187,
      "caller": "test_render_diff_range",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")\n\n\n"
    },
    {
      "function": "output.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line": 187,
      "caller": "test_render_diff_range",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")\n\n\n"
    },
    {
      "function": "output.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/capture.py",
      "line": 187,
      "caller": "test_render_diff_range",
      "source_code": "    def getvalue(self) -> str:\n        assert isinstance(self.buffer, io.BytesIO)\n        return self.buffer.getvalue().decode(\"UTF-8\")\n\n\n"
    }
  ],
  "assertions": [
    "assert output.getvalue() == '  hello (diff)\\n  world\\n'",
    "assert output.getvalue() == '  goodbye (diff)\\n  world\\n'",
    "assert output.getvalue() == 'a\\nb\\nc\\n...\\nf\\ng\\nh\\ncircle (diff)\\ni\\nj\\n'",
    "assert output.getvalue() == 'a\\nb\\nc\\n...\\nf\\ng\\nh\\nsquare (diff)\\ni\\nj\\n'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_render_diff_range(self) -> None:\n        expected = [\"hello\", \"world\"]\n        actual = [\"goodbye\", \"world\"]\n\n        expected_ranges, actual_ranges = diff_ranges(expected, actual)\n\n        output = io.StringIO()\n        render_diff_range(expected_ranges, expected, output=output)\n        assert output.getvalue() == \"  hello (diff)\\n  world\\n\"\n        output = io.StringIO()\n        render_diff_range(actual_ranges, actual, output=output)\n        assert output.getvalue() == \"  goodbye (diff)\\n  world\\n\"\n\n        expected = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"circle\", \"i\", \"j\"]\n        actual = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"square\", \"i\", \"j\"]\n\n        expected_ranges, actual_ranges = diff_ranges(expected, actual)\n\n        output = io.StringIO()\n        render_diff_range(expected_ranges, expected, output=output, indent=0)\n        assert output.getvalue() == \"a\\nb\\nc\\n...\\nf\\ng\\nh\\ncircle (diff)\\ni\\nj\\n\"\n        output = io.StringIO()\n        render_diff_range(actual_ranges, actual, output=output, indent=0)\n        assert output.getvalue() == \"a\\nb\\nc\\n...\\nf\\ng\\nh\\nsquare (diff)\\ni\\nj\\n\""
}