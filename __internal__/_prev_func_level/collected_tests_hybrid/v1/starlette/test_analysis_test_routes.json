{
  "test_name": "test_routes",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_applications.py",
  "static_methods": [
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "WebSocketRoute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "WebSocketRoute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "WebSocketRoute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "WebSocketRoute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Mount",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Host",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Router",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Router",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "WebSocketRoute",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "WebSocketRoute",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "WebSocketRoute",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "WebSocketRoute",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Mount",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Host",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Router",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Router",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    },
    {
      "function": "Route",
      "filename": "",
      "line": 0,
      "caller": "test_routes",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert app.routes == [Route('/func', endpoint=func_homepage, methods=['GET']), Route('/async', endpoint=async_homepage, methods=['GET']), Route('/class', endpoint=Homepage), Route('/500', endpoint=runtime_error, methods=['GET']), WebSocketRoute('/ws', endpoint=websocket_endpoint), WebSocketRoute('/ws-raise-websocket', endpoint=websocket_raise_websocket_exception), WebSocketRoute('/ws-raise-http', endpoint=websocket_raise_http_exception), WebSocketRoute('/ws-raise-custom', endpoint=websocket_raise_custom), Mount('/users', app=Router(routes=[Route('/', endpoint=all_users_page), Route('/{username}', endpoint=user_page)])), Host('{subdomain}.example.org', app=Router(routes=[Route('/', endpoint=custom_subdomain)]))]"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_routes() -> None:\n    assert app.routes == [\n        Route(\"/func\", endpoint=func_homepage, methods=[\"GET\"]),\n        Route(\"/async\", endpoint=async_homepage, methods=[\"GET\"]),\n        Route(\"/class\", endpoint=Homepage),\n        Route(\"/500\", endpoint=runtime_error, methods=[\"GET\"]),\n        WebSocketRoute(\"/ws\", endpoint=websocket_endpoint),\n        WebSocketRoute(\"/ws-raise-websocket\", endpoint=websocket_raise_websocket_exception),\n        WebSocketRoute(\"/ws-raise-http\", endpoint=websocket_raise_http_exception),\n        WebSocketRoute(\"/ws-raise-custom\", endpoint=websocket_raise_custom),\n        Mount(\n            \"/users\",\n            app=Router(\n                routes=[\n                    Route(\"/\", endpoint=all_users_page),\n                    Route(\"/{username}\", endpoint=user_page),\n                ]\n            ),\n        ),\n        Host(\n            \"{subdomain}.example.org\",\n            app=Router(routes=[Route(\"/\", endpoint=custom_subdomain)]),\n        ),\n    ]"
}