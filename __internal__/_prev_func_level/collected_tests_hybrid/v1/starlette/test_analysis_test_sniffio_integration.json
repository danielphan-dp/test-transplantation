{
  "test_name": "test_sniffio_integration",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
  "static_methods": [
    {
      "name": "_core.run",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n    ) -> RunResult:\n        \"\"\"Run a command with arguments.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line_number": 1363
    },
    {
      "name": "alternate_sniffio_library",
      "source_code": "    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line_number": 2200
    },
    {
      "name": "_core.run",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n    ) -> RunResult:\n        \"\"\"Run a command with arguments.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line_number": 1363
    },
    {
      "name": "check_inside_trio",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "alternate_sniffio_library",
      "source_code": "    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line_number": 2200
    },
    {
      "name": "alternate_sniffio_library",
      "source_code": "    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line_number": 2200
    },
    {
      "name": "_core.spawn_system_task",
      "source_code": "    def spawn_system_task(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n        context: contextvars.Context | None = None,\n    ) -> Task:\n        \"\"\"Spawn a \"system\" task.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 1855
    },
    {
      "name": "_core.open_nursery",
      "source_code": "def open_nursery(\n    strict_exception_groups: bool | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 985
    },
    {
      "name": "alternate_sniffio_library",
      "source_code": "    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line_number": 2200
    },
    {
      "name": "nursery.start_soon",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n    ) -> None:\n        \"\"\"Creates a child task, scheduling ``await async_fn(*args)``.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 1152
    },
    {
      "name": "nursery.start_soon",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n    ) -> None:\n        \"\"\"Creates a child task, scheduling ``await async_fn(*args)``.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 1152
    }
  ],
  "dynamic_methods": [
    {
      "function": "_core.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line": 1363,
      "caller": "test_sniffio_integration",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n"
    },
    {
      "function": "alternate_sniffio_library",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line": 2200,
      "caller": "test_sniffio_integration",
      "source_code": "    @contextmanager\n    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)\n\n"
    },
    {
      "function": "_core.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line": 1363,
      "caller": "test_sniffio_integration",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n"
    },
    {
      "function": "check_inside_trio",
      "filename": "",
      "line": 0,
      "caller": "test_sniffio_integration",
      "source_code": ""
    },
    {
      "function": "alternate_sniffio_library",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line": 2200,
      "caller": "test_sniffio_integration",
      "source_code": "    @contextmanager\n    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)\n\n"
    },
    {
      "function": "alternate_sniffio_library",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line": 2200,
      "caller": "test_sniffio_integration",
      "source_code": "    @contextmanager\n    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)\n\n"
    },
    {
      "function": "_core.spawn_system_task",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 1855,
      "caller": "test_sniffio_integration",
      "source_code": "    @_public\n    def spawn_system_task(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n        context: contextvars.Context | None = None,\n"
    },
    {
      "function": "_core.open_nursery",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 985,
      "caller": "test_sniffio_integration",
      "source_code": "def open_nursery(\n    strict_exception_groups: bool | None = None,\n"
    },
    {
      "function": "alternate_sniffio_library",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
      "line": 2200,
      "caller": "test_sniffio_integration",
      "source_code": "    @contextmanager\n    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)\n\n"
    },
    {
      "function": "nursery.start_soon",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 1152,
      "caller": "test_sniffio_integration",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n"
    },
    {
      "function": "nursery.start_soon",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 1152,
      "caller": "test_sniffio_integration",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n"
    }
  ],
  "assertions": [
    "assert sniffio.current_async_library() == 'trio'",
    "assert sniffio.current_async_library() == 'trio'",
    "assert sniffio.current_async_library() == 'nullio'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_sniffio_integration() -> None:\n    with pytest.raises(sniffio.AsyncLibraryNotFoundError):\n        sniffio.current_async_library()\n\n    async def check_inside_trio() -> None:\n        assert sniffio.current_async_library() == \"trio\"\n\n    def check_function_returning_coroutine() -> Awaitable[object]:\n        assert sniffio.current_async_library() == \"trio\"\n        return check_inside_trio()\n\n    _core.run(check_inside_trio)\n\n    with pytest.raises(sniffio.AsyncLibraryNotFoundError):\n        sniffio.current_async_library()\n\n    @contextmanager\n    def alternate_sniffio_library() -> Generator[None, None, None]:\n        prev_token = sniffio.current_async_library_cvar.set(\"nullio\")\n        prev_library, sniffio.thread_local.name = sniffio.thread_local.name, \"nullio\"\n        try:\n            yield\n            assert sniffio.current_async_library() == \"nullio\"\n        finally:\n            sniffio.thread_local.name = prev_library\n            sniffio.current_async_library_cvar.reset(prev_token)\n\n    async def check_new_task_resets_sniffio_library() -> None:\n        with alternate_sniffio_library():\n            _core.spawn_system_task(check_inside_trio)\n        async with _core.open_nursery() as nursery:\n            with alternate_sniffio_library():\n                nursery.start_soon(check_inside_trio)\n                nursery.start_soon(check_function_returning_coroutine)\n\n    _core.run(check_new_task_resets_sniffio_library)"
}