{
  "test_name": "test_static_tool_sees_class_members",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
  "static_methods": [
    {
      "name": "mod_cache.open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "module.__dict__.items",
      "source_code": "    def items(self) -> Iterator[tuple[str, str]]:\n        for name in self:\n            yield name, self[name]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/iniconfig/__init__.py",
      "line_number": 100
    },
    {
      "name": "PUBLIC_MODULE_NAMES.index",
      "source_code": "    def index(self, o: _T) -> int: pass",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line_number": 225
    },
    {
      "name": "_ensure_mypy_cache_updated",
      "source_code": "def _ensure_mypy_cache_updated() -> None:\n    # This pollutes the `empty` dir. Should this be changed?\n    try:\n        from mypy.api import run\n    except ImportError as error:\n        skip_if_optional_else_raise(error)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 40
    },
    {
      "name": "next",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "mod_cache.is_dir",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 395
    },
    {
      "name": "mod_cache.exists",
      "source_code": "    def exists(self):\n        return self._stat()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 126
    },
    {
      "name": "mod_cache.is_file",
      "source_code": "    def is_file(self, path: InfoPath) -> bool:\n        \"\"\"Check whether an entry in the info directory is a file.\"\"\"\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_internal/metadata/base.py",
      "line_number": 362
    },
    {
      "name": "mod_cache.open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "print",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "Path.cwd",
      "source_code": "    def cwd(cls) -> Self:\n        return cls(pathlib.Path.cwd())",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_path.py",
      "line_number": 117
    },
    {
      "name": "cache.glob",
      "source_code": "    def glob(self, pattern):\n        if not pattern:\n            raise ValueError(f\"Unacceptable pattern: {pattern!r}\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 421
    },
    {
      "name": "mod_cache.open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "next",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ignore_names.add",
      "source_code": "    def add(self, key):\n        \"\"\"Add a new vertex to the graph.\"\"\"\n        if key in self._vertices:\n            raise ValueError(\"vertex exists\")\n        self._vertices.add(key)\n        self._forwards[key] = set()\n        self._backwards[key] = set()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/resolvelib/structs.py",
      "line_number": 31
    },
    {
      "name": "ignore_names.add",
      "source_code": "    def add(self, key):\n        \"\"\"Add a new vertex to the graph.\"\"\"\n        if key in self._vertices:\n            raise ValueError(\"vertex exists\")\n        self._vertices.add(key)\n        self._forwards[key] = set()\n        self._backwards[key] = set()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/resolvelib/structs.py",
      "line_number": 31
    },
    {
      "name": "no_hidden",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 262
    },
    {
      "name": "jedi.Script",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "script.complete",
      "source_code": "    def complete(self) -> str:\n        \"\"\"Produce the completion data to send back to the shell.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/click/shell_completion.py",
      "line_number": 285
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "extra.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "extra.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "extra.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "extra.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "extra.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "PurePath.__dict__.keys",
      "source_code": "    def keys(self):\n        \"\"\"\n        Retrieves the available time zones as a list.\n        \"\"\"\n        return list(self._vtz.keys())",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/tz/tz.py",
      "line_number": 1281
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "cache_file.read",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line_number": 145
    },
    {
      "name": "cache.glob",
      "source_code": "    def glob(self, pattern):\n        if not pattern:\n            raise ValueError(f\"Unacceptable pattern: {pattern!r}\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 421
    },
    {
      "name": "mod_cache.is_dir",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 395
    },
    {
      "name": "next_cache.is_dir",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 395
    },
    {
      "name": "mod_cache.is_dir",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line_number": 395
    },
    {
      "name": "mod_cache.open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "dir",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "dir",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "no_hidden",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 262
    },
    {
      "name": "no_hidden",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 262
    },
    {
      "name": "AssertionError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "missing.remove",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 596
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "skip_if_optional_else_raise",
      "source_code": "def skip_if_optional_else_raise(error: ImportError) -> NoReturn:\n    if SKIP_OPTIONAL_IMPORTS:\n        pytest.skip(error.msg, allow_module_level=True)\n    else:  # pragma: no cover\n        raise error",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/pytest_plugin.py",
      "line_number": 50
    },
    {
      "name": "lookup_symbol",
      "source_code": "        def lookup_symbol(symbol: str) -> dict[str, str]:\n            topname, *modname, name = symbol.split(\".\")\n            version = next(cache.glob(\"3.*/\"))\n            mod_cache = version / topname\n            if not mod_cache.is_dir():\n                mod_cache = version / (topname + \".data.json\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 294
    },
    {
      "name": "no_hidden",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 262
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "lookup_symbol",
      "source_code": "        def lookup_symbol(symbol: str) -> dict[str, str]:\n            topname, *modname, name = symbol.split(\".\")\n            version = next(cache.glob(\"3.*/\"))\n            mod_cache = version / topname\n            if not mod_cache.is_dir():\n                mod_cache = version / (topname + \".data.json\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line_number": 294
    },
    {
      "name": "e.endswith",
      "source_code": "    def endswith(self, arg):\n        return str(self.path).endswith(arg)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 67
    },
    {
      "name": "f.read",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line_number": 145
    },
    {
      "name": "k.startswith",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def endswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def replace(self, old: str, new: str, maxcount: int=...) -> str: ...\n    def encode(self, x: str=..., y: str=...) -> bytes: ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line_number": 110
    },
    {
      "name": "k.startswith",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def endswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def replace(self, old: str, new: str, maxcount: int=...) -> str: ...\n    def encode(self, x: str=..., y: str=...) -> bytes: ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line_number": 110
    },
    {
      "name": "slow",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "mod_cache.open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "module.__dict__.items",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/iniconfig/__init__.py",
      "line": 100,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def items(self) -> Iterator[tuple[str, str]]:\n        for name in self:\n            yield name, self[name]\n\n\n"
    },
    {
      "function": "PUBLIC_MODULE_NAMES.index",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line": 225,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def index(self, o: _T) -> int: pass\n\n"
    },
    {
      "function": "_ensure_mypy_cache_updated",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 40,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "def _ensure_mypy_cache_updated() -> None:\n    # This pollutes the `empty` dir. Should this be changed?\n    try:\n        from mypy.api import run\n    except ImportError as error:\n        skip_if_optional_else_raise(error)\n\n    global mypy_cache_updated\n    if not mypy_cache_updated:\n        # mypy cache was *probably* already updated by the other tests,\n        # but `pytest -k ...` might run just this test on its own\n        result = run(\n            [\n                \"--config-file=\",\n                \"--cache-dir=./.mypy_cache\",\n                \"--no-error-summary\",\n                \"-c\",\n                \"import trio\",\n            ]\n        )\n        assert not result[1]  # stderr\n        assert not result[0]  # stdout\n        mypy_cache_updated = True\n\n\n"
    },
    {
      "function": "next",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "mod_cache.is_dir",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 395,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")\n\n"
    },
    {
      "function": "mod_cache.exists",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 126,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def exists(self):\n        return self._stat()\n\n"
    },
    {
      "function": "mod_cache.is_file",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_internal/metadata/base.py",
      "line": 362,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def is_file(self, path: InfoPath) -> bool:\n        \"\"\"Check whether an entry in the info directory is a file.\"\"\"\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "mod_cache.open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "print",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "Path.cwd",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_path.py",
      "line": 117,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    @classmethod\n    @_wraps_async(pathlib.Path.cwd)\n    def cwd(cls) -> Self:\n        return cls(pathlib.Path.cwd())\n\n"
    },
    {
      "function": "cache.glob",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 421,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def glob(self, pattern):\n        if not pattern:\n            raise ValueError(f\"Unacceptable pattern: {pattern!r}\")\n\n        prefix = re.escape(self.at)\n        tr = Translator(seps='/')\n        matches = re.compile(prefix + tr.translate(pattern)).fullmatch\n        return map(self._next, filter(matches, self.root.namelist()))\n\n"
    },
    {
      "function": "mod_cache.open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "next",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "ignore_names.add",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/resolvelib/structs.py",
      "line": 31,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def add(self, key):\n        \"\"\"Add a new vertex to the graph.\"\"\"\n        if key in self._vertices:\n            raise ValueError(\"vertex exists\")\n        self._vertices.add(key)\n        self._forwards[key] = set()\n        self._backwards[key] = set()\n\n"
    },
    {
      "function": "ignore_names.add",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/resolvelib/structs.py",
      "line": 31,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def add(self, key):\n        \"\"\"Add a new vertex to the graph.\"\"\"\n        if key in self._vertices:\n            raise ValueError(\"vertex exists\")\n        self._vertices.add(key)\n        self._forwards[key] = set()\n        self._backwards[key] = set()\n\n"
    },
    {
      "function": "no_hidden",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 262,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }\n\n"
    },
    {
      "function": "jedi.Script",
      "filename": "",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "script.complete",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/click/shell_completion.py",
      "line": 285,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def complete(self) -> str:\n        \"\"\"Produce the completion data to send back to the shell.\n\n        By default this calls :meth:`get_completion_args`, gets the\n        completions, then calls :meth:`format_completion` for each\n        completion.\n        \"\"\"\n        args, incomplete = self.get_completion_args()\n        completions = self.get_completions(args, incomplete)\n        out = [self.format_completion(item) for item in completions]\n        return \"\\n\".join(out)\n\n\n"
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "extra.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "extra.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "extra.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "extra.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "extra.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "PurePath.__dict__.keys",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/tz/tz.py",
      "line": 1281,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def keys(self):\n        \"\"\"\n        Retrieves the available time zones as a list.\n        \"\"\"\n        return list(self._vtz.keys())\n\n"
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "cache_file.read",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line": 145,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None\n\n        self.position += len(token.text)\n        self.next_token = None\n\n        return token\n\n"
    },
    {
      "function": "cache.glob",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 421,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def glob(self, pattern):\n        if not pattern:\n            raise ValueError(f\"Unacceptable pattern: {pattern!r}\")\n\n        prefix = re.escape(self.at)\n        tr = Translator(seps='/')\n        matches = re.compile(prefix + tr.translate(pattern)).fullmatch\n        return map(self._next, filter(matches, self.root.namelist()))\n\n"
    },
    {
      "function": "mod_cache.is_dir",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 395,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")\n\n"
    },
    {
      "function": "next_cache.is_dir",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 395,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")\n\n"
    },
    {
      "function": "mod_cache.is_dir",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/zipp/__init__.py",
      "line": 395,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def is_dir(self):\n        return not self.at or self.at.endswith(\"/\")\n\n"
    },
    {
      "function": "mod_cache.open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "dir",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "dir",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "no_hidden",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 262,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }\n\n"
    },
    {
      "function": "no_hidden",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 262,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }\n\n"
    },
    {
      "function": "AssertionError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "missing.remove",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 596,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def remove(self, rec=1, ignore_errors=False):\n        \"\"\"Remove a file or directory (or a directory tree if rec=1).\n        if ignore_errors is True, errors while removing directories will\n        be ignored.\n        \"\"\"\n        if self.check(dir=1, link=0):\n            if rec:\n                # force remove of readonly files on windows\n                if iswin32:\n                    self.chmod(0o700, rec=1)\n                import shutil\n\n                error.checked_call(\n                    shutil.rmtree, self.strpath, ignore_errors=ignore_errors\n                )\n            else:\n                error.checked_call(os.rmdir, self.strpath)\n        else:\n            if iswin32:\n                self.chmod(0o700)\n            error.checked_call(os.remove, self.strpath)\n\n"
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "skip_if_optional_else_raise",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/pytest_plugin.py",
      "line": 50,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "def skip_if_optional_else_raise(error: ImportError) -> NoReturn:\n    if SKIP_OPTIONAL_IMPORTS:\n        pytest.skip(error.msg, allow_module_level=True)\n    else:  # pragma: no cover\n        raise error\n"
    },
    {
      "function": "lookup_symbol",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 294,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "        @functools.lru_cache\n        def lookup_symbol(symbol: str) -> dict[str, str]:\n            topname, *modname, name = symbol.split(\".\")\n            version = next(cache.glob(\"3.*/\"))\n            mod_cache = version / topname\n            if not mod_cache.is_dir():\n                mod_cache = version / (topname + \".data.json\")\n\n            if modname:\n                for piece in modname[:-1]:\n                    mod_cache /= piece\n                next_cache = mod_cache / modname[-1]\n                if next_cache.is_dir():  # pragma: no coverage\n                    mod_cache = next_cache / \"__init__.data.json\"\n                else:\n                    mod_cache = mod_cache / (modname[-1] + \".data.json\")\n            elif mod_cache.is_dir():\n                mod_cache /= \"__init__.data.json\"\n            with mod_cache.open() as f:\n                return json.loads(f.read())[\"names\"][name]  # type: ignore[no-any-return]\n\n"
    },
    {
      "function": "no_hidden",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 262,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    },
    {
      "function": "lookup_symbol",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_exports.py",
      "line": 294,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "        @functools.lru_cache\n        def lookup_symbol(symbol: str) -> dict[str, str]:\n            topname, *modname, name = symbol.split(\".\")\n            version = next(cache.glob(\"3.*/\"))\n            mod_cache = version / topname\n            if not mod_cache.is_dir():\n                mod_cache = version / (topname + \".data.json\")\n\n            if modname:\n                for piece in modname[:-1]:\n                    mod_cache /= piece\n                next_cache = mod_cache / modname[-1]\n                if next_cache.is_dir():  # pragma: no coverage\n                    mod_cache = next_cache / \"__init__.data.json\"\n                else:\n                    mod_cache = mod_cache / (modname[-1] + \".data.json\")\n            elif mod_cache.is_dir():\n                mod_cache /= \"__init__.data.json\"\n            with mod_cache.open() as f:\n                return json.loads(f.read())[\"names\"][name]  # type: ignore[no-any-return]\n\n"
    },
    {
      "function": "e.endswith",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 67,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def endswith(self, arg):\n        return str(self.path).endswith(arg)\n\n"
    },
    {
      "function": "f.read",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line": 145,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None\n\n        self.position += len(token.text)\n        self.next_token = None\n\n        return token\n\n"
    },
    {
      "function": "k.startswith",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line": 110,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n"
    },
    {
      "function": "k.startswith",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line": 110,
      "caller": "test_static_tool_sees_class_members",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n"
    },
    {
      "function": "slow",
      "filename": "",
      "line": 0,
      "caller": "test_static_tool_sees_class_members",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert not errors",
    "assert mod_cache.exists()",
    "assert mod_cache.is_file()",
    "assert len(extra) == before - 1",
    "assert len(extra) == before - len(EXTRAS[class_])",
    "assert 'node' in cached_type_info"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_static_tool_sees_class_members(\n    tool: str, module_name: str, tmp_path: Path\n) -> None:\n    module = PUBLIC_MODULES[PUBLIC_MODULE_NAMES.index(module_name)]\n\n    # ignore hidden, but not dunder, symbols\n    def no_hidden(symbols: Iterable[str]) -> set[str]:\n        return {\n            symbol\n            for symbol in symbols\n            if (not symbol.startswith(\"_\")) or symbol.startswith(\"__\")\n        }\n\n    if tool == \"mypy\":\n        if sys.implementation.name != \"cpython\":\n            pytest.skip(\"mypy not installed in tests on pypy\")\n\n        cache = Path.cwd() / \".mypy_cache\"\n\n        _ensure_mypy_cache_updated()\n\n        trio_cache = next(cache.glob(\"*/trio\"))\n        modname = module_name\n        _, modname = (modname + \".\").split(\".\", 1)\n        modname = modname[:-1]\n        mod_cache = trio_cache / modname if modname else trio_cache\n        if mod_cache.is_dir():\n            mod_cache = mod_cache / \"__init__.data.json\"\n        else:\n            mod_cache = trio_cache / (modname + \".data.json\")\n\n        assert mod_cache.exists()\n        assert mod_cache.is_file()\n        with mod_cache.open() as cache_file:\n            cache_json = json.loads(cache_file.read())\n\n        # skip a bunch of file-system activity (probably can un-memoize?)\n        @functools.lru_cache\n        def lookup_symbol(symbol: str) -> dict[str, str]:\n            topname, *modname, name = symbol.split(\".\")\n            version = next(cache.glob(\"3.*/\"))\n            mod_cache = version / topname\n            if not mod_cache.is_dir():\n                mod_cache = version / (topname + \".data.json\")\n\n            if modname:\n                for piece in modname[:-1]:\n                    mod_cache /= piece\n                next_cache = mod_cache / modname[-1]\n                if next_cache.is_dir():  # pragma: no coverage\n                    mod_cache = next_cache / \"__init__.data.json\"\n                else:\n                    mod_cache = mod_cache / (modname[-1] + \".data.json\")\n            elif mod_cache.is_dir():\n                mod_cache /= \"__init__.data.json\"\n            with mod_cache.open() as f:\n                return json.loads(f.read())[\"names\"][name]  # type: ignore[no-any-return]\n\n    errors: dict[str, object] = {}\n    for class_name, class_ in module.__dict__.items():\n        if not isinstance(class_, type):\n            continue\n        if module_name == \"trio.socket\" and class_name in dir(stdlib_socket):\n            continue\n\n        # ignore class that does dirty tricks\n        if class_ is trio.testing.RaisesGroup:\n            continue\n\n        # dir() and inspect.getmembers doesn't display properties from the metaclass\n        # also ignore some dunder methods that tend to differ but are of no consequence\n        ignore_names = set(dir(type(class_))) | {\n            \"__annotations__\",\n            \"__attrs_attrs__\",\n            \"__attrs_own_setattr__\",\n            \"__callable_proto_members_only__\",\n            \"__class_getitem__\",\n            \"__final__\",\n            \"__getstate__\",\n            \"__match_args__\",\n            \"__order__\",\n            \"__orig_bases__\",\n            \"__parameters__\",\n            \"__protocol_attrs__\",\n            \"__setstate__\",\n            \"__slots__\",\n            \"__weakref__\",\n            # ignore errors about dunders inherited from stdlib that tools might\n            # not see\n            \"__copy__\",\n            \"__deepcopy__\",\n        }\n\n        if type(class_) is type:\n            # C extension classes don't have these dunders, but Python classes do\n            ignore_names.add(\"__firstlineno__\")\n            ignore_names.add(\"__static_attributes__\")\n\n        # pypy seems to have some additional dunders that differ\n        if sys.implementation.name == \"pypy\":\n            ignore_names |= {\n                \"__basicsize__\",\n                \"__dictoffset__\",\n                \"__itemsize__\",\n                \"__sizeof__\",\n                \"__weakrefoffset__\",\n                \"__unicode__\",\n            }\n\n        # inspect.getmembers sees `name` and `value` in Enums, otherwise\n        # it behaves the same way as `dir`\n        # runtime_names = no_underscores(dir(class_))\n        runtime_names = (\n            no_hidden(x[0] for x in inspect.getmembers(class_)) - ignore_names\n        )\n\n        if tool == \"jedi\":\n            try:\n                import jedi\n            except ImportError as error:\n                skip_if_optional_else_raise(error)\n\n            script = jedi.Script(\n                f\"from {module_name} import {class_name}; {class_name}.\"\n            )\n            completions = script.complete()\n            static_names = no_hidden(c.name for c in completions) - ignore_names\n\n        elif tool == \"mypy\":\n            # load the cached type information\n            cached_type_info = cache_json[\"names\"][class_name]\n            if \"node\" not in cached_type_info:\n                cached_type_info = lookup_symbol(cached_type_info[\"cross_ref\"])\n\n            assert \"node\" in cached_type_info\n            node = cached_type_info[\"node\"]\n            static_names = no_hidden(k for k in node[\"names\"] if not k.startswith(\".\"))\n            for symbol in node[\"mro\"][1:]:\n                node = lookup_symbol(symbol)[\"node\"]\n                static_names |= no_hidden(\n                    k for k in node[\"names\"] if not k.startswith(\".\")\n                )\n            static_names -= ignore_names\n\n        else:  # pragma: no cover\n            raise AssertionError(\"unknown tool\")\n\n        missing = runtime_names - static_names\n        extra = static_names - runtime_names\n\n        # using .remove() instead of .delete() to get an error in case they start not\n        # being missing\n\n        if (\n            tool == \"jedi\"\n            and BaseException in class_.__mro__\n            and sys.version_info >= (3, 11)\n        ):\n            missing.remove(\"add_note\")\n\n        if (\n            tool == \"mypy\"\n            and BaseException in class_.__mro__\n            and sys.version_info >= (3, 11)\n        ):\n            extra.remove(\"__notes__\")\n\n        if tool == \"mypy\" and attrs.has(class_):\n            # e.g. __trio__core__run_CancelScope_AttrsAttributes__\n            before = len(extra)\n            extra = {e for e in extra if not e.endswith(\"AttrsAttributes__\")}\n            assert len(extra) == before - 1\n\n        # mypy does not see these attributes in Enum subclasses\n        if (\n            tool == \"mypy\"\n            and enum.Enum in class_.__mro__\n            and sys.version_info >= (3, 12)\n        ):\n            # Another attribute, in 3.12+ only.\n            extra.remove(\"__signature__\")\n\n        # TODO: this *should* be visible via `dir`!!\n        if tool == \"mypy\" and class_ == trio.Nursery:\n            extra.remove(\"cancel_scope\")\n\n        # These are (mostly? solely?) *runtime* attributes, often set in\n        # __init__, which doesn't show up with dir() or inspect.getmembers,\n        # but we get them in the way we query mypy & jedi\n        EXTRAS = {\n            trio.DTLSChannel: {\"peer_address\", \"endpoint\"},\n            trio.DTLSEndpoint: {\"socket\", \"incoming_packets_buffer\"},\n            trio.Process: {\"args\", \"pid\", \"stderr\", \"stdin\", \"stdio\", \"stdout\"},\n            trio.SSLListener: {\"transport_listener\"},\n            trio.SSLStream: {\"transport_stream\"},\n            trio.SocketListener: {\"socket\"},\n            trio.SocketStream: {\"socket\"},\n            trio.testing.MemoryReceiveStream: {\"close_hook\", \"receive_some_hook\"},\n            trio.testing.MemorySendStream: {\n                \"close_hook\",\n                \"send_all_hook\",\n                \"wait_send_all_might_not_block_hook\",\n            },\n            trio.testing.Matcher: {\n                \"exception_type\",\n                \"match\",\n                \"check\",\n            },\n        }\n        if tool == \"mypy\" and class_ in EXTRAS:\n            before = len(extra)\n            extra -= EXTRAS[class_]\n            assert len(extra) == before - len(EXTRAS[class_])\n\n        # TODO: why is this? Is it a problem?\n        # see https://github.com/python-trio/trio/pull/2631#discussion_r1185615916\n        if class_ == trio.StapledStream:\n            extra.remove(\"receive_stream\")\n            extra.remove(\"send_stream\")\n\n        # I have not researched why these are missing, should maybe create an issue\n        # upstream with jedi\n        if tool == \"jedi\" and sys.version_info >= (3, 11):\n            if class_ in (\n                trio.DTLSChannel,\n                trio.MemoryReceiveChannel,\n                trio.MemorySendChannel,\n                trio.SSLListener,\n                trio.SocketListener,\n            ):\n                missing.remove(\"__aenter__\")\n                missing.remove(\"__aexit__\")\n            if class_ in (trio.DTLSChannel, trio.MemoryReceiveChannel):\n                missing.remove(\"__aiter__\")\n                missing.remove(\"__anext__\")\n\n        if class_ in (trio.Path, trio.WindowsPath, trio.PosixPath):\n            # These are from inherited subclasses.\n            missing -= PurePath.__dict__.keys()\n            # These are unix-only.\n            if tool == \"mypy\" and sys.platform == \"win32\":\n                missing -= {\"owner\", \"is_mount\", \"group\"}\n            if tool == \"jedi\" and sys.platform == \"win32\":\n                extra -= {\"owner\", \"is_mount\", \"group\"}\n\n        # not sure why jedi in particular ignores this (static?) method in 3.13\n        # (especially given the method is from 3.12....)\n        if (\n            tool == \"jedi\"\n            and sys.version_info >= (3, 13)\n            and class_ in (trio.Path, trio.WindowsPath, trio.PosixPath)\n        ):\n            missing.remove(\"with_segments\")\n\n        if missing or extra:  # pragma: no cover\n            errors[f\"{module_name}.{class_name}\"] = {\n                \"missing\": missing,\n                \"extra\": extra,\n            }\n\n    # `assert not errors` will not print the full content of errors, even with\n    # `--verbose`, so we manually print it\n    if errors:  # pragma: no cover\n        from pprint import pprint\n\n        print(f\"\\n{tool} can't see the following symbols in {module_name}:\")\n        pprint(errors)\n    assert not errors"
}