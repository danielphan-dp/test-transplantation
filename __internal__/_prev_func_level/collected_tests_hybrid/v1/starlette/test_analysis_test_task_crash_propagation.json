{
  "test_name": "test_task_crash_propagation",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_run.py",
  "static_methods": [
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_core.run",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n    ) -> RunResult:\n        \"\"\"Run a command with arguments.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line_number": 1363
    },
    {
      "name": "_core.open_nursery",
      "source_code": "def open_nursery(\n    strict_exception_groups: bool | None = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 985
    },
    {
      "name": "nursery.start_soon",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n    ) -> None:\n        \"\"\"Creates a child task, scheduling ``await async_fn(*args)``.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 1152
    },
    {
      "name": "nursery.start_soon",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n    ) -> None:\n        \"\"\"Creates a child task, scheduling ``await async_fn(*args)``.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line_number": 1152
    },
    {
      "name": "Matcher",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "print",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "looper_record.append",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line_number": 100
    },
    {
      "name": "_core.checkpoint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    },
    {
      "function": "_core.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/pytester.py",
      "line": 1363,
      "caller": "test_task_crash_propagation",
      "source_code": "    def run(\n        self,\n        *cmdargs: str | os.PathLike[str],\n        timeout: float | None = None,\n        stdin: NotSetType | bytes | IO[Any] | int = CLOSE_STDIN,\n"
    },
    {
      "function": "_core.open_nursery",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 985,
      "caller": "test_task_crash_propagation",
      "source_code": "def open_nursery(\n    strict_exception_groups: bool | None = None,\n"
    },
    {
      "function": "nursery.start_soon",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 1152,
      "caller": "test_task_crash_propagation",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n"
    },
    {
      "function": "nursery.start_soon",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_run.py",
      "line": 1152,
      "caller": "test_task_crash_propagation",
      "source_code": "    def start_soon(\n        self,\n        async_fn: Callable[[Unpack[PosArgT]], Awaitable[object]],\n        *args: Unpack[PosArgT],\n        name: object = None,\n"
    },
    {
      "function": "Matcher",
      "filename": "",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    },
    {
      "function": "print",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    },
    {
      "function": "looper_record.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line": 100,
      "caller": "test_task_crash_propagation",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)\n\n"
    },
    {
      "function": "_core.checkpoint",
      "filename": "",
      "line": 0,
      "caller": "test_task_crash_propagation",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert looper_record == ['cancelled']"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_task_crash_propagation() -> None:\n    looper_record: list[str] = []\n\n    async def looper() -> None:\n        try:\n            while True:\n                await _core.checkpoint()\n        except _core.Cancelled:\n            print(\"looper cancelled\")\n            looper_record.append(\"cancelled\")\n\n    async def crasher() -> NoReturn:\n        raise ValueError(\"argh\")\n\n    async def main() -> None:\n        async with _core.open_nursery() as nursery:\n            nursery.start_soon(looper)\n            nursery.start_soon(crasher)\n\n    with RaisesGroup(Matcher(ValueError, \"^argh$\")):\n        _core.run(main)\n\n    assert looper_record == [\"cancelled\"]"
}