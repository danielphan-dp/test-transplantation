{
  "test_name": "test_user_safe_decode_helper",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_formparsers.py",
  "static_methods": [
    {
      "name": "_user_safe_decode",
      "source_code": "def _user_safe_decode(src: bytes | bytearray, codec: str) -> str:\n    try:\n        return src.decode(codec)\n    except (UnicodeDecodeError, LookupError):\n        return src.decode(\"latin-1\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/formparsers.py",
      "line_number": 44
    }
  ],
  "dynamic_methods": [
    {
      "function": "_user_safe_decode",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/formparsers.py",
      "line": 44,
      "caller": "test_user_safe_decode_helper",
      "source_code": "def _user_safe_decode(src: bytes | bytearray, codec: str) -> str:\n    try:\n        return src.decode(codec)\n    except (UnicodeDecodeError, LookupError):\n        return src.decode(\"latin-1\")\n\n\n"
    }
  ],
  "assertions": [
    "assert result == '\u0119\u017c\u0107'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_user_safe_decode_helper() -> None:\n    result = _user_safe_decode(b\"\\xc4\\x99\\xc5\\xbc\\xc4\\x87\", \"utf-8\")\n    assert result == \"\u0119\u017c\u0107\""
}