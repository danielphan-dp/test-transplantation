{
  "test_name": "test_various",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/test_regex.py",
  "static_methods": [
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "self.subTest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "join",
      "source_code": "    def join(self, *args: os.PathLike[str], abs: bool = False) -> LocalPath:\n        \"\"\"Return a new path by appending all 'args' as path\n        components.  if abs=1 is used restart from root if any\n        of the args is an absolute path.\n        \"\"\"\n        sep = self.sep\n        strargs = [os.fspath(arg) for arg in args]\n        strpath = self.strpath\n        if abs:\n            newargs: list[str] = []\n            for arg in reversed(strargs):\n                if isabs(arg):\n                    strpath = arg\n                    strargs = newargs\n                    break\n                newargs.insert(0, arg)\n        # special case for when we have e.g. strpath == \"/\"\n        actual_sep = \"\" if strpath.endswith(sep) else sep\n        for arg in strargs:\n            arg = arg.strip(sep)\n            if iswin32:\n                # allow unix style paths even on windows.\n                arg = arg.strip(\"/\")\n                arg = arg.replace(\"/\", sep)\n            strpath = strpath + actual_sep + arg\n            actual_sep = sep\n        obj = object.__new__(self.__class__)\n        obj.strpath = normpath(strpath)\n        return obj",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 719
    },
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    },
    {
      "name": "groups.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.search",
      "source_code": "    def search(self, terms, operator=None):  # pragma: no cover\n        if isinstance(terms, string_types):\n            terms = {'name': terms}\n        rpc_proxy = ServerProxy(self.url, timeout=3.0)\n        try:\n            return rpc_proxy.search(terms, operator or 'and')\n        finally:\n            rpc_proxy('close')()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/index.py",
      "line_number": 501
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "format",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "self.subTest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertRaisesRegex",
      "source_code": "def assertRaisesRegex(self, *args, **kwargs):\n    return getattr(self, _assertRaisesRegex)(*args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/six.py",
      "line_number": 703
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "group_list.append",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line_number": 100
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ascii",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "int",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "group_list.append",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line_number": 100
    },
    {
      "name": "m.group",
      "source_code": "    def group(self):\n        \"\"\"Return group name of file.\"\"\"\n        if iswin32:\n            raise NotImplementedError(\"XXX win32\")\n        import grp",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line_number": 229
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "chr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "self.subTest",
      "filename": "",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "join",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 719,
      "caller": "test_various",
      "source_code": "    def join(self, *args: os.PathLike[str], abs: bool = False) -> LocalPath:\n        \"\"\"Return a new path by appending all 'args' as path\n        components.  if abs=1 is used restart from root if any\n        of the args is an absolute path.\n        \"\"\"\n        sep = self.sep\n        strargs = [os.fspath(arg) for arg in args]\n        strpath = self.strpath\n        if abs:\n            newargs: list[str] = []\n            for arg in reversed(strargs):\n                if isabs(arg):\n                    strpath = arg\n                    strargs = newargs\n                    break\n                newargs.insert(0, arg)\n        # special case for when we have e.g. strpath == \"/\"\n        actual_sep = \"\" if strpath.endswith(sep) else sep\n        for arg in strargs:\n            arg = arg.strip(sep)\n            if iswin32:\n                # allow unix style paths even on windows.\n                arg = arg.strip(\"/\")\n                arg = arg.replace(\"/\", sep)\n            strpath = strpath + actual_sep + arg\n            actual_sep = sep\n        obj = object.__new__(self.__class__)\n        obj.strpath = normpath(strpath)\n        return obj\n\n"
    },
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_various",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    },
    {
      "function": "groups.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_various",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.search",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/index.py",
      "line": 501,
      "caller": "test_various",
      "source_code": "    def search(self, terms, operator=None):  # pragma: no cover\n        if isinstance(terms, string_types):\n            terms = {'name': terms}\n        rpc_proxy = ServerProxy(self.url, timeout=3.0)\n        try:\n            return rpc_proxy.search(terms, operator or 'and')\n        finally:\n            rpc_proxy('close')()\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "format",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "self.subTest",
      "filename": "",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "self.assertRaisesRegex",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/six.py",
      "line": 703,
      "caller": "test_various",
      "source_code": "def assertRaisesRegex(self, *args, **kwargs):\n    return getattr(self, _assertRaisesRegex)(*args, **kwargs)\n\n\n"
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "group_list.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line": 100,
      "caller": "test_various",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)\n\n"
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "ascii",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "int",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "group_list.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/junitxml.py",
      "line": 100,
      "caller": "test_various",
      "source_code": "    def append(self, node: ET.Element) -> None:\n        self.xml.add_stats(node.tag)\n        self.nodes.append(node)\n\n"
    },
    {
      "function": "m.group",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_py/path.py",
      "line": 229,
      "caller": "test_various",
      "source_code": "    @property\n    def group(self):\n        \"\"\"Return group name of file.\"\"\"\n        if iswin32:\n            raise NotImplementedError(\"XXX win32\")\n        import grp\n\n        entry = error.checked_call(grp.getgrgid, self.gid)  # type:ignore[attr-defined,unused-ignore]\n        return entry[0]\n\n"
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    },
    {
      "function": "chr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_various",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_various(self):\n        tests = [\n            # Test ?P< and ?P= extensions.\n            ('(?P<foo_123', '', '', regex.error, self.MISSING_GT),      # Unterminated group identifier.\n            ('(?P<1>a)', '', '', regex.error, self.BAD_GROUP_NAME),     # Begins with a digit.\n            ('(?P<!>a)', '', '', regex.error, self.BAD_GROUP_NAME),     # Begins with an illegal char.\n            ('(?P<foo!>a)', '', '', regex.error, self.BAD_GROUP_NAME),  # Begins with an illegal char.\n\n            # Same tests, for the ?P= form.\n            ('(?P<foo_123>a)(?P=foo_123', 'aa', '', regex.error,\n              self.MISSING_RPAREN),\n            ('(?P<foo_123>a)(?P=1)', 'aa', '1', ascii('a')),\n            ('(?P<foo_123>a)(?P=0)', 'aa', '', regex.error,\n              self.BAD_GROUP_NAME),\n            ('(?P<foo_123>a)(?P=-1)', 'aa', '', regex.error,\n              self.BAD_GROUP_NAME),\n            ('(?P<foo_123>a)(?P=!)', 'aa', '', regex.error,\n              self.BAD_GROUP_NAME),\n            ('(?P<foo_123>a)(?P=foo_124)', 'aa', '', regex.error,\n              self.UNKNOWN_GROUP),  # Backref to undefined group.\n\n            ('(?P<foo_123>a)', 'a', '1', ascii('a')),\n            ('(?P<foo_123>a)(?P=foo_123)', 'aa', '1', ascii('a')),\n\n            # Mal-formed \\g in pattern treated as literal for compatibility.\n            (r'(?<foo_123>a)\\g<foo_123', 'aa', '', ascii(None)),\n            (r'(?<foo_123>a)\\g<1>', 'aa', '1', ascii('a')),\n            (r'(?<foo_123>a)\\g<!>', 'aa', '', ascii(None)),\n            (r'(?<foo_123>a)\\g<foo_124>', 'aa', '', regex.error,\n              self.UNKNOWN_GROUP),  # Backref to undefined group.\n\n            ('(?<foo_123>a)', 'a', '1', ascii('a')),\n            (r'(?<foo_123>a)\\g<foo_123>', 'aa', '1', ascii('a')),\n\n            # Test octal escapes.\n            ('\\\\1', 'a', '', regex.error, self.INVALID_GROUP_REF),    # Backreference.\n            ('[\\\\1]', '\\1', '0', \"'\\\\x01'\"),  # Character.\n            ('\\\\09', chr(0) + '9', '0', ascii(chr(0) + '9')),\n            ('\\\\141', 'a', '0', ascii('a')),\n            ('(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)\\\\119', 'abcdefghijklk9',\n              '0,11', ascii(('abcdefghijklk9', 'k'))),\n\n            # Test \\0 is handled everywhere.\n            (r'\\0', '\\0', '0', ascii('\\0')),\n            (r'[\\0a]', '\\0', '0', ascii('\\0')),\n            (r'[a\\0]', '\\0', '0', ascii('\\0')),\n            (r'[^a\\0]', '\\0', '', ascii(None)),\n\n            # Test various letter escapes.\n            (r'\\a[\\b]\\f\\n\\r\\t\\v', '\\a\\b\\f\\n\\r\\t\\v', '0',\n              ascii('\\a\\b\\f\\n\\r\\t\\v')),\n            (r'[\\a][\\b][\\f][\\n][\\r][\\t][\\v]', '\\a\\b\\f\\n\\r\\t\\v', '0',\n              ascii('\\a\\b\\f\\n\\r\\t\\v')),\n            (r'\\xff', '\\377', '0', ascii(chr(255))),\n\n            # New \\x semantics.\n            (r'\\x00ffffffffffffff', '\\377', '', ascii(None)),\n            (r'\\x00f', '\\017', '', ascii(None)),\n            (r'\\x00fe', '\\376', '', ascii(None)),\n\n            (r'\\x00ff', '\\377', '', ascii(None)),\n            (r'\\t\\n\\v\\r\\f\\a\\g', '\\t\\n\\v\\r\\f\\ag', '0', ascii('\\t\\n\\v\\r\\f\\ag')),\n            ('\\t\\n\\v\\r\\f\\a\\\\g', '\\t\\n\\v\\r\\f\\ag', '0', ascii('\\t\\n\\v\\r\\f\\ag')),\n            (r'\\t\\n\\v\\r\\f\\a', '\\t\\n\\v\\r\\f\\a', '0', ascii(chr(9) + chr(10) +\n              chr(11) + chr(13) + chr(12) + chr(7))),\n            (r'[\\t][\\n][\\v][\\r][\\f][\\b]', '\\t\\n\\v\\r\\f\\b', '0',\n              ascii('\\t\\n\\v\\r\\f\\b')),\n\n            (r\"^\\w+=(\\\\[\\000-\\277]|[^\\n\\\\])*\",\n              \"SRC=eval.c g.c blah blah blah \\\\\\\\\\n\\tapes.c\", '0',\n              ascii(\"SRC=eval.c g.c blah blah blah \\\\\\\\\")),\n\n            # Test that . only matches \\n in DOTALL mode.\n            ('a.b', 'acb', '0', ascii('acb')),\n            ('a.b', 'a\\nb', '', ascii(None)),\n            ('a.*b', 'acc\\nccb', '', ascii(None)),\n            ('a.{4,5}b', 'acc\\nccb', '', ascii(None)),\n            ('a.b', 'a\\rb', '0', ascii('a\\rb')),\n            # Changed to positional flags in regex 2023.12.23.\n            ('a.b(?s)', 'a\\nb', '', ascii(None)),\n            ('(?s)a.b', 'a\\nb', '0', ascii('a\\nb')),\n            ('a.*(?s)b', 'acc\\nccb', '', ascii(None)),\n            ('(?s)a.*b', 'acc\\nccb', '0', ascii('acc\\nccb')),\n            ('(?s)a.{4,5}b', 'acc\\nccb', '0', ascii('acc\\nccb')),\n\n            (')', '', '', regex.error, self.TRAILING_CHARS),           # Unmatched right bracket.\n            ('', '', '0', \"''\"),    # Empty pattern.\n            ('abc', 'abc', '0', ascii('abc')),\n            ('abc', 'xbc', '', ascii(None)),\n            ('abc', 'axc', '', ascii(None)),\n            ('abc', 'abx', '', ascii(None)),\n            ('abc', 'xabcy', '0', ascii('abc')),\n            ('abc', 'ababc', '0', ascii('abc')),\n            ('ab*c', 'abc', '0', ascii('abc')),\n            ('ab*bc', 'abc', '0', ascii('abc')),\n\n            ('ab*bc', 'abbc', '0', ascii('abbc')),\n            ('ab*bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab+bc', 'abbc', '0', ascii('abbc')),\n            ('ab+bc', 'abc', '', ascii(None)),\n            ('ab+bc', 'abq', '', ascii(None)),\n            ('ab+bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab?bc', 'abbc', '0', ascii('abbc')),\n            ('ab?bc', 'abc', '0', ascii('abc')),\n            ('ab?bc', 'abbbbc', '', ascii(None)),\n            ('ab?c', 'abc', '0', ascii('abc')),\n\n            ('^abc$', 'abc', '0', ascii('abc')),\n            ('^abc$', 'abcc', '', ascii(None)),\n            ('^abc', 'abcc', '0', ascii('abc')),\n            ('^abc$', 'aabc', '', ascii(None)),\n            ('abc$', 'aabc', '0', ascii('abc')),\n            ('^', 'abc', '0', ascii('')),\n            ('$', 'abc', '0', ascii('')),\n            ('a.c', 'abc', '0', ascii('abc')),\n            ('a.c', 'axc', '0', ascii('axc')),\n            ('a.*c', 'axyzc', '0', ascii('axyzc')),\n\n            ('a.*c', 'axyzd', '', ascii(None)),\n            ('a[bc]d', 'abc', '', ascii(None)),\n            ('a[bc]d', 'abd', '0', ascii('abd')),\n            ('a[b-d]e', 'abd', '', ascii(None)),\n            ('a[b-d]e', 'ace', '0', ascii('ace')),\n            ('a[b-d]', 'aac', '0', ascii('ac')),\n            ('a[-b]', 'a-', '0', ascii('a-')),\n            ('a[\\\\-b]', 'a-', '0', ascii('a-')),\n            ('a[b-]', 'a-', '0', ascii('a-')),\n            ('a[]b', '-', '', regex.error, self.BAD_SET),\n\n            ('a[', '-', '', regex.error, self.BAD_SET),\n            ('a\\\\', '-', '', regex.error, self.BAD_ESCAPE),\n            ('abc)', '-', '', regex.error, self.TRAILING_CHARS),\n            ('(abc', '-', '', regex.error, self.MISSING_RPAREN),\n            ('a]', 'a]', '0', ascii('a]')),\n            ('a[]]b', 'a]b', '0', ascii('a]b')),\n            ('a[]]b', 'a]b', '0', ascii('a]b')),\n            ('a[^bc]d', 'aed', '0', ascii('aed')),\n            ('a[^bc]d', 'abd', '', ascii(None)),\n            ('a[^-b]c', 'adc', '0', ascii('adc')),\n\n            ('a[^-b]c', 'a-c', '', ascii(None)),\n            ('a[^]b]c', 'a]c', '', ascii(None)),\n            ('a[^]b]c', 'adc', '0', ascii('adc')),\n            ('\\\\ba\\\\b', 'a-', '0', ascii('a')),\n            ('\\\\ba\\\\b', '-a', '0', ascii('a')),\n            ('\\\\ba\\\\b', '-a-', '0', ascii('a')),\n            ('\\\\by\\\\b', 'xy', '', ascii(None)),\n            ('\\\\by\\\\b', 'yz', '', ascii(None)),\n            ('\\\\by\\\\b', 'xyz', '', ascii(None)),\n            ('x\\\\b', 'xyz', '', ascii(None)),\n\n            ('x\\\\B', 'xyz', '0', ascii('x')),\n            ('\\\\Bz', 'xyz', '0', ascii('z')),\n            ('z\\\\B', 'xyz', '', ascii(None)),\n            ('\\\\Bx', 'xyz', '', ascii(None)),\n            ('\\\\Ba\\\\B', 'a-', '', ascii(None)),\n            ('\\\\Ba\\\\B', '-a', '', ascii(None)),\n            ('\\\\Ba\\\\B', '-a-', '', ascii(None)),\n            ('\\\\By\\\\B', 'xy', '', ascii(None)),\n            ('\\\\By\\\\B', 'yz', '', ascii(None)),\n            ('\\\\By\\\\b', 'xy', '0', ascii('y')),\n\n            ('\\\\by\\\\B', 'yz', '0', ascii('y')),\n            ('\\\\By\\\\B', 'xyz', '0', ascii('y')),\n            ('ab|cd', 'abc', '0', ascii('ab')),\n            ('ab|cd', 'abcd', '0', ascii('ab')),\n            ('()ef', 'def', '0,1', ascii(('ef', ''))),\n            ('$b', 'b', '', ascii(None)),\n            ('a\\\\(b', 'a(b', '', ascii(('a(b',))),\n            ('a\\\\(*b', 'ab', '0', ascii('ab')),\n            ('a\\\\(*b', 'a((b', '0', ascii('a((b')),\n            ('a\\\\\\\\b', 'a\\\\b', '0', ascii('a\\\\b')),\n\n            ('((a))', 'abc', '0,1,2', ascii(('a', 'a', 'a'))),\n            ('(a)b(c)', 'abc', '0,1,2', ascii(('abc', 'a', 'c'))),\n            ('a+b+c', 'aabbabc', '0', ascii('abc')),\n            ('(a+|b)*', 'ab', '0,1', ascii(('ab', 'b'))),\n            ('(a+|b)+', 'ab', '0,1', ascii(('ab', 'b'))),\n            ('(a+|b)?', 'ab', '0,1', ascii(('a', 'a'))),\n            (')(', '-', '', regex.error, self.TRAILING_CHARS),\n            ('[^ab]*', 'cde', '0', ascii('cde')),\n            ('abc', '', '', ascii(None)),\n            ('a*', '', '0', ascii('')),\n\n            ('a|b|c|d|e', 'e', '0', ascii('e')),\n            ('(a|b|c|d|e)f', 'ef', '0,1', ascii(('ef', 'e'))),\n            ('abcd*efg', 'abcdefg', '0', ascii('abcdefg')),\n            ('ab*', 'xabyabbbz', '0', ascii('ab')),\n            ('ab*', 'xayabbbz', '0', ascii('a')),\n            ('(ab|cd)e', 'abcde', '0,1', ascii(('cde', 'cd'))),\n            ('[abhgefdc]ij', 'hij', '0', ascii('hij')),\n            ('^(ab|cd)e', 'abcde', '', ascii(None)),\n            ('(abc|)ef', 'abcdef', '0,1', ascii(('ef', ''))),\n            ('(a|b)c*d', 'abcd', '0,1', ascii(('bcd', 'b'))),\n\n            ('(ab|ab*)bc', 'abc', '0,1', ascii(('abc', 'a'))),\n            ('a([bc]*)c*', 'abc', '0,1', ascii(('abc', 'bc'))),\n            ('a([bc]*)(c*d)', 'abcd', '0,1,2', ascii(('abcd', 'bc', 'd'))),\n            ('a([bc]+)(c*d)', 'abcd', '0,1,2', ascii(('abcd', 'bc', 'd'))),\n            ('a([bc]*)(c+d)', 'abcd', '0,1,2', ascii(('abcd', 'b', 'cd'))),\n            ('a[bcd]*dcdcde', 'adcdcde', '0', ascii('adcdcde')),\n            ('a[bcd]+dcdcde', 'adcdcde', '', ascii(None)),\n            ('(ab|a)b*c', 'abc', '0,1', ascii(('abc', 'ab'))),\n            ('((a)(b)c)(d)', 'abcd', '1,2,3,4', ascii(('abc', 'a', 'b', 'd'))),\n            ('[a-zA-Z_][a-zA-Z0-9_]*', 'alpha', '0', ascii('alpha')),\n\n            ('^a(bc+|b[eh])g|.h$', 'abh', '0,1', ascii(('bh', None))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'effgz', '0,1,2', ascii(('effgz',\n              'effgz', None))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'ij', '0,1,2', ascii(('ij', 'ij',\n              'j'))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'effg', '', ascii(None)),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'bcdd', '', ascii(None)),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'reffgz', '0,1,2', ascii(('effgz',\n              'effgz', None))),\n            ('(((((((((a)))))))))', 'a', '0', ascii('a')),\n            ('multiple words of text', 'uh-uh', '', ascii(None)),\n            ('multiple words', 'multiple words, yeah', '0',\n              ascii('multiple words')),\n            ('(.*)c(.*)', 'abcde', '0,1,2', ascii(('abcde', 'ab', 'de'))),\n\n            ('\\\\((.*), (.*)\\\\)', '(a, b)', '2,1', ascii(('b', 'a'))),\n            ('[k]', 'ab', '', ascii(None)),\n            ('a[-]?c', 'ac', '0', ascii('ac')),\n            ('(abc)\\\\1', 'abcabc', '1', ascii('abc')),\n            ('([a-c]*)\\\\1', 'abcabc', '1', ascii('abc')),\n            ('^(.+)?B', 'AB', '1', ascii('A')),\n            ('(a+).\\\\1$', 'aaaaa', '0,1', ascii(('aaaaa', 'aa'))),\n            ('^(a+).\\\\1$', 'aaaa', '', ascii(None)),\n            ('(abc)\\\\1', 'abcabc', '0,1', ascii(('abcabc', 'abc'))),\n            ('([a-c]+)\\\\1', 'abcabc', '0,1', ascii(('abcabc', 'abc'))),\n\n            ('(a)\\\\1', 'aa', '0,1', ascii(('aa', 'a'))),\n            ('(a+)\\\\1', 'aa', '0,1', ascii(('aa', 'a'))),\n            ('(a+)+\\\\1', 'aa', '0,1', ascii(('aa', 'a'))),\n            ('(a).+\\\\1', 'aba', '0,1', ascii(('aba', 'a'))),\n            ('(a)ba*\\\\1', 'aba', '0,1', ascii(('aba', 'a'))),\n            ('(aa|a)a\\\\1$', 'aaa', '0,1', ascii(('aaa', 'a'))),\n            ('(a|aa)a\\\\1$', 'aaa', '0,1', ascii(('aaa', 'a'))),\n            ('(a+)a\\\\1$', 'aaa', '0,1', ascii(('aaa', 'a'))),\n            ('([abc]*)\\\\1', 'abcabc', '0,1', ascii(('abcabc', 'abc'))),\n            ('(a)(b)c|ab', 'ab', '0,1,2', ascii(('ab', None, None))),\n\n            ('(a)+x', 'aaax', '0,1', ascii(('aaax', 'a'))),\n            ('([ac])+x', 'aacx', '0,1', ascii(('aacx', 'c'))),\n            ('([^/]*/)*sub1/', 'd:msgs/tdir/sub1/trial/away.cpp', '0,1',\n              ascii(('d:msgs/tdir/sub1/', 'tdir/'))),\n            ('([^.]*)\\\\.([^:]*):[T ]+(.*)', 'track1.title:TBlah blah blah',\n              '0,1,2,3', ascii(('track1.title:TBlah blah blah', 'track1',\n              'title', 'Blah blah blah'))),\n            ('([^N]*N)+', 'abNNxyzN', '0,1', ascii(('abNNxyzN', 'xyzN'))),\n            ('([^N]*N)+', 'abNNxyz', '0,1', ascii(('abNN', 'N'))),\n            ('([abc]*)x', 'abcx', '0,1', ascii(('abcx', 'abc'))),\n            ('([abc]*)x', 'abc', '', ascii(None)),\n            ('([xyz]*)x', 'abcx', '0,1', ascii(('x', ''))),\n            ('(a)+b|aac', 'aac', '0,1', ascii(('aac', None))),\n\n            # Test symbolic groups.\n            ('(?P<i d>aaa)a', 'aaaa', '', regex.error, self.BAD_GROUP_NAME),\n            ('(?P<id>aaa)a', 'aaaa', '0,id', ascii(('aaaa', 'aaa'))),\n            ('(?P<id>aa)(?P=id)', 'aaaa', '0,id', ascii(('aaaa', 'aa'))),\n            ('(?P<id>aa)(?P=xd)', 'aaaa', '', regex.error, self.UNKNOWN_GROUP),\n\n            # Character properties.\n            (r\"\\g\", \"g\", '0', ascii('g')),\n            (r\"\\g<1>\", \"g\", '', regex.error, self.INVALID_GROUP_REF),\n            (r\"(.)\\g<1>\", \"gg\", '0', ascii('gg')),\n            (r\"(.)\\g<1>\", \"gg\", '', ascii(('gg', 'g'))),\n            (r\"\\N\", \"N\", '0', ascii('N')),\n            (r\"\\N{LATIN SMALL LETTER A}\", \"a\", '0', ascii('a')),\n            (r\"\\p\", \"p\", '0', ascii('p')),\n            (r\"\\p{Ll}\", \"a\", '0', ascii('a')),\n            (r\"\\P\", \"P\", '0', ascii('P')),\n            (r\"\\P{Lu}\", \"p\", '0', ascii('p')),\n\n            # All tests from Perl.\n            ('abc', 'abc', '0', ascii('abc')),\n            ('abc', 'xbc', '', ascii(None)),\n            ('abc', 'axc', '', ascii(None)),\n            ('abc', 'abx', '', ascii(None)),\n            ('abc', 'xabcy', '0', ascii('abc')),\n            ('abc', 'ababc', '0', ascii('abc')),\n\n            ('ab*c', 'abc', '0', ascii('abc')),\n            ('ab*bc', 'abc', '0', ascii('abc')),\n            ('ab*bc', 'abbc', '0', ascii('abbc')),\n            ('ab*bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab{0,}bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab+bc', 'abbc', '0', ascii('abbc')),\n            ('ab+bc', 'abc', '', ascii(None)),\n            ('ab+bc', 'abq', '', ascii(None)),\n            ('ab{1,}bc', 'abq', '', ascii(None)),\n            ('ab+bc', 'abbbbc', '0', ascii('abbbbc')),\n\n            ('ab{1,}bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab{1,3}bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab{3,4}bc', 'abbbbc', '0', ascii('abbbbc')),\n            ('ab{4,5}bc', 'abbbbc', '', ascii(None)),\n            ('ab?bc', 'abbc', '0', ascii('abbc')),\n            ('ab?bc', 'abc', '0', ascii('abc')),\n            ('ab{0,1}bc', 'abc', '0', ascii('abc')),\n            ('ab?bc', 'abbbbc', '', ascii(None)),\n            ('ab?c', 'abc', '0', ascii('abc')),\n            ('ab{0,1}c', 'abc', '0', ascii('abc')),\n\n            ('^abc$', 'abc', '0', ascii('abc')),\n            ('^abc$', 'abcc', '', ascii(None)),\n            ('^abc', 'abcc', '0', ascii('abc')),\n            ('^abc$', 'aabc', '', ascii(None)),\n            ('abc$', 'aabc', '0', ascii('abc')),\n            ('^', 'abc', '0', ascii('')),\n            ('$', 'abc', '0', ascii('')),\n            ('a.c', 'abc', '0', ascii('abc')),\n            ('a.c', 'axc', '0', ascii('axc')),\n            ('a.*c', 'axyzc', '0', ascii('axyzc')),\n\n            ('a.*c', 'axyzd', '', ascii(None)),\n            ('a[bc]d', 'abc', '', ascii(None)),\n            ('a[bc]d', 'abd', '0', ascii('abd')),\n            ('a[b-d]e', 'abd', '', ascii(None)),\n            ('a[b-d]e', 'ace', '0', ascii('ace')),\n            ('a[b-d]', 'aac', '0', ascii('ac')),\n            ('a[-b]', 'a-', '0', ascii('a-')),\n            ('a[b-]', 'a-', '0', ascii('a-')),\n            ('a[b-a]', '-', '', regex.error, self.BAD_CHAR_RANGE),\n            ('a[]b', '-', '', regex.error, self.BAD_SET),\n\n            ('a[', '-', '', regex.error, self.BAD_SET),\n            ('a]', 'a]', '0', ascii('a]')),\n            ('a[]]b', 'a]b', '0', ascii('a]b')),\n            ('a[^bc]d', 'aed', '0', ascii('aed')),\n            ('a[^bc]d', 'abd', '', ascii(None)),\n            ('a[^-b]c', 'adc', '0', ascii('adc')),\n            ('a[^-b]c', 'a-c', '', ascii(None)),\n            ('a[^]b]c', 'a]c', '', ascii(None)),\n            ('a[^]b]c', 'adc', '0', ascii('adc')),\n            ('ab|cd', 'abc', '0', ascii('ab')),\n\n            ('ab|cd', 'abcd', '0', ascii('ab')),\n            ('()ef', 'def', '0,1', ascii(('ef', ''))),\n            ('*a', '-', '', regex.error, self.NOTHING_TO_REPEAT),\n            ('(*)b', '-', '', regex.error, self.NOTHING_TO_REPEAT),\n            ('$b', 'b', '', ascii(None)),\n            ('a\\\\', '-', '', regex.error, self.BAD_ESCAPE),\n            ('a\\\\(b', 'a(b', '', ascii(('a(b',))),\n            ('a\\\\(*b', 'ab', '0', ascii('ab')),\n            ('a\\\\(*b', 'a((b', '0', ascii('a((b')),\n            ('a\\\\\\\\b', 'a\\\\b', '0', ascii('a\\\\b')),\n\n            ('abc)', '-', '', regex.error, self.TRAILING_CHARS),\n            ('(abc', '-', '', regex.error, self.MISSING_RPAREN),\n            ('((a))', 'abc', '0,1,2', ascii(('a', 'a', 'a'))),\n            ('(a)b(c)', 'abc', '0,1,2', ascii(('abc', 'a', 'c'))),\n            ('a+b+c', 'aabbabc', '0', ascii('abc')),\n            ('a{1,}b{1,}c', 'aabbabc', '0', ascii('abc')),\n            ('a**', '-', '', regex.error, self.MULTIPLE_REPEAT),\n            ('a.+?c', 'abcabc', '0', ascii('abc')),\n            ('(a+|b)*', 'ab', '0,1', ascii(('ab', 'b'))),\n            ('(a+|b){0,}', 'ab', '0,1', ascii(('ab', 'b'))),\n\n            ('(a+|b)+', 'ab', '0,1', ascii(('ab', 'b'))),\n            ('(a+|b){1,}', 'ab', '0,1', ascii(('ab', 'b'))),\n            ('(a+|b)?', 'ab', '0,1', ascii(('a', 'a'))),\n            ('(a+|b){0,1}', 'ab', '0,1', ascii(('a', 'a'))),\n            (')(', '-', '', regex.error, self.TRAILING_CHARS),\n            ('[^ab]*', 'cde', '0', ascii('cde')),\n            ('abc', '', '', ascii(None)),\n            ('a*', '', '0', ascii('')),\n            ('([abc])*d', 'abbbcd', '0,1', ascii(('abbbcd', 'c'))),\n            ('([abc])*bcd', 'abcd', '0,1', ascii(('abcd', 'a'))),\n\n            ('a|b|c|d|e', 'e', '0', ascii('e')),\n            ('(a|b|c|d|e)f', 'ef', '0,1', ascii(('ef', 'e'))),\n            ('abcd*efg', 'abcdefg', '0', ascii('abcdefg')),\n            ('ab*', 'xabyabbbz', '0', ascii('ab')),\n            ('ab*', 'xayabbbz', '0', ascii('a')),\n            ('(ab|cd)e', 'abcde', '0,1', ascii(('cde', 'cd'))),\n            ('[abhgefdc]ij', 'hij', '0', ascii('hij')),\n            ('^(ab|cd)e', 'abcde', '', ascii(None)),\n            ('(abc|)ef', 'abcdef', '0,1', ascii(('ef', ''))),\n            ('(a|b)c*d', 'abcd', '0,1', ascii(('bcd', 'b'))),\n\n            ('(ab|ab*)bc', 'abc', '0,1', ascii(('abc', 'a'))),\n            ('a([bc]*)c*', 'abc', '0,1', ascii(('abc', 'bc'))),\n            ('a([bc]*)(c*d)', 'abcd', '0,1,2', ascii(('abcd', 'bc', 'd'))),\n            ('a([bc]+)(c*d)', 'abcd', '0,1,2', ascii(('abcd', 'bc', 'd'))),\n            ('a([bc]*)(c+d)', 'abcd', '0,1,2', ascii(('abcd', 'b', 'cd'))),\n            ('a[bcd]*dcdcde', 'adcdcde', '0', ascii('adcdcde')),\n            ('a[bcd]+dcdcde', 'adcdcde', '', ascii(None)),\n            ('(ab|a)b*c', 'abc', '0,1', ascii(('abc', 'ab'))),\n            ('((a)(b)c)(d)', 'abcd', '1,2,3,4', ascii(('abc', 'a', 'b', 'd'))),\n            ('[a-zA-Z_][a-zA-Z0-9_]*', 'alpha', '0', ascii('alpha')),\n\n            ('^a(bc+|b[eh])g|.h$', 'abh', '0,1', ascii(('bh', None))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'effgz', '0,1,2', ascii(('effgz',\n              'effgz', None))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'ij', '0,1,2', ascii(('ij', 'ij',\n              'j'))),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'effg', '', ascii(None)),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'bcdd', '', ascii(None)),\n            ('(bc+d$|ef*g.|h?i(j|k))', 'reffgz', '0,1,2', ascii(('effgz',\n              'effgz', None))),\n            ('((((((((((a))))))))))', 'a', '10', ascii('a')),\n            ('((((((((((a))))))))))\\\\10', 'aa', '0', ascii('aa')),\n\n            # Python does not have the same rules for \\\\41 so this is a syntax error\n            #    ('((((((((((a))))))))))\\\\41', 'aa', '', ascii(None)),\n            #    ('((((((((((a))))))))))\\\\41', 'a!', '0', ascii('a!')),\n            ('((((((((((a))))))))))\\\\41', '', '', regex.error,\n              self.INVALID_GROUP_REF),\n            ('(?i)((((((((((a))))))))))\\\\41', '', '', regex.error,\n              self.INVALID_GROUP_REF),\n\n            ('(((((((((a)))))))))', 'a', '0', ascii('a')),\n            ('multiple words of text', 'uh-uh', '', ascii(None)),\n            ('multiple words', 'multiple words, yeah', '0',\n              ascii('multiple words')),\n            ('(.*)c(.*)', 'abcde', '0,1,2', ascii(('abcde', 'ab', 'de'))),\n            ('\\\\((.*), (.*)\\\\)', '(a, b)', '2,1', ascii(('b', 'a'))),\n            ('[k]', 'ab', '', ascii(None)),\n            ('a[-]?c', 'ac', '0', ascii('ac')),\n            ('(abc)\\\\1', 'abcabc', '1', ascii('abc')),\n            ('([a-c]*)\\\\1', 'abcabc', '1', ascii('abc')),\n            ('(?i)abc', 'ABC', '0', ascii('ABC')),\n\n            ('(?i)abc', 'XBC', '', ascii(None)),\n            ('(?i)abc', 'AXC', '', ascii(None)),\n            ('(?i)abc', 'ABX', '', ascii(None)),\n            ('(?i)abc', 'XABCY', '0', ascii('ABC')),\n            ('(?i)abc', 'ABABC', '0', ascii('ABC')),\n            ('(?i)ab*c', 'ABC', '0', ascii('ABC')),\n            ('(?i)ab*bc', 'ABC', '0', ascii('ABC')),\n            ('(?i)ab*bc', 'ABBC', '0', ascii('ABBC')),\n            ('(?i)ab*?bc', 'ABBBBC', '0', ascii('ABBBBC')),\n            ('(?i)ab{0,}?bc', 'ABBBBC', '0', ascii('ABBBBC')),\n\n            ('(?i)ab+?bc', 'ABBC', '0', ascii('ABBC')),\n            ('(?i)ab+bc', 'ABC', '', ascii(None)),\n            ('(?i)ab+bc', 'ABQ', '', ascii(None)),\n            ('(?i)ab{1,}bc', 'ABQ', '', ascii(None)),\n            ('(?i)ab+bc', 'ABBBBC', '0', ascii('ABBBBC')),\n            ('(?i)ab{1,}?bc', 'ABBBBC', '0', ascii('ABBBBC')),\n            ('(?i)ab{1,3}?bc', 'ABBBBC', '0', ascii('ABBBBC')),\n            ('(?i)ab{3,4}?bc', 'ABBBBC', '0', ascii('ABBBBC')),\n            ('(?i)ab{4,5}?bc', 'ABBBBC', '', ascii(None)),\n            ('(?i)ab??bc', 'ABBC', '0', ascii('ABBC')),\n\n            ('(?i)ab??bc', 'ABC', '0', ascii('ABC')),\n            ('(?i)ab{0,1}?bc', 'ABC', '0', ascii('ABC')),\n            ('(?i)ab??bc', 'ABBBBC', '', ascii(None)),\n            ('(?i)ab??c', 'ABC', '0', ascii('ABC')),\n            ('(?i)ab{0,1}?c', 'ABC', '0', ascii('ABC')),\n            ('(?i)^abc$', 'ABC', '0', ascii('ABC')),\n            ('(?i)^abc$', 'ABCC', '', ascii(None)),\n            ('(?i)^abc', 'ABCC', '0', ascii('ABC')),\n            ('(?i)^abc$', 'AABC', '', ascii(None)),\n            ('(?i)abc$', 'AABC', '0', ascii('ABC')),\n\n            ('(?i)^', 'ABC', '0', ascii('')),\n            ('(?i)$', 'ABC', '0', ascii('')),\n            ('(?i)a.c', 'ABC', '0', ascii('ABC')),\n            ('(?i)a.c', 'AXC', '0', ascii('AXC')),\n            ('(?i)a.*?c', 'AXYZC', '0', ascii('AXYZC')),\n            ('(?i)a.*c', 'AXYZD', '', ascii(None)),\n            ('(?i)a[bc]d', 'ABC', '', ascii(None)),\n            ('(?i)a[bc]d', 'ABD', '0', ascii('ABD')),\n            ('(?i)a[b-d]e', 'ABD', '', ascii(None)),\n            ('(?i)a[b-d]e', 'ACE', '0', ascii('ACE')),\n\n            ('(?i)a[b-d]', 'AAC', '0', ascii('AC')),\n            ('(?i)a[-b]', 'A-', '0', ascii('A-')),\n            ('(?i)a[b-]', 'A-', '0', ascii('A-')),\n            ('(?i)a[b-a]', '-', '', regex.error, self.BAD_CHAR_RANGE),\n            ('(?i)a[]b', '-', '', regex.error, self.BAD_SET),\n            ('(?i)a[', '-', '', regex.error, self.BAD_SET),\n            ('(?i)a]', 'A]', '0', ascii('A]')),\n            ('(?i)a[]]b', 'A]B', '0', ascii('A]B')),\n            ('(?i)a[^bc]d', 'AED', '0', ascii('AED')),\n            ('(?i)a[^bc]d', 'ABD', '', ascii(None)),\n\n            ('(?i)a[^-b]c', 'ADC', '0', ascii('ADC')),\n            ('(?i)a[^-b]c', 'A-C', '', ascii(None)),\n            ('(?i)a[^]b]c', 'A]C', '', ascii(None)),\n            ('(?i)a[^]b]c', 'ADC', '0', ascii('ADC')),\n            ('(?i)ab|cd', 'ABC', '0', ascii('AB')),\n            ('(?i)ab|cd', 'ABCD', '0', ascii('AB')),\n            ('(?i)()ef', 'DEF', '0,1', ascii(('EF', ''))),\n            ('(?i)*a', '-', '', regex.error, self.NOTHING_TO_REPEAT),\n            ('(?i)(*)b', '-', '', regex.error, self.NOTHING_TO_REPEAT),\n            ('(?i)$b', 'B', '', ascii(None)),\n\n            ('(?i)a\\\\', '-', '', regex.error, self.BAD_ESCAPE),\n            ('(?i)a\\\\(b', 'A(B', '', ascii(('A(B',))),\n            ('(?i)a\\\\(*b', 'AB', '0', ascii('AB')),\n            ('(?i)a\\\\(*b', 'A((B', '0', ascii('A((B')),\n            ('(?i)a\\\\\\\\b', 'A\\\\B', '0', ascii('A\\\\B')),\n            ('(?i)abc)', '-', '', regex.error, self.TRAILING_CHARS),\n            ('(?i)(abc', '-', '', regex.error, self.MISSING_RPAREN),\n            ('(?i)((a))', 'ABC', '0,1,2', ascii(('A', 'A', 'A'))),\n            ('(?i)(a)b(c)', 'ABC', '0,1,2', ascii(('ABC', 'A', 'C'))),\n            ('(?i)a+b+c', 'AABBABC', '0', ascii('ABC')),\n\n            ('(?i)a{1,}b{1,}c', 'AABBABC', '0', ascii('ABC')),\n            ('(?i)a**', '-', '', regex.error, self.MULTIPLE_REPEAT),\n            ('(?i)a.+?c', 'ABCABC', '0', ascii('ABC')),\n            ('(?i)a.*?c', 'ABCABC', '0', ascii('ABC')),\n            ('(?i)a.{0,5}?c', 'ABCABC', '0', ascii('ABC')),\n            ('(?i)(a+|b)*', 'AB', '0,1', ascii(('AB', 'B'))),\n            ('(?i)(a+|b){0,}', 'AB', '0,1', ascii(('AB', 'B'))),\n            ('(?i)(a+|b)+', 'AB', '0,1', ascii(('AB', 'B'))),\n            ('(?i)(a+|b){1,}', 'AB', '0,1', ascii(('AB', 'B'))),\n            ('(?i)(a+|b)?', 'AB', '0,1', ascii(('A', 'A'))),\n\n            ('(?i)(a+|b){0,1}', 'AB', '0,1', ascii(('A', 'A'))),\n            ('(?i)(a+|b){0,1}?', 'AB', '0,1', ascii(('', None))),\n            ('(?i))(', '-', '', regex.error, self.TRAILING_CHARS),\n            ('(?i)[^ab]*', 'CDE', '0', ascii('CDE')),\n            ('(?i)abc', '', '', ascii(None)),\n            ('(?i)a*', '', '0', ascii('')),\n            ('(?i)([abc])*d', 'ABBBCD', '0,1', ascii(('ABBBCD', 'C'))),\n            ('(?i)([abc])*bcd', 'ABCD', '0,1', ascii(('ABCD', 'A'))),\n            ('(?i)a|b|c|d|e', 'E', '0', ascii('E')),\n            ('(?i)(a|b|c|d|e)f', 'EF', '0,1', ascii(('EF', 'E'))),\n\n            ('(?i)abcd*efg', 'ABCDEFG', '0', ascii('ABCDEFG')),\n            ('(?i)ab*', 'XABYABBBZ', '0', ascii('AB')),\n            ('(?i)ab*', 'XAYABBBZ', '0', ascii('A')),\n            ('(?i)(ab|cd)e', 'ABCDE', '0,1', ascii(('CDE', 'CD'))),\n            ('(?i)[abhgefdc]ij', 'HIJ', '0', ascii('HIJ')),\n            ('(?i)^(ab|cd)e', 'ABCDE', '', ascii(None)),\n            ('(?i)(abc|)ef', 'ABCDEF', '0,1', ascii(('EF', ''))),\n            ('(?i)(a|b)c*d', 'ABCD', '0,1', ascii(('BCD', 'B'))),\n            ('(?i)(ab|ab*)bc', 'ABC', '0,1', ascii(('ABC', 'A'))),\n            ('(?i)a([bc]*)c*', 'ABC', '0,1', ascii(('ABC', 'BC'))),\n\n            ('(?i)a([bc]*)(c*d)', 'ABCD', '0,1,2', ascii(('ABCD', 'BC', 'D'))),\n            ('(?i)a([bc]+)(c*d)', 'ABCD', '0,1,2', ascii(('ABCD', 'BC', 'D'))),\n            ('(?i)a([bc]*)(c+d)', 'ABCD', '0,1,2', ascii(('ABCD', 'B', 'CD'))),\n            ('(?i)a[bcd]*dcdcde', 'ADCDCDE', '0', ascii('ADCDCDE')),\n            ('(?i)a[bcd]+dcdcde', 'ADCDCDE', '', ascii(None)),\n            ('(?i)(ab|a)b*c', 'ABC', '0,1', ascii(('ABC', 'AB'))),\n            ('(?i)((a)(b)c)(d)', 'ABCD', '1,2,3,4', ascii(('ABC', 'A', 'B',\n              'D'))),\n            ('(?i)[a-zA-Z_][a-zA-Z0-9_]*', 'ALPHA', '0', ascii('ALPHA')),\n            ('(?i)^a(bc+|b[eh])g|.h$', 'ABH', '0,1', ascii(('BH', None))),\n            ('(?i)(bc+d$|ef*g.|h?i(j|k))', 'EFFGZ', '0,1,2', ascii(('EFFGZ',\n              'EFFGZ', None))),\n\n            ('(?i)(bc+d$|ef*g.|h?i(j|k))', 'IJ', '0,1,2', ascii(('IJ', 'IJ',\n              'J'))),\n            ('(?i)(bc+d$|ef*g.|h?i(j|k))', 'EFFG', '', ascii(None)),\n            ('(?i)(bc+d$|ef*g.|h?i(j|k))', 'BCDD', '', ascii(None)),\n            ('(?i)(bc+d$|ef*g.|h?i(j|k))', 'REFFGZ', '0,1,2', ascii(('EFFGZ',\n              'EFFGZ', None))),\n            ('(?i)((((((((((a))))))))))', 'A', '10', ascii('A')),\n            ('(?i)((((((((((a))))))))))\\\\10', 'AA', '0', ascii('AA')),\n            #('(?i)((((((((((a))))))))))\\\\41', 'AA', '', ascii(None)),\n            #('(?i)((((((((((a))))))))))\\\\41', 'A!', '0', ascii('A!')),\n            ('(?i)(((((((((a)))))))))', 'A', '0', ascii('A')),\n            ('(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a))))))))))', 'A', '1',\n              ascii('A')),\n            ('(?i)(?:(?:(?:(?:(?:(?:(?:(?:(?:(a|b|c))))))))))', 'C', '1',\n              ascii('C')),\n            ('(?i)multiple words of text', 'UH-UH', '', ascii(None)),\n\n            ('(?i)multiple words', 'MULTIPLE WORDS, YEAH', '0',\n             ascii('MULTIPLE WORDS')),\n            ('(?i)(.*)c(.*)', 'ABCDE', '0,1,2', ascii(('ABCDE', 'AB', 'DE'))),\n            ('(?i)\\\\((.*), (.*)\\\\)', '(A, B)', '2,1', ascii(('B', 'A'))),\n            ('(?i)[k]', 'AB', '', ascii(None)),\n        #    ('(?i)abcd', 'ABCD', SUCCEED, 'found+\"-\"+\\\\found+\"-\"+\\\\\\\\found', ascii(ABCD-$&-\\\\ABCD)),\n        #    ('(?i)a(bc)d', 'ABCD', SUCCEED, 'g1+\"-\"+\\\\g1+\"-\"+\\\\\\\\g1', ascii(BC-$1-\\\\BC)),\n            ('(?i)a[-]?c', 'AC', '0', ascii('AC')),\n            ('(?i)(abc)\\\\1', 'ABCABC', '1', ascii('ABC')),\n            ('(?i)([a-c]*)\\\\1', 'ABCABC', '1', ascii('ABC')),\n            ('a(?!b).', 'abad', '0', ascii('ad')),\n            ('a(?=d).', 'abad', '0', ascii('ad')),\n            ('a(?=c|d).', 'abad', '0', ascii('ad')),\n\n            ('a(?:b|c|d)(.)', 'ace', '1', ascii('e')),\n            ('a(?:b|c|d)*(.)', 'ace', '1', ascii('e')),\n            ('a(?:b|c|d)+?(.)', 'ace', '1', ascii('e')),\n            ('a(?:b|(c|e){1,2}?|d)+?(.)', 'ace', '1,2', ascii(('c', 'e'))),\n\n            # Lookbehind: split by : but not if it is escaped by -.\n            ('(?<!-):(.*?)(?<!-):', 'a:bc-:de:f', '1', ascii('bc-:de')),\n            # Escaping with \\ as we know it.\n            ('(?<!\\\\\\\\):(.*?)(?<!\\\\\\\\):', 'a:bc\\\\:de:f', '1', ascii('bc\\\\:de')),\n            # Terminating with ' and escaping with ? as in edifact.\n            (\"(?<!\\\\?)'(.*?)(?<!\\\\?)'\", \"a'bc?'de'f\", '1', ascii(\"bc?'de\")),\n\n            # Comments using the (?#...) syntax.\n\n            ('w(?# comment', 'w', '', regex.error, self.MISSING_RPAREN),\n            ('w(?# comment 1)xy(?# comment 2)z', 'wxyz', '0', ascii('wxyz')),\n\n            # Check odd placement of embedded pattern modifiers.\n\n            # Not an error under PCRE/PRE:\n            # When the new behaviour is turned on positional inline flags affect\n            # only what follows.\n            ('w(?i)', 'W', '0', ascii(None)),\n            ('w(?i)', 'w', '0', ascii('w')),\n            ('(?i)w', 'W', '0', ascii('W')),\n\n            # Comments using the x embedded pattern modifier.\n            (\"\"\"(?x)w# comment 1\nx y\n# comment 2\nz\"\"\", 'wxyz', '0', ascii('wxyz')),\n\n            # Using the m embedded pattern modifier.\n            ('^abc', \"\"\"jkl\nabc\nxyz\"\"\", '', ascii(None)),\n            ('(?m)^abc', \"\"\"jkl\nabc\nxyz\"\"\", '0', ascii('abc')),\n\n            ('(?m)abc$', \"\"\"jkl\nxyzabc\n123\"\"\", '0', ascii('abc')),\n\n            # Using the s embedded pattern modifier.\n            ('a.b', 'a\\nb', '', ascii(None)),\n            ('(?s)a.b', 'a\\nb', '0', ascii('a\\nb')),\n\n            # Test \\w, etc. both inside and outside character classes.\n            ('\\\\w+', '--ab_cd0123--', '0', ascii('ab_cd0123')),\n            ('[\\\\w]+', '--ab_cd0123--', '0', ascii('ab_cd0123')),\n            ('\\\\D+', '1234abc5678', '0', ascii('abc')),\n            ('[\\\\D]+', '1234abc5678', '0', ascii('abc')),\n            ('[\\\\da-fA-F]+', '123abc', '0', ascii('123abc')),\n            # Not an error under PCRE/PRE:\n            # ('[\\\\d-x]', '-', '', regex.error, self.BAD_CHAR_RANGE),\n            (r'([\\s]*)([\\S]*)([\\s]*)', ' testing!1972', '3,2,1', ascii(('',\n              'testing!1972', ' '))),\n            (r'(\\s*)(\\S*)(\\s*)', ' testing!1972', '3,2,1', ascii(('',\n              'testing!1972', ' '))),\n\n            #\n            # Post-1.5.2 additions.\n\n            # xmllib problem.\n            (r'(([a-z]+):)?([a-z]+)$', 'smil', '1,2,3', ascii((None, None,\n              'smil'))),\n            # Bug 110866: reference to undefined group.\n            (r'((.)\\1+)', '', '', regex.error, self.OPEN_GROUP),\n            # Bug 111869: search (PRE/PCRE fails on this one, SRE doesn't).\n            (r'.*d', 'abc\\nabd', '0', ascii('abd')),\n            # Bug 112468: various expected syntax errors.\n            (r'(', '', '', regex.error, self.MISSING_RPAREN),\n            (r'[\\41]', '!', '0', ascii('!')),\n            # Bug 114033: nothing to repeat.\n            (r'(x?)?', 'x', '0', ascii('x')),\n            # Bug 115040: rescan if flags are modified inside pattern.\n            # Changed to positional flags in regex 2023.12.23.\n            (r' (?x)foo ', 'foo', '0', ascii(None)),\n            (r'(?x) foo ', 'foo', '0', ascii('foo')),\n            (r'(?x)foo ', 'foo', '0', ascii('foo')),\n            # Bug 115618: negative lookahead.\n            (r'(?<!abc)(d.f)', 'abcdefdof', '0', ascii('dof')),\n            # Bug 116251: character class bug.\n            (r'[\\w-]+', 'laser_beam', '0', ascii('laser_beam')),\n            # Bug 123769+127259: non-greedy backtracking bug.\n            (r'.*?\\S *:', 'xx:', '0', ascii('xx:')),\n            (r'a[ ]*?\\ (\\d+).*', 'a   10', '0', ascii('a   10')),\n            (r'a[ ]*?\\ (\\d+).*', 'a    10', '0', ascii('a    10')),\n            # Bug 127259: \\Z shouldn't depend on multiline mode.\n            (r'(?ms).*?x\\s*\\Z(.*)','xx\\nx\\n', '1', ascii('')),\n            # Bug 128899: uppercase literals under the ignorecase flag.\n            (r'(?i)M+', 'MMM', '0', ascii('MMM')),\n            (r'(?i)m+', 'MMM', '0', ascii('MMM')),\n            (r'(?i)[M]+', 'MMM', '0', ascii('MMM')),\n            (r'(?i)[m]+', 'MMM', '0', ascii('MMM')),\n            # Bug 130748: ^* should be an error (nothing to repeat).\n            # In 'regex' we won't bother to complain about this.\n            # (r'^*', '', '', regex.error, self.NOTHING_TO_REPEAT),\n            # Bug 133283: minimizing repeat problem.\n            (r'\"(?:\\\\\"|[^\"])*?\"', r'\"\\\"\"', '0', ascii(r'\"\\\"\"')),\n            # Bug 477728: minimizing repeat problem.\n            (r'^.*?$', 'one\\ntwo\\nthree\\n', '', ascii(None)),\n            # Bug 483789: minimizing repeat problem.\n            (r'a[^>]*?b', 'a>b', '', ascii(None)),\n            # Bug 490573: minimizing repeat problem.\n            (r'^a*?$', 'foo', '', ascii(None)),\n            # Bug 470582: nested groups problem.\n            (r'^((a)c)?(ab)$', 'ab', '1,2,3', ascii((None, None, 'ab'))),\n            # Another minimizing repeat problem (capturing groups in assertions).\n            ('^([ab]*?)(?=(b)?)c', 'abc', '1,2', ascii(('ab', None))),\n            ('^([ab]*?)(?!(b))c', 'abc', '1,2', ascii(('ab', None))),\n            ('^([ab]*?)(?<!(a))c', 'abc', '1,2', ascii(('ab', None))),\n            # Bug 410271: \\b broken under locales.\n            (r'\\b.\\b', 'a', '0', ascii('a')),\n            (r'\\b.\\b', '\\N{LATIN CAPITAL LETTER A WITH DIAERESIS}', '0',\n              ascii('\\xc4')),\n            (r'\\w', '\\N{LATIN CAPITAL LETTER A WITH DIAERESIS}', '0',\n              ascii('\\xc4')),\n        ]\n\n        for t in tests:\n            excval = None\n            try:\n                if len(t) == 4:\n                    pattern, string, groups, expected = t\n                else:\n                    pattern, string, groups, expected, excval = t\n            except ValueError:\n                fields = \", \".join([ascii(f) for f in t[ : 3]] + [\"...\"])\n                self.fail(\"Incorrect number of test fields: ({})\".format(fields))\n            else:\n                group_list = []\n                if groups:\n                    for group in groups.split(\",\"):\n                        try:\n                            group_list.append(int(group))\n                        except ValueError:\n                            group_list.append(group)\n\n                if excval is not None:\n                    with self.subTest(pattern=pattern, string=string):\n                        self.assertRaisesRegex(expected, excval, regex.search,\n                          pattern, string)\n                else:\n                    m = regex.search(pattern, string)\n                    if m:\n                        if group_list:\n                            actual = ascii(m.group(*group_list))\n                        else:\n                            actual = ascii(m[:])\n                    else:\n                        actual = ascii(m)\n\n                    self.assertEqual(actual, expected)"
}