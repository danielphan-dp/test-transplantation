{
  "test_name": "test_bad_eq_version_check",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/meta/test_parse_data.py",
  "static_methods": [
    {
      "name": "_run_pytest",
      "source_code": "def _run_pytest(data_suite: str) -> PytestResult:\n    return run_pytest_data_suite(data_suite, extra_args=[], max_attempts=1)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/meta/test_parse_data.py",
      "line_number": 10
    }
  ],
  "dynamic_methods": [
    {
      "function": "_run_pytest",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/meta/test_parse_data.py",
      "line": 10,
      "caller": "test_bad_eq_version_check",
      "source_code": "def _run_pytest(data_suite: str) -> PytestResult:\n    return run_pytest_data_suite(data_suite, extra_args=[], max_attempts=1)\n\n\n"
    }
  ],
  "assertions": [
    "assert 'version==3.7 always false since minimum runtime version is (3, 8)' in actual.stdout"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_bad_eq_version_check(self) -> None:\n        # Act\n        actual = _run_pytest(\n            \"\"\"\n            [case abc]\n            s: str\n            [out version==3.7]\n            abc\n            \"\"\"\n        )\n\n        # Assert\n        assert \"version==3.7 always false since minimum runtime version is (3, 8)\" in actual.stdout"
}