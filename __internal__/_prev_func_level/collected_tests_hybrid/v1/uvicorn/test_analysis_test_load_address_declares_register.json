{
  "test_name": "test_load_address_declares_register",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
  "static_methods": [
    {
      "name": "Register",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Register",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "LoadAddress",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "assert_no_errors",
      "source_code": "def assert_no_errors(fn: FuncIR) -> None:\n    assert not check_func_ir(fn)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line_number": 39
    },
    {
      "name": "FuncIR",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.func_decl",
      "source_code": "    def func_decl(self, name: str, ret_type: RType | None = None) -> FuncDecl:\n        if ret_type is None:\n            ret_type = none_rprimitive\n        return FuncDecl(\n            name=name,\n            class_name=None,\n            module_name=\"module\",\n            sig=FuncSignature(args=[], ret_type=ret_type),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line_number": 56
    },
    {
      "name": "self.basic_block",
      "source_code": "    def basic_block(self, ops: list[Op]) -> BasicBlock:\n        self.label += 1\n        block = BasicBlock(self.label)\n        block.ops = ops\n        return block",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line_number": 50
    },
    {
      "name": "Assign",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Return",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "Register",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    },
    {
      "function": "Register",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    },
    {
      "function": "LoadAddress",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    },
    {
      "function": "assert_no_errors",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line": 39,
      "caller": "test_load_address_declares_register",
      "source_code": "def assert_no_errors(fn: FuncIR) -> None:\n    assert not check_func_ir(fn)\n\n\n"
    },
    {
      "function": "FuncIR",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    },
    {
      "function": "self.func_decl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line": 56,
      "caller": "test_load_address_declares_register",
      "source_code": "    def func_decl(self, name: str, ret_type: RType | None = None) -> FuncDecl:\n        if ret_type is None:\n            ret_type = none_rprimitive\n        return FuncDecl(\n            name=name,\n            class_name=None,\n            module_name=\"module\",\n            sig=FuncSignature(args=[], ret_type=ret_type),\n        )\n\n"
    },
    {
      "function": "self.basic_block",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypyc/test/test_ircheck.py",
      "line": 50,
      "caller": "test_load_address_declares_register",
      "source_code": "    def basic_block(self, ops: list[Op]) -> BasicBlock:\n        self.label += 1\n        block = BasicBlock(self.label)\n        block.ops = ops\n        return block\n\n"
    },
    {
      "function": "Assign",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    },
    {
      "function": "Return",
      "filename": "",
      "line": 0,
      "caller": "test_load_address_declares_register",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert_no_errors(FuncIR(decl=self.func_decl(name='func_1'), arg_regs=[], blocks=[self.basic_block(ops=[load_addr, Assign(ry, load_addr), Return(value=NONE_VALUE)])]))"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_load_address_declares_register(self) -> None:\n        rx = Register(str_rprimitive, \"x\")\n        ry = Register(pointer_rprimitive, \"y\")\n        load_addr = LoadAddress(pointer_rprimitive, rx)\n        assert_no_errors(\n            FuncIR(\n                decl=self.func_decl(name=\"func_1\"),\n                arg_regs=[],\n                blocks=[\n                    self.basic_block(\n                        ops=[load_addr, Assign(ry, load_addr), Return(value=NONE_VALUE)]\n                    )\n                ],\n            )\n        )"
}