{
  "test_name": "test_w_directory_no_EGG_INFO",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_utils.py",
  "static_methods": [
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, arg):\n        from pkginfo.distribution import _must_decode\n        return _must_decode(arg)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_distribution.py",
      "line_number": 5
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_distribution.py",
      "line": 5,
      "caller": "test_w_directory_no_EGG_INFO",
      "source_code": "    def _callFUT(self, arg):\n        from pkginfo.distribution import _must_decode\n        return _must_decode(arg)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_directory_no_EGG_INFO",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_directory_no_EGG_INFO",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_directory_no_EGG_INFO",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_w_directory_no_EGG_INFO(self):\n        import os\n        import warnings\n        dir, name = os.path.split(__file__)\n        subdir = os.path.join(dir, 'funny')\n        old_filters = warnings.filters[:]\n        warnings.filterwarnings('ignore')\n        try:\n            dist = self._callFUT(subdir)\n            self.assertEqual(dist.path, subdir)\n            self.assertEqual(dist.name, None)\n            self.assertEqual(dist.version, None)\n        finally:\n            warnings.filters[:] = old_filters"
}