{
  "test_name": "test_w_dist_wo_download_url",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_commandline.py",
  "static_methods": [
    {
      "name": "_Monkey",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_Meta",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "_Monkey",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, arg):\n        from pkginfo.distribution import _must_decode\n        return _must_decode(arg)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_distribution.py",
      "line_number": 5
    }
  ],
  "dynamic_methods": [
    {
      "function": "_Monkey",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "_Meta",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "_Monkey",
      "filename": "",
      "line": 0,
      "caller": "test_w_dist_wo_download_url",
      "source_code": ""
    },
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_distribution.py",
      "line": 5,
      "caller": "test_w_dist_wo_download_url",
      "source_code": "    def _callFUT(self, arg):\n        from pkginfo.distribution import _must_decode\n        return _must_decode(arg)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_w_dist_wo_download_url(self):\n        from pkginfo import commandline as MUT\n\n        meta = _Meta(download_url=None)\n        def _get_metadata(path_or_module, md_version):\n            self.assertEqual(path_or_module, '/path/to/foo')\n            self.assertEqual(md_version, None)\n            return meta\n        with _Monkey(MUT, get_metadata=_get_metadata):\n            formatter = self._callFUT(\n                ['-d', 'http://example.com', '/path/to/foo'])\n        self.assertEqual(formatter._called_with, [meta])\n        self.assertTrue(formatter._finished)\n        self.assertEqual(meta.download_url, 'http://example.com/foo')"
}