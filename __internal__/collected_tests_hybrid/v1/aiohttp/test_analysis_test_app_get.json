{
  "test_name": "test_app_get",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_web_app.py",
  "static_methods": [
    {
      "name": "web.AppKey",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "web.Application",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.get",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line_number": 14
    },
    {
      "name": "app.get",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line_number": 14
    }
  ],
  "dynamic_methods": [
    {
      "function": "web.AppKey",
      "filename": "",
      "line": 0,
      "caller": "test_app_get",
      "source_code": ""
    },
    {
      "function": "web.Application",
      "filename": "",
      "line": 0,
      "caller": "test_app_get",
      "source_code": ""
    },
    {
      "function": "app.get",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line": 14,
      "caller": "test_app_get",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()\n\n"
    },
    {
      "function": "app.get",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/cachecontrol/cache.py",
      "line": 14,
      "caller": "test_app_get",
      "source_code": "    def get(self, key):\n        raise NotImplementedError()\n\n"
    }
  ],
  "assertions": [
    "assert app.get(key, 'foo') == 'foo'",
    "assert app.get(key, 'foo') == 5"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_app_get() -> None:\n    key = web.AppKey(\"key\", int)\n    app = web.Application()\n    assert app.get(key, \"foo\") == \"foo\"\n    app[key] = 5\n    assert app.get(key, \"foo\") == 5"
}