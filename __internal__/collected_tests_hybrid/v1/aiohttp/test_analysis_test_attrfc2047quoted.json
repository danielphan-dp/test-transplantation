{
  "test_name": "test_attrfc2047quoted",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_multipart_helpers.py",
  "static_methods": [
    {
      "name": "content_disposition_filename",
      "source_code": "def content_disposition_filename(\n    params: Mapping[str, str], name: str = \"filename\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/multipart.py",
      "line_number": 180
    }
  ],
  "dynamic_methods": [
    {
      "function": "content_disposition_filename",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/multipart.py",
      "line": 180,
      "caller": "test_attrfc2047quoted",
      "source_code": "def content_disposition_filename(\n    params: Mapping[str, str], name: str = \"filename\"\n"
    }
  ],
  "assertions": [
    "assert '=?ISO-8859-1?Q?foo-=E4.html?=' == content_disposition_filename(params)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_attrfc2047quoted(self) -> None:\n        params = {\"filename\": \"=?ISO-8859-1?Q?foo-=E4.html?=\"}\n        assert \"=?ISO-8859-1?Q?foo-=E4.html?=\" == content_disposition_filename(params)"
}