{
  "test_name": "test_bool",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_helpers.py",
  "static_methods": [
    {
      "name": "helpers.ChainMapProxy",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helpers.ChainMapProxy",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helpers.ChainMapProxy",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "helpers.ChainMapProxy",
      "filename": "",
      "line": 0,
      "caller": "test_bool",
      "source_code": ""
    },
    {
      "function": "helpers.ChainMapProxy",
      "filename": "",
      "line": 0,
      "caller": "test_bool",
      "source_code": ""
    },
    {
      "function": "helpers.ChainMapProxy",
      "filename": "",
      "line": 0,
      "caller": "test_bool",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert helpers.ChainMapProxy([{'a': 1}])",
    "assert not helpers.ChainMapProxy([{}, {}])",
    "assert not helpers.ChainMapProxy([])"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_bool(self) -> None:\n        assert helpers.ChainMapProxy([{\"a\": 1}])\n        assert not helpers.ChainMapProxy([{}, {}])\n        assert not helpers.ChainMapProxy([])"
}