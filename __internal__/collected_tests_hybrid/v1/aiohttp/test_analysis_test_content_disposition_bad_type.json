{
  "test_name": "test_content_disposition_bad_type",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_helpers.py",
  "static_methods": [
    {
      "name": "helpers.content_disposition_header",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line_number": 378
    },
    {
      "name": "helpers.content_disposition_header",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line_number": 378
    },
    {
      "name": "helpers.content_disposition_header",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line_number": 378
    },
    {
      "name": "helpers.content_disposition_header",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line_number": 378
    }
  ],
  "dynamic_methods": [
    {
      "function": "helpers.content_disposition_header",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line": 378,
      "caller": "test_content_disposition_bad_type",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,\n"
    },
    {
      "function": "helpers.content_disposition_header",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line": 378,
      "caller": "test_content_disposition_bad_type",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,\n"
    },
    {
      "function": "helpers.content_disposition_header",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line": 378,
      "caller": "test_content_disposition_bad_type",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,\n"
    },
    {
      "function": "helpers.content_disposition_header",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/build/lib.linux-x86_64-cpython-39/aiohttp/helpers.py",
      "line": 378,
      "caller": "test_content_disposition_bad_type",
      "source_code": "def content_disposition_header(\n    disptype: str,\n    quote_fields: bool = True,\n    _charset: str = \"utf-8\",\n    params: Optional[Dict[str, str]] = None,\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_content_disposition_bad_type() -> None:\n    with pytest.raises(ValueError):\n        helpers.content_disposition_header(\"foo bar\")\n    with pytest.raises(ValueError):\n        helpers.content_disposition_header(\"\u2014\u00c7\u2013\u00b5\u2014\u00c5\u2014\u00c7\")\n    with pytest.raises(ValueError):\n        helpers.content_disposition_header(\"foo\\x00bar\")\n    with pytest.raises(ValueError):\n        helpers.content_disposition_header(\"\")"
}