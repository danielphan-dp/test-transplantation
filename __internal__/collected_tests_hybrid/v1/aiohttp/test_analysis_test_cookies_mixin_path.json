{
  "test_name": "test_cookies_mixin_path",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_helpers.py",
  "static_methods": [
    {
      "name": "CookieImplementation",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "sut.set_cookie",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line_number": 349
    },
    {
      "name": "sut.set_cookie",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line_number": 349
    },
    {
      "name": "sut.set_cookie",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line_number": 349
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str.lower",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "CookieImplementation",
      "filename": "",
      "line": 0,
      "caller": "test_cookies_mixin_path",
      "source_code": ""
    },
    {
      "function": "sut.set_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line": 349,
      "caller": "test_cookies_mixin_path",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)\n\n"
    },
    {
      "function": "sut.set_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line": 349,
      "caller": "test_cookies_mixin_path",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)\n\n"
    },
    {
      "function": "sut.set_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/venv/lib/python3.9/site-packages/pip/_vendor/requests/cookies.py",
      "line": 349,
      "caller": "test_cookies_mixin_path",
      "source_code": "    def set_cookie(self, cookie, *args, **kwargs):\n        if (\n            hasattr(cookie.value, \"startswith\")\n            and cookie.value.startswith('\"')\n            and cookie.value.endswith('\"')\n        ):\n            cookie.value = cookie.value.replace('\\\\\"', \"\")\n        return super().set_cookie(cookie, *args, **kwargs)\n\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_cookies_mixin_path",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_cookies_mixin_path",
      "source_code": ""
    },
    {
      "function": "str.lower",
      "filename": "",
      "line": 0,
      "caller": "test_cookies_mixin_path",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_cookies_mixin_path",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert sut.cookies == {}",
    "assert str(sut.cookies) == 'Set-Cookie: name=value; Path=/some/path'",
    "assert str(sut.cookies) == 'Set-Cookie: name=value; expires=123; Path=/'",
    "assert str(sut.cookies).lower() == 'set-cookie: name=value; domain=example.com; expires=123; httponly; max-age=10; path=/home; samesite=lax; secure'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_cookies_mixin_path() -> None:\n    sut = CookieImplementation()\n\n    assert sut.cookies == {}\n\n    sut.set_cookie(\"name\", \"value\", path=\"/some/path\")\n    assert str(sut.cookies) == \"Set-Cookie: name=value; Path=/some/path\"\n    sut.set_cookie(\"name\", \"value\", expires=\"123\")\n    assert str(sut.cookies) == \"Set-Cookie: name=value; expires=123; Path=/\"\n    sut.set_cookie(\n        \"name\",\n        \"value\",\n        domain=\"example.com\",\n        path=\"/home\",\n        expires=\"123\",\n        max_age=\"10\",\n        secure=True,\n        httponly=True,\n        samesite=\"lax\",\n    )\n    assert (\n        str(sut.cookies).lower() == \"set-cookie: name=value; \"\n        \"domain=example.com; \"\n        \"expires=123; \"\n        \"httponly; \"\n        \"max-age=10; \"\n        \"path=/home; \"\n        \"samesite=lax; \"\n        \"secure\"\n    )"
}