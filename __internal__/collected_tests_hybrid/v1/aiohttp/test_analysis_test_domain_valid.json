{
  "test_name": "test_domain_valid",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_urldispatch.py",
  "static_methods": [
    {
      "name": "Domain",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "MaskDomain",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Domain",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "Domain",
      "filename": "",
      "line": 0,
      "caller": "test_domain_valid",
      "source_code": ""
    },
    {
      "function": "MaskDomain",
      "filename": "",
      "line": 0,
      "caller": "test_domain_valid",
      "source_code": ""
    },
    {
      "function": "Domain",
      "filename": "",
      "line": 0,
      "caller": "test_domain_valid",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert Domain('example.com:81').canonical == 'example.com:81'",
    "assert MaskDomain('*.example.com').canonical == '.*\\\\.example\\\\.com'",
    "assert Domain('\u043f\u0443\u043d\u0438.\u043a\u043e\u0434').canonical == 'xn--h1ajfq.xn--d1alm'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_domain_valid() -> None:\n    assert Domain(\"example.com:81\").canonical == \"example.com:81\"\n    assert MaskDomain(\"*.example.com\").canonical == r\".*\\.example\\.com\"\n    assert Domain(\"\u043f\u0443\u043d\u0438.\u043a\u043e\u0434\").canonical == \"xn--h1ajfq.xn--d1alm\""
}