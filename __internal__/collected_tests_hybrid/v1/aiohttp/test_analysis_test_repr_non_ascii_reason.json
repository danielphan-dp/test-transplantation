{
  "test_name": "test_repr_non_ascii_reason",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_client_response.py",
  "static_methods": [
    {
      "name": "ClientResponse",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "URL",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "mock.Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "WriterMock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "TimerNoop",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "mock.Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "mock.Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "ClientResponse",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "URL",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "mock.Mock",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "WriterMock",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "TimerNoop",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "mock.Mock",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    },
    {
      "function": "mock.Mock",
      "filename": "",
      "line": 0,
      "caller": "test_repr_non_ascii_reason",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert '<ClientResponse(http://fake-host.org/path) [None \\\\u03bb]>' in repr(response)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_repr_non_ascii_reason() -> None:\n    response = ClientResponse(\n        \"get\",\n        URL(\"http://fake-host.org/path\"),\n        request_info=mock.Mock(),\n        writer=WriterMock(),\n        continue100=None,\n        timer=TimerNoop(),\n        traces=[],\n        loop=mock.Mock(),\n        session=mock.Mock(),\n    )\n    response.reason = \"\\u03bb\"\n    assert \"<ClientResponse(http://fake-host.org/path) [None \\\\u03bb]>\" in repr(\n        response\n    )"
}