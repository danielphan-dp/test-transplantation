{
  "test_name": "test_response_with_immutable_headers",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/aiohttp/tests/test_web_response.py",
  "static_methods": [
    {
      "name": "web.Response",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CIMultiDictProxy",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CIMultiDict",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "web.Response",
      "filename": "",
      "line": 0,
      "caller": "test_response_with_immutable_headers",
      "source_code": ""
    },
    {
      "function": "CIMultiDictProxy",
      "filename": "",
      "line": 0,
      "caller": "test_response_with_immutable_headers",
      "source_code": ""
    },
    {
      "function": "CIMultiDict",
      "filename": "",
      "line": 0,
      "caller": "test_response_with_immutable_headers",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert resp.headers == {'Header': 'Value', 'Content-Type': 'text/plain; charset=utf-8'}"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_response_with_immutable_headers() -> None:\n    resp = web.Response(\n        text=\"text\", headers=CIMultiDictProxy(CIMultiDict({\"Header\": \"Value\"}))\n    )\n    assert resp.headers == {\n        \"Header\": \"Value\",\n        \"Content-Type\": \"text/plain; charset=utf-8\",\n    }"
}