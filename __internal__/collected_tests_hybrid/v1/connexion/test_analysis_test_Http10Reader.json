{
  "test_name": "test_Http10Reader",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
  "static_methods": [
    {
      "name": "t_body_reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line_number": 363
    },
    {
      "name": "t_body_reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line_number": 363
    },
    {
      "name": "t_body_reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line_number": 363
    },
    {
      "name": "EndOfMessage",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Data",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Data",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "EndOfMessage",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "t_body_reader",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line": 363,
      "caller": "test_Http10Reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected\n\n    # Incrementally growing buffer\n    print(\"Test 2\")\n    reader = thunk()\n    buf = ReceiveBuffer()\n    events = []\n    for i in range(len(data)):\n        events += _run_reader(reader, buf, False)\n        buf += data[i : i + 1]\n    events += _run_reader(reader, buf, do_eof)\n    assert normalize_data_events(events) == expected\n\n    is_complete = any(type(event) is EndOfMessage for event in expected)\n    if is_complete and not do_eof:\n        buf = makebuf(data + b\"trailing\")\n        assert _run_reader(thunk(), buf, False) == expected\n\n\n"
    },
    {
      "function": "t_body_reader",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line": 363,
      "caller": "test_Http10Reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected\n\n    # Incrementally growing buffer\n    print(\"Test 2\")\n    reader = thunk()\n    buf = ReceiveBuffer()\n    events = []\n    for i in range(len(data)):\n        events += _run_reader(reader, buf, False)\n        buf += data[i : i + 1]\n    events += _run_reader(reader, buf, do_eof)\n    assert normalize_data_events(events) == expected\n\n    is_complete = any(type(event) is EndOfMessage for event in expected)\n    if is_complete and not do_eof:\n        buf = makebuf(data + b\"trailing\")\n        assert _run_reader(thunk(), buf, False) == expected\n\n\n"
    },
    {
      "function": "t_body_reader",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line": 363,
      "caller": "test_Http10Reader",
      "source_code": "def t_body_reader(thunk: Any, data: bytes, expected: Any, do_eof: bool = False) -> None:\n    # Simple: consume whole thing\n    print(\"Test 1\")\n    buf = makebuf(data)\n    assert _run_reader(thunk(), buf, do_eof) == expected\n\n    # Incrementally growing buffer\n    print(\"Test 2\")\n    reader = thunk()\n    buf = ReceiveBuffer()\n    events = []\n    for i in range(len(data)):\n        events += _run_reader(reader, buf, False)\n        buf += data[i : i + 1]\n    events += _run_reader(reader, buf, do_eof)\n    assert normalize_data_events(events) == expected\n\n    is_complete = any(type(event) is EndOfMessage for event in expected)\n    if is_complete and not do_eof:\n        buf = makebuf(data + b\"trailing\")\n        assert _run_reader(thunk(), buf, False) == expected\n\n\n"
    },
    {
      "function": "EndOfMessage",
      "filename": "",
      "line": 0,
      "caller": "test_Http10Reader",
      "source_code": ""
    },
    {
      "function": "Data",
      "filename": "",
      "line": 0,
      "caller": "test_Http10Reader",
      "source_code": ""
    },
    {
      "function": "Data",
      "filename": "",
      "line": 0,
      "caller": "test_Http10Reader",
      "source_code": ""
    },
    {
      "function": "EndOfMessage",
      "filename": "",
      "line": 0,
      "caller": "test_Http10Reader",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_Http10Reader() -> None:\n    t_body_reader(Http10Reader, b\"\", [EndOfMessage()], do_eof=True)\n    t_body_reader(Http10Reader, b\"asdf\", [Data(data=b\"asdf\")], do_eof=False)\n    t_body_reader(\n        Http10Reader, b\"asdf\", [Data(data=b\"asdf\"), EndOfMessage()], do_eof=True\n    )"
}