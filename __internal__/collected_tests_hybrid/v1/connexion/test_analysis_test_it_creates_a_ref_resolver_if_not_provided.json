{
  "test_name": "test_it_creates_a_ref_resolver_if_not_provided",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_validators.py",
  "static_methods": [
    {
      "name": "self.assertWarns",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIsInstance",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertWarns",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.Validator",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertWarns",
      "filename": "",
      "line": 0,
      "caller": "test_it_creates_a_ref_resolver_if_not_provided",
      "source_code": ""
    },
    {
      "function": "self.assertIsInstance",
      "filename": "",
      "line": 0,
      "caller": "test_it_creates_a_ref_resolver_if_not_provided",
      "source_code": ""
    },
    {
      "function": "self.assertWarns",
      "filename": "",
      "line": 0,
      "caller": "test_it_creates_a_ref_resolver_if_not_provided",
      "source_code": ""
    },
    {
      "function": "self.Validator",
      "filename": "",
      "line": 0,
      "caller": "test_it_creates_a_ref_resolver_if_not_provided",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_it_creates_a_ref_resolver_if_not_provided(self):\n        with self.assertWarns(DeprecationWarning):\n            resolver = self.Validator({}).resolver\n        self.assertIsInstance(resolver, validators._RefResolver)"
}