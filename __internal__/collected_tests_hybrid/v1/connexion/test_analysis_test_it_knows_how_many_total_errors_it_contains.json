{
  "test_name": "test_it_knows_how_many_total_errors_it_contains",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_exceptions.py",
  "static_methods": [
    {
      "name": "exceptions.ErrorTree",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "exceptions.ValidationError",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "range",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "exceptions.ErrorTree",
      "filename": "",
      "line": 0,
      "caller": "test_it_knows_how_many_total_errors_it_contains",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_it_knows_how_many_total_errors_it_contains",
      "source_code": ""
    },
    {
      "function": "exceptions.ValidationError",
      "filename": "",
      "line": 0,
      "caller": "test_it_knows_how_many_total_errors_it_contains",
      "source_code": ""
    },
    {
      "function": "range",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_it_knows_how_many_total_errors_it_contains",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_it_knows_how_many_total_errors_it_contains(self):\n        # FIXME: #442\n        errors = [\n            exceptions.ValidationError(\"Something\", validator=i)\n            for i in range(8)\n        ]\n        tree = exceptions.ErrorTree(errors)\n        self.assertEqual(tree.total_errors, 8)"
}