{
  "test_name": "test_methodview_resolve_with_default_module_name_can_resolve_api_root",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/tests/test_resolver_methodview.py",
  "static_methods": [
    {
      "name": "OpenAPIOperation",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "method_view_resolver",
      "source_code": "def method_view_resolver(request):\n    return request.param",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/tests/conftest.py",
      "line_number": 66
    }
  ],
  "dynamic_methods": [
    {
      "function": "OpenAPIOperation",
      "filename": "",
      "line": 0,
      "caller": "test_methodview_resolve_with_default_module_name_can_resolve_api_root",
      "source_code": ""
    },
    {
      "function": "method_view_resolver",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/tests/conftest.py",
      "line": 66,
      "caller": "test_methodview_resolve_with_default_module_name_can_resolve_api_root",
      "source_code": "@pytest.fixture(scope=\"session\", params=METHOD_VIEW_RESOLVERS)\ndef method_view_resolver(request):\n    return request.param\n\n\n"
    }
  ],
  "assertions": [
    "assert operation.operation_id == 'fakeapi.PetsView.get'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_methodview_resolve_with_default_module_name_can_resolve_api_root(\n    method_view_resolver,\n):\n    operation = OpenAPIOperation(\n        method=\"GET\",\n        path=\"/\",\n        path_parameters=[],\n        operation={},\n        components=COMPONENTS,\n        resolver=method_view_resolver(\n            \"fakeapi.pets\",\n        ),\n    )\n    assert operation.operation_id == \"fakeapi.PetsView.get\""
}