{
  "test_name": "test_multiple_errors_with_instance",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_exceptions.py",
  "static_methods": [
    {
      "name": "exceptions.ErrorTree",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "exceptions.ValidationError",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "exceptions.ValidationError",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "exceptions.ErrorTree",
      "filename": "",
      "line": 0,
      "caller": "test_multiple_errors_with_instance",
      "source_code": ""
    },
    {
      "function": "exceptions.ValidationError",
      "filename": "",
      "line": 0,
      "caller": "test_multiple_errors_with_instance",
      "source_code": ""
    },
    {
      "function": "exceptions.ValidationError",
      "filename": "",
      "line": 0,
      "caller": "test_multiple_errors_with_instance",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_multiple_errors_with_instance(self):\n        e1, e2 = (\n            exceptions.ValidationError(\n                \"1\",\n                validator=\"foo\",\n                path=[\"bar\", \"bar2\"],\n                instance=\"i1\"),\n            exceptions.ValidationError(\n                \"2\",\n                validator=\"quux\",\n                path=[\"foobar\", 2],\n                instance=\"i2\"),\n        )\n        exceptions.ErrorTree([e1, e2])"
}