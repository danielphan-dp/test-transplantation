{
  "test_name": "test_multiple_item_paths",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_exceptions.py",
  "static_methods": [
    {
      "name": "self.assertShows",
      "source_code": "    def assertShows(self, expected, **kwargs):\n        expected = textwrap.dedent(expected).rstrip(\"\\n\")",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_exceptions.py",
      "line_number": 520
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertShows",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_exceptions.py",
      "line": 520,
      "caller": "test_multiple_item_paths",
      "source_code": "    def assertShows(self, expected, **kwargs):\n        expected = textwrap.dedent(expected).rstrip(\"\\n\")\n\n        error = self.make_error(**kwargs)\n        message_line, _, rest = str(error).partition(\"\\n\")\n        self.assertEqual(message_line, error.message)\n        self.assertEqual(rest, expected)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_multiple_item_paths(self):\n        self.assertShows(\n            \"\"\"\n            Failed validating 'type' in schema['items'][0]:\n                {'type': 'string'}\n\n            On instance[0]['a']:\n                5\n            \"\"\",\n            path=[0, \"a\"],\n            schema_path=[\"items\", 0, 1],\n        )"
}