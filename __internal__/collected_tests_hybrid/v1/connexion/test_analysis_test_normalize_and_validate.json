{
  "test_name": "test_normalize_and_validate",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_headers.py",
  "static_methods": [
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    },
    {
      "name": "normalize_and_validate",
      "source_code": "def normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line_number": 134
    }
  ],
  "dynamic_methods": [
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_normalize_and_validate",
      "source_code": ""
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_normalize_and_validate",
      "source_code": ""
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    },
    {
      "function": "normalize_and_validate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/_headers.py",
      "line": 134,
      "caller": "test_normalize_and_validate",
      "source_code": "@overload\ndef normalize_and_validate(headers: Headers, _parsed: Literal[True]) -> Headers:\n    ...\n\n\n"
    }
  ],
  "assertions": [
    "assert normalize_and_validate([('foo', 'bar')]) == [(b'foo', b'bar')]",
    "assert normalize_and_validate([(b'foo', b'bar')]) == [(b'foo', b'bar')]",
    "assert 'foo bar' in str(excinfo.value)",
    "assert 'bar\\\\rbaz' in str(excinfo.value)",
    "assert normalize_and_validate([('Content-Length', '1')]) == [(b'content-length', b'1')]",
    "assert normalize_and_validate([('Content-Length', '0'), ('Content-Length', '0')]) == [(b'content-length', b'0')]",
    "assert normalize_and_validate([('Content-Length', '0 , 0')]) == [(b'content-length', b'0')]",
    "assert normalize_and_validate([('Transfer-Encoding', 'chunked')]) == [(b'transfer-encoding', b'chunked')]",
    "assert normalize_and_validate([('Transfer-Encoding', 'cHuNkEd')]) == [(b'transfer-encoding', b'chunked')]",
    "assert excinfo.value.error_status_hint == 501",
    "assert excinfo.value.error_status_hint == 501"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_normalize_and_validate() -> None:\n    assert normalize_and_validate([(\"foo\", \"bar\")]) == [(b\"foo\", b\"bar\")]\n    assert normalize_and_validate([(b\"foo\", b\"bar\")]) == [(b\"foo\", b\"bar\")]\n\n    # no leading/trailing whitespace in names\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(b\"foo \", \"bar\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(b\" foo\", \"bar\")])\n\n    # no weird characters in names\n    with pytest.raises(LocalProtocolError) as excinfo:\n        normalize_and_validate([(b\"foo bar\", b\"baz\")])\n    assert \"foo bar\" in str(excinfo.value)\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(b\"foo\\x00bar\", b\"baz\")])\n    # Not even 8-bit characters:\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(b\"foo\\xffbar\", b\"baz\")])\n    # And not even the control characters we allow in values:\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(b\"foo\\x01bar\", b\"baz\")])\n\n    # no return or NUL characters in values\n    with pytest.raises(LocalProtocolError) as excinfo:\n        normalize_and_validate([(\"foo\", \"bar\\rbaz\")])\n    assert \"bar\\\\rbaz\" in str(excinfo.value)\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"bar\\nbaz\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"bar\\x00baz\")])\n    # no leading/trailing whitespace\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"barbaz  \")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"  barbaz\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"barbaz\\t\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"foo\", \"\\tbarbaz\")])\n\n    # content-length\n    assert normalize_and_validate([(\"Content-Length\", \"1\")]) == [\n        (b\"content-length\", b\"1\")\n    ]\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"Content-Length\", \"asdf\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"Content-Length\", \"1x\")])\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"Content-Length\", \"1\"), (\"Content-Length\", \"2\")])\n    assert normalize_and_validate(\n        [(\"Content-Length\", \"0\"), (\"Content-Length\", \"0\")]\n    ) == [(b\"content-length\", b\"0\")]\n    assert normalize_and_validate([(\"Content-Length\", \"0 , 0\")]) == [\n        (b\"content-length\", b\"0\")\n    ]\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate(\n            [(\"Content-Length\", \"1\"), (\"Content-Length\", \"1\"), (\"Content-Length\", \"2\")]\n        )\n    with pytest.raises(LocalProtocolError):\n        normalize_and_validate([(\"Content-Length\", \"1 , 1,2\")])\n\n    # transfer-encoding\n    assert normalize_and_validate([(\"Transfer-Encoding\", \"chunked\")]) == [\n        (b\"transfer-encoding\", b\"chunked\")\n    ]\n    assert normalize_and_validate([(\"Transfer-Encoding\", \"cHuNkEd\")]) == [\n        (b\"transfer-encoding\", b\"chunked\")\n    ]\n    with pytest.raises(LocalProtocolError) as excinfo:\n        normalize_and_validate([(\"Transfer-Encoding\", \"gzip\")])\n    assert excinfo.value.error_status_hint == 501  # Not Implemented\n    with pytest.raises(LocalProtocolError) as excinfo:\n        normalize_and_validate(\n            [(\"Transfer-Encoding\", \"chunked\"), (\"Transfer-Encoding\", \"gzip\")]\n        )\n    assert excinfo.value.error_status_hint == 501"
}