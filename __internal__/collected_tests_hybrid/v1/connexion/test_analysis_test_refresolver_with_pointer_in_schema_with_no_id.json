{
  "test_name": "test_refresolver_with_pointer_in_schema_with_no_id",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/tests/test_validators.py",
  "static_methods": [
    {
      "name": "validators.Draft202012Validator",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "validators._RefResolver",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "validator.is_valid",
      "source_code": "        def is_valid(self, instance, _schema=None):\n            if _schema is not None:\n                warnings.warn(\n                    (\n                        \"Passing a schema to Validator.is_valid is deprecated \"\n                        \"and will be removed in a future release. Call \"\n                        \"validator.evolve(schema=new_schema).is_valid(...) \"\n                        \"instead.\"\n                    ),\n                    DeprecationWarning,\n                    stacklevel=2,\n                )\n                self = self.evolve(schema=_schema)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/validators.py",
      "line_number": 486
    },
    {
      "name": "validator.is_valid",
      "source_code": "        def is_valid(self, instance, _schema=None):\n            if _schema is not None:\n                warnings.warn(\n                    (\n                        \"Passing a schema to Validator.is_valid is deprecated \"\n                        \"and will be removed in a future release. Call \"\n                        \"validator.evolve(schema=new_schema).is_valid(...) \"\n                        \"instead.\"\n                    ),\n                    DeprecationWarning,\n                    stacklevel=2,\n                )\n                self = self.evolve(schema=_schema)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/validators.py",
      "line_number": 486
    }
  ],
  "dynamic_methods": [
    {
      "function": "validators.Draft202012Validator",
      "filename": "",
      "line": 0,
      "caller": "test_refresolver_with_pointer_in_schema_with_no_id",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_refresolver_with_pointer_in_schema_with_no_id",
      "source_code": ""
    },
    {
      "function": "validators._RefResolver",
      "filename": "",
      "line": 0,
      "caller": "test_refresolver_with_pointer_in_schema_with_no_id",
      "source_code": ""
    },
    {
      "function": "validator.is_valid",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/validators.py",
      "line": 486,
      "caller": "test_refresolver_with_pointer_in_schema_with_no_id",
      "source_code": "        def is_valid(self, instance, _schema=None):\n            if _schema is not None:\n                warnings.warn(\n                    (\n                        \"Passing a schema to Validator.is_valid is deprecated \"\n                        \"and will be removed in a future release. Call \"\n                        \"validator.evolve(schema=new_schema).is_valid(...) \"\n                        \"instead.\"\n                    ),\n                    DeprecationWarning,\n                    stacklevel=2,\n                )\n                self = self.evolve(schema=_schema)\n\n            error = next(self.iter_errors(instance), None)\n            return error is None\n\n"
    },
    {
      "function": "validator.is_valid",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/jsonschema/validators.py",
      "line": 486,
      "caller": "test_refresolver_with_pointer_in_schema_with_no_id",
      "source_code": "        def is_valid(self, instance, _schema=None):\n            if _schema is not None:\n                warnings.warn(\n                    (\n                        \"Passing a schema to Validator.is_valid is deprecated \"\n                        \"and will be removed in a future release. Call \"\n                        \"validator.evolve(schema=new_schema).is_valid(...) \"\n                        \"instead.\"\n                    ),\n                    DeprecationWarning,\n                    stacklevel=2,\n                )\n                self = self.evolve(schema=_schema)\n\n            error = next(self.iter_errors(instance), None)\n            return error is None\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_refresolver_with_pointer_in_schema_with_no_id(self):\n        \"\"\"\n        See https://github.com/python-jsonschema/jsonschema/issues/1124#issuecomment-1632574249.\n        \"\"\"\n\n        schema = {\n            \"properties\": {\"x\": {\"$ref\": \"#/definitions/x\"}},\n            \"definitions\": {\"x\": {\"type\": \"integer\"}},\n        }\n\n        validator = validators.Draft202012Validator(\n            schema,\n            resolver=validators._RefResolver(\"\", schema),\n        )\n        self.assertEqual(\n            (validator.is_valid({\"x\": \"y\"}), validator.is_valid({\"x\": 37})),\n            (False, True),\n        )"
}