{
  "test_name": "test_reject_non_vchar_in_path",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
  "static_methods": [
    {
      "name": "bytearray",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "message.append",
      "source_code": "    def append(self, key: typing.Any, value: typing.Any) -> None:\n        self._list.append((key, value))\n        self._dict[key] = value",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/starlette/datastructures.py",
      "line_number": 358
    },
    {
      "name": "message.extend",
      "source_code": "    def extend(\n        self,\n        arg: (\n            Headers\n            | MultiDict[str, t.Any]\n            | cabc.Mapping[str, t.Any | list[t.Any] | tuple[t.Any, ...] | set[t.Any]]\n            | cabc.Iterable[tuple[str, t.Any]]\n            | None\n        ) = None,\n        /,\n        **kwargs: str,\n    ) -> None:\n        \"\"\"Extend headers in this object with items from another object\n        containing header items as well as keyword arguments.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/werkzeug/datastructures/headers.py",
      "line_number": 225
    },
    {
      "name": "tr",
      "source_code": "def tr(reader: Any, data: bytes, expected: Any) -> None:\n    def check(got: Any) -> None:\n        assert got == expected\n        # Headers should always be returned as bytes, not e.g. bytearray\n        # https://github.com/python-hyper/wsproto/pull/54#issuecomment-377709478\n        for name, value in getattr(got, \"headers\", []):\n            assert type(name) is bytes\n            assert type(value) is bytes",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line_number": 99
    }
  ],
  "dynamic_methods": [
    {
      "function": "bytearray",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_reject_non_vchar_in_path",
      "source_code": ""
    },
    {
      "function": "message.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/starlette/datastructures.py",
      "line": 358,
      "caller": "test_reject_non_vchar_in_path",
      "source_code": "    def append(self, key: typing.Any, value: typing.Any) -> None:\n        self._list.append((key, value))\n        self._dict[key] = value\n\n"
    },
    {
      "function": "message.extend",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/werkzeug/datastructures/headers.py",
      "line": 225,
      "caller": "test_reject_non_vchar_in_path",
      "source_code": "    def extend(\n        self,\n        arg: (\n            Headers\n            | MultiDict[str, t.Any]\n            | cabc.Mapping[str, t.Any | list[t.Any] | tuple[t.Any, ...] | set[t.Any]]\n            | cabc.Iterable[tuple[str, t.Any]]\n            | None\n        ) = None,\n        /,\n        **kwargs: str,\n"
    },
    {
      "function": "tr",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/connexion/venv/lib/python3.9/site-packages/h11/tests/test_io.py",
      "line": 99,
      "caller": "test_reject_non_vchar_in_path",
      "source_code": "def tr(reader: Any, data: bytes, expected: Any) -> None:\n    def check(got: Any) -> None:\n        assert got == expected\n        # Headers should always be returned as bytes, not e.g. bytearray\n        # https://github.com/python-hyper/wsproto/pull/54#issuecomment-377709478\n        for name, value in getattr(got, \"headers\", []):\n            assert type(name) is bytes\n            assert type(value) is bytes\n\n    # Simple: consume whole thing\n    buf = makebuf(data)\n    check(reader(buf))\n    assert not buf\n\n    # Incrementally growing buffer\n    buf = ReceiveBuffer()\n    for i in range(len(data)):\n        assert reader(buf) is None\n        buf += data[i : i + 1]\n    check(reader(buf))\n\n    # Trailing data\n    buf = makebuf(data)\n    buf += b\"trailing\"\n    check(reader(buf))\n    assert bytes(buf) == b\"trailing\"\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_reject_non_vchar_in_path() -> None:\n    for bad_char in b\"\\x00\\x20\\x7f\\xee\":\n        message = bytearray(b\"HEAD /\")\n        message.append(bad_char)\n        message.extend(b\" HTTP/1.1\\r\\nHost: foobar\\r\\n\\r\\n\")\n        with pytest.raises(LocalProtocolError):\n            tr(READERS[CLIENT, IDLE], message, None)"
}