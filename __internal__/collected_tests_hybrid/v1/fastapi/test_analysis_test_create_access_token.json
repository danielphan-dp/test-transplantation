{
  "test_name": "test_create_access_token",
  "test_file": "__internal__/_data/fastapi/tests/test_tutorial/test_security/test_tutorial005.py",
  "static_methods": [
    {
      "name": "create_access_token",
      "source_code": "def create_access_token(data: dict, expires_delta: Union[timedelta, None] = None):\n    to_encode = data.copy()\n    if expires_delta:\n        expire = datetime.now(timezone.utc) + expires_delta\n    else:\n        expire = datetime.now(timezone.utc) + timedelta(minutes=15)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/docs_src/security/tutorial004_an_py39.py",
      "line_number": 79
    }
  ],
  "dynamic_methods": [
    {
      "function": "create_access_token",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/docs_src/security/tutorial004_an_py39.py",
      "line": 79,
      "caller": "test_create_access_token",
      "source_code": "def create_access_token(data: dict, expires_delta: Union[timedelta, None] = None):\n    to_encode = data.copy()\n    if expires_delta:\n        expire = datetime.now(timezone.utc) + expires_delta\n    else:\n        expire = datetime.now(timezone.utc) + timedelta(minutes=15)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\n\n"
    }
  ],
  "assertions": [
    "assert access_token"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_create_access_token():\n    access_token = create_access_token(data={\"data\": \"foo\"})\n    assert access_token"
}