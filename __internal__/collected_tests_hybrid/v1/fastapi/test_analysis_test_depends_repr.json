{
  "test_name": "test_depends_repr",
  "test_file": "__internal__/_data/fastapi/tests/test_params_repr.py",
  "static_methods": [
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "Depends",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line_number": 2220
    },
    {
      "name": "Depends",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line_number": 2220
    },
    {
      "name": "Depends",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line_number": 2220
    },
    {
      "name": "Depends",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line_number": 2220
    }
  ],
  "dynamic_methods": [
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_depends_repr",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_depends_repr",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_depends_repr",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_depends_repr",
      "source_code": ""
    },
    {
      "function": "Depends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line": 2220,
      "caller": "test_depends_repr",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).\n\n            Don't call it directly, FastAPI will call it for you, just pass the object\n            directly.\n            \"\"\"\n        ),\n    ] = None,\n    *,\n    use_cache: Annotated[\n        bool,\n        Doc(\n            \"\"\"\n            By default, after a dependency is called the first time in a request, if\n            the dependency is declared again for the rest of the request (for example\n            if the dependency is needed by several dependencies), the value will be\n            re-used for the rest of the request.\n\n            Set `use_cache` to `False` to disable this behavior and ensure the\n            dependency is called again (if declared more than once) in the same request.\n            \"\"\"\n        ),\n    ] = True,\n"
    },
    {
      "function": "Depends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line": 2220,
      "caller": "test_depends_repr",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).\n\n            Don't call it directly, FastAPI will call it for you, just pass the object\n            directly.\n            \"\"\"\n        ),\n    ] = None,\n    *,\n    use_cache: Annotated[\n        bool,\n        Doc(\n            \"\"\"\n            By default, after a dependency is called the first time in a request, if\n            the dependency is declared again for the rest of the request (for example\n            if the dependency is needed by several dependencies), the value will be\n            re-used for the rest of the request.\n\n            Set `use_cache` to `False` to disable this behavior and ensure the\n            dependency is called again (if declared more than once) in the same request.\n            \"\"\"\n        ),\n    ] = True,\n"
    },
    {
      "function": "Depends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line": 2220,
      "caller": "test_depends_repr",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).\n\n            Don't call it directly, FastAPI will call it for you, just pass the object\n            directly.\n            \"\"\"\n        ),\n    ] = None,\n    *,\n    use_cache: Annotated[\n        bool,\n        Doc(\n            \"\"\"\n            By default, after a dependency is called the first time in a request, if\n            the dependency is declared again for the rest of the request (for example\n            if the dependency is needed by several dependencies), the value will be\n            re-used for the rest of the request.\n\n            Set `use_cache` to `False` to disable this behavior and ensure the\n            dependency is called again (if declared more than once) in the same request.\n            \"\"\"\n        ),\n    ] = True,\n"
    },
    {
      "function": "Depends",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/param_functions.py",
      "line": 2220,
      "caller": "test_depends_repr",
      "source_code": "def Depends(  # noqa: N802\n    dependency: Annotated[\n        Optional[Callable[..., Any]],\n        Doc(\n            \"\"\"\n            A \"dependable\" callable (like a function).\n\n            Don't call it directly, FastAPI will call it for you, just pass the object\n            directly.\n            \"\"\"\n        ),\n    ] = None,\n    *,\n    use_cache: Annotated[\n        bool,\n        Doc(\n            \"\"\"\n            By default, after a dependency is called the first time in a request, if\n            the dependency is declared again for the rest of the request (for example\n            if the dependency is needed by several dependencies), the value will be\n            re-used for the rest of the request.\n\n            Set `use_cache` to `False` to disable this behavior and ensure the\n            dependency is called again (if declared more than once) in the same request.\n            \"\"\"\n        ),\n    ] = True,\n"
    }
  ],
  "assertions": [
    "assert repr(Depends()) == 'Depends(NoneType)'",
    "assert repr(Depends(get_user)) == 'Depends(get_user)'",
    "assert repr(Depends(use_cache=False)) == 'Depends(NoneType, use_cache=False)'",
    "assert repr(Depends(get_user, use_cache=False)) == 'Depends(get_user, use_cache=False)'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_depends_repr():\n    assert repr(Depends()) == \"Depends(NoneType)\"\n    assert repr(Depends(get_user)) == \"Depends(get_user)\"\n    assert repr(Depends(use_cache=False)) == \"Depends(NoneType, use_cache=False)\"\n    assert (\n        repr(Depends(get_user, use_cache=False)) == \"Depends(get_user, use_cache=False)\"\n    )"
}