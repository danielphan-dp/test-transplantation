{
  "test_name": "test_get_model_fields_cached",
  "test_file": "__internal__/_data/fastapi/tests/test_compat.py",
  "static_methods": [
    {
      "name": "get_model_fields",
      "source_code": "    def get_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n        return [\n            ModelField(field_info=field_info, name=name)\n            for name, field_info in model.model_fields.items()\n        ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line_number": 283
    },
    {
      "name": "get_model_fields",
      "source_code": "    def get_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n        return [\n            ModelField(field_info=field_info, name=name)\n            for name, field_info in model.model_fields.items()\n        ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line_number": 283
    },
    {
      "name": "get_cached_model_fields",
      "source_code": "def get_cached_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n    return get_model_fields(model)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line_number": 657
    },
    {
      "name": "get_cached_model_fields",
      "source_code": "def get_cached_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n    return get_model_fields(model)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line_number": 657
    },
    {
      "name": "zip",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "get_model_fields",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line": 283,
      "caller": "test_get_model_fields_cached",
      "source_code": "    def get_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n        return [\n            ModelField(field_info=field_info, name=name)\n            for name, field_info in model.model_fields.items()\n        ]\n\n"
    },
    {
      "function": "get_model_fields",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line": 283,
      "caller": "test_get_model_fields_cached",
      "source_code": "    def get_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n        return [\n            ModelField(field_info=field_info, name=name)\n            for name, field_info in model.model_fields.items()\n        ]\n\n"
    },
    {
      "function": "get_cached_model_fields",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line": 657,
      "caller": "test_get_model_fields_cached",
      "source_code": "@lru_cache\ndef get_cached_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n    return get_model_fields(model)\n"
    },
    {
      "function": "get_cached_model_fields",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/_compat.py",
      "line": 657,
      "caller": "test_get_model_fields_cached",
      "source_code": "@lru_cache\ndef get_cached_model_fields(model: Type[BaseModel]) -> List[ModelField]:\n    return get_model_fields(model)\n"
    },
    {
      "function": "zip",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_get_model_fields_cached",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert non_cached_fields is not non_cached_fields2",
    "assert cached_fields is cached_fields2",
    "assert f1 is f2"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_get_model_fields_cached():\n    class Model(BaseModel):\n        foo: str\n\n    non_cached_fields = get_model_fields(Model)\n    non_cached_fields2 = get_model_fields(Model)\n    cached_fields = get_cached_model_fields(Model)\n    cached_fields2 = get_cached_model_fields(Model)\n    for f1, f2 in zip(cached_fields, cached_fields2):\n        assert f1 is f2\n\n    assert non_cached_fields is not non_cached_fields2\n    assert cached_fields is cached_fields2"
}