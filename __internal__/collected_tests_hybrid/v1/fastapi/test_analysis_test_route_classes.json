{
  "test_name": "test_route_classes",
  "test_file": "__internal__/_data/fastapi/tests/test_custom_route_class.py",
  "static_methods": [
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_route_classes",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_route_classes",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_route_classes",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_route_classes",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert getattr(routes['/a/'], 'x_type') == 'A'",
    "assert getattr(routes['/a/b/'], 'x_type') == 'B'",
    "assert getattr(routes['/a/b/c/'], 'x_type') == 'C'",
    "assert isinstance(r, Route)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_route_classes():\n    routes = {}\n    for r in app.router.routes:\n        assert isinstance(r, Route)\n        routes[r.path] = r\n    assert getattr(routes[\"/a/\"], \"x_type\") == \"A\"  # noqa: B009\n    assert getattr(routes[\"/a/b/\"], \"x_type\") == \"B\"  # noqa: B009\n    assert getattr(routes[\"/a/b/c/\"], \"x_type\") == \"C\""
}