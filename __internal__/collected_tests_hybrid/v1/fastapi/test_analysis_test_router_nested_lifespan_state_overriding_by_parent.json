{
  "test_name": "test_router_nested_lifespan_state_overriding_by_parent",
  "test_file": "__internal__/_data/fastapi/tests/test_router_events.py",
  "static_methods": [
    {
      "name": "TestClient",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "APIRouter",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FastAPI",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.include_router",
      "source_code": "    def include_router(\n        self,\n        router: Annotated[\"APIRouter\", Doc(\"The `APIRouter` to include.\")],\n        *,\n        prefix: Annotated[str, Doc(\"An optional path prefix for the router.\")] = \"\",\n        tags: Annotated[\n            Optional[List[Union[str, Enum]]],\n            Doc(\n                \"\"\"\n                A list of tags to be applied to all the *path operations* in this\n                router.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/routing.py",
      "line_number": 1122
    },
    {
      "name": "TestClient",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "TestClient",
      "filename": "",
      "line": 0,
      "caller": "test_router_nested_lifespan_state_overriding_by_parent",
      "source_code": ""
    },
    {
      "function": "APIRouter",
      "filename": "",
      "line": 0,
      "caller": "test_router_nested_lifespan_state_overriding_by_parent",
      "source_code": ""
    },
    {
      "function": "FastAPI",
      "filename": "",
      "line": 0,
      "caller": "test_router_nested_lifespan_state_overriding_by_parent",
      "source_code": ""
    },
    {
      "function": "app.include_router",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/fastapi/routing.py",
      "line": 1122,
      "caller": "test_router_nested_lifespan_state_overriding_by_parent",
      "source_code": "    def include_router(\n        self,\n        router: Annotated[\"APIRouter\", Doc(\"The `APIRouter` to include.\")],\n        *,\n        prefix: Annotated[str, Doc(\"An optional path prefix for the router.\")] = \"\",\n        tags: Annotated[\n            Optional[List[Union[str, Enum]]],\n            Doc(\n                \"\"\"\n                A list of tags to be applied to all the *path operations* in this\n                router.\n\n                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\n                Read more about it in the\n                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n                \"\"\"\n            ),\n        ] = None,\n        dependencies: Annotated[\n            Optional[Sequence[params.Depends]],\n            Doc(\n                \"\"\"\n                A list of dependencies (using `Depends()`) to be applied to all the\n                *path operations* in this router.\n\n                Read more about it in the\n                [FastAPI docs for Bigger Applications - Multiple Files](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n                \"\"\"\n            ),\n        ] = None,\n        default_response_class: Annotated[\n            Type[Response],\n            Doc(\n                \"\"\"\n                The default response class to be used.\n\n                Read more in the\n                [FastAPI docs for Custom Response - HTML, Stream, File, others](https://fastapi.tiangolo.com/advanced/custom-response/#default-response-class).\n                \"\"\"\n            ),\n        ] = Default(JSONResponse),\n        responses: Annotated[\n            Optional[Dict[Union[int, str], Dict[str, Any]]],\n            Doc(\n                \"\"\"\n                Additional responses to be shown in OpenAPI.\n\n                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\n                Read more about it in the\n                [FastAPI docs for Additional Responses in OpenAPI](https://fastapi.tiangolo.com/advanced/additional-responses/).\n\n                And in the\n                [FastAPI docs for Bigger Applications](https://fastapi.tiangolo.com/tutorial/bigger-applications/#include-an-apirouter-with-a-custom-prefix-tags-responses-and-dependencies).\n                \"\"\"\n            ),\n        ] = None,\n        callbacks: Annotated[\n            Optional[List[BaseRoute]],\n            Doc(\n                \"\"\"\n                OpenAPI callbacks that should apply to all *path operations* in this\n                router.\n\n                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\n                Read more about it in the\n                [FastAPI docs for OpenAPI Callbacks](https://fastapi.tiangolo.com/advanced/openapi-callbacks/).\n                \"\"\"\n            ),\n        ] = None,\n        deprecated: Annotated[\n            Optional[bool],\n            Doc(\n                \"\"\"\n                Mark all *path operations* in this router as deprecated.\n\n                It will be added to the generated OpenAPI (e.g. visible at `/docs`).\n\n                Read more about it in the\n                [FastAPI docs for Path Operation Configuration](https://fastapi.tiangolo.com/tutorial/path-operation-configuration/).\n                \"\"\"\n            ),\n        ] = None,\n        include_in_schema: Annotated[\n            bool,\n            Doc(\n                \"\"\"\n                Include (or not) all the *path operations* in this router in the\n                generated OpenAPI schema.\n\n                This affects the generated OpenAPI (e.g. visible at `/docs`).\n                \"\"\"\n            ),\n        ] = True,\n        generate_unique_id_function: Annotated[\n            Callable[[APIRoute], str],\n            Doc(\n                \"\"\"\n                Customize the function used to generate unique IDs for the *path\n                operations* shown in the generated OpenAPI.\n\n                This is particularly useful when automatically generating clients or\n                SDKs for your API.\n\n                Read more about it in the\n                [FastAPI docs about how to Generate Clients](https://fastapi.tiangolo.com/advanced/generate-clients/#custom-generate-unique-id-function).\n                \"\"\"\n            ),\n        ] = Default(generate_unique_id),\n"
    },
    {
      "function": "TestClient",
      "filename": "",
      "line": 0,
      "caller": "test_router_nested_lifespan_state_overriding_by_parent",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert client.app_state == {'app_specific': True, 'router_specific': True, 'overridden': 'app'}"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_router_nested_lifespan_state_overriding_by_parent() -> None:\n    @asynccontextmanager\n    async def lifespan(\n        app: FastAPI,\n    ) -> AsyncGenerator[Dict[str, Union[str, bool]], None]:\n        yield {\n            \"app_specific\": True,\n            \"overridden\": \"app\",\n        }\n\n    @asynccontextmanager\n    async def router_lifespan(\n        app: FastAPI,\n    ) -> AsyncGenerator[Dict[str, Union[str, bool]], None]:\n        yield {\n            \"router_specific\": True,\n            \"overridden\": \"router\",  # should override parent\n        }\n\n    router = APIRouter(lifespan=router_lifespan)\n    app = FastAPI(lifespan=lifespan)\n    app.include_router(router)\n\n    with TestClient(app) as client:\n        assert client.app_state == {\n            \"app_specific\": True,\n            \"router_specific\": True,\n            \"overridden\": \"app\",\n        }"
}