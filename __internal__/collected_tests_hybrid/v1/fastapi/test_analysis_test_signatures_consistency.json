{
  "test_name": "test_signatures_consistency",
  "test_file": "__internal__/_data/fastapi/tests/test_operations_signatures.py",
  "static_methods": [
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "base_sig.parameters.items",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_signatures_consistency",
      "source_code": ""
    },
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_signatures_consistency",
      "source_code": ""
    },
    {
      "function": "base_sig.parameters.items",
      "filename": "",
      "line": 0,
      "caller": "test_signatures_consistency",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert param.annotation == router_param.annotation",
    "assert param.annotation == app_param.annotation",
    "assert param.default == router_param.default",
    "assert param.default == app_param.default"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_signatures_consistency():\n    base_sig = inspect.signature(APIRouter.get)\n    for method_name in method_names:\n        router_method = getattr(APIRouter, method_name)\n        app_method = getattr(FastAPI, method_name)\n        router_sig = inspect.signature(router_method)\n        app_sig = inspect.signature(app_method)\n        param: inspect.Parameter\n        for key, param in base_sig.parameters.items():\n            router_param: inspect.Parameter = router_sig.parameters[key]\n            app_param: inspect.Parameter = app_sig.parameters[key]\n            assert param.annotation == router_param.annotation\n            assert param.annotation == app_param.annotation\n            assert param.default == router_param.default\n            assert param.default == app_param.default"
}