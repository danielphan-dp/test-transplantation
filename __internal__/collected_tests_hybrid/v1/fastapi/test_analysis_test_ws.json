{
  "test_name": "test_ws",
  "test_file": "__internal__/_data/fastapi/tests/test_tutorial/test_testing/test_tutorial002.py",
  "static_methods": [
    {
      "name": "test_websocket",
      "source_code": "def test_websocket():\n    with client.websocket_connect(\"/items/portal-gun\") as websocket:\n        data = websocket.receive_json()\n        assert data == {\"item_id\": \"portal-gun\", \"path\": \"/items/{item_id}\"}",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/tests/test_route_scope.py",
      "line_number": 41
    }
  ],
  "dynamic_methods": [
    {
      "function": "test_websocket",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/fastapi/tests/test_route_scope.py",
      "line": 41,
      "caller": "test_ws",
      "source_code": "def test_websocket():\n    with client.websocket_connect(\"/items/portal-gun\") as websocket:\n        data = websocket.receive_json()\n        assert data == {\"item_id\": \"portal-gun\", \"path\": \"/items/{item_id}\"}\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_ws():\n    test_websocket()"
}