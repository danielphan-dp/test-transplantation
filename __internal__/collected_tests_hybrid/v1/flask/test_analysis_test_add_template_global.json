{
  "test_name": "test_add_template_global",
  "test_file": "__internal__/_data/flask/tests/test_templating.py",
  "static_methods": [
    {
      "name": "app.template_global",
      "source_code": "    def template_global(\n        self, name: str | None = None\n    ) -> t.Callable[[T_template_global], T_template_global]:\n        \"\"\"A decorator that is used to register a custom template global function.\n        You can specify a name for the global function, otherwise the function\n        name will be used. Example::",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/src/flask/sansio/app.py",
      "line_number": 741
    },
    {
      "name": "app.jinja_env.globals",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "app.jinja_env.globals.keys",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.template_global",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/src/flask/sansio/app.py",
      "line": 741,
      "caller": "test_add_template_global",
      "source_code": "    @setupmethod\n    def template_global(\n        self, name: str | None = None\n"
    },
    {
      "function": "app.jinja_env.globals",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_add_template_global",
      "source_code": ""
    },
    {
      "function": "app.jinja_env.globals.keys",
      "filename": "",
      "line": 0,
      "caller": "test_add_template_global",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert 'get_stuff' in app.jinja_env.globals.keys()",
    "assert app.jinja_env.globals['get_stuff'] == get_stuff",
    "assert app.jinja_env.globals['get_stuff'](), 42",
    "assert rv == '42'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_add_template_global(app, app_ctx):\n    @app.template_global()\n    def get_stuff():\n        return 42\n\n    assert \"get_stuff\" in app.jinja_env.globals.keys()\n    assert app.jinja_env.globals[\"get_stuff\"] == get_stuff\n    assert app.jinja_env.globals[\"get_stuff\"](), 42\n\n    rv = flask.render_template_string(\"{{ get_stuff() }}\")\n    assert rv == \"42\""
}