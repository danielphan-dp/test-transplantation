{
  "test_name": "test_async_before_after_request",
  "test_file": "__internal__/_data/flask/tests/test_async.py",
  "static_methods": [
    "Flask",
    "app.route",
    "Blueprint",
    "blueprint.route",
    "app.register_blueprint",
    "app.test_client",
    "test_client.get",
    "test_client.get"
  ],
  "dynamic_methods": [
    {
      "function": "Flask",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "Blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "blueprint.route",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "test_client.get",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    },
    {
      "function": "test_client.get",
      "filename": "",
      "line": 0,
      "caller": "test_async_before_after_request"
    }
  ],
  "assertions": [
    "assert app_before_called",
    "assert app_after_called",
    "assert bp_before_called",
    "assert bp_after_called"
  ],
  "mocks": [],
  "success": true
}