{
  "test_name": "test_bad_environ_raises_bad_request",
  "test_file": "__internal__/_data/flask/tests/test_reqctx.py",
  "static_methods": [
    {
      "name": "app.request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "EnvironBuilder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "builder.get_environ",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.full_dispatch_request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.request_context",
      "filename": "",
      "line": 0,
      "caller": "test_bad_environ_raises_bad_request"
    },
    {
      "function": "EnvironBuilder",
      "filename": "",
      "line": 0,
      "caller": "test_bad_environ_raises_bad_request"
    },
    {
      "function": "builder.get_environ",
      "filename": "",
      "line": 0,
      "caller": "test_bad_environ_raises_bad_request"
    },
    {
      "function": "app.request_context",
      "filename": "",
      "line": 0,
      "caller": "test_bad_environ_raises_bad_request"
    },
    {
      "function": "app.full_dispatch_request",
      "filename": "",
      "line": 0,
      "caller": "test_bad_environ_raises_bad_request"
    }
  ],
  "assertions": [
    "assert response.status_code == 400"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_bad_environ_raises_bad_request():\n    app = flask.Flask(__name__)\n\n    from flask.testing import EnvironBuilder\n\n    builder = EnvironBuilder(app)\n    environ = builder.get_environ()\n\n    # use a non-printable character in the Host - this is key to this test\n    environ[\"HTTP_HOST\"] = \"\\x8a\"\n\n    with app.request_context(environ):\n        response = app.full_dispatch_request()\n    assert response.status_code == 400"
}