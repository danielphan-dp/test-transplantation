{
  "test_name": "test_blueprint_specific_error_handling",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    "frontend.errorhandler",
    "frontend.route",
    "backend.errorhandler",
    "backend.route",
    "sideend.route",
    "app.register_blueprint",
    "app.register_blueprint",
    "app.register_blueprint",
    "app.errorhandler",
    "client.get",
    "client.get",
    "client.get"
  ],
  "dynamic_methods": [
    {
      "function": "frontend.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "frontend.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "backend.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "backend.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "sideend.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "app.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_error_handling"
    }
  ],
  "assertions": [
    "assert client.get('/frontend-no').data == b'frontend says no'",
    "assert client.get('/backend-no').data == b'backend says no'",
    "assert client.get('/what-is-a-sideend').data == b'application itself says no'"
  ],
  "mocks": [],
  "success": true
}