{
  "test_name": "test_blueprint_specific_user_error_handling",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    "blue.errorhandler",
    "blue.register_error_handler",
    "blue.route",
    "blue.route",
    "app.register_blueprint",
    "isinstance",
    "isinstance",
    "MyDecoratorException",
    "MyFunctionException",
    "client.get",
    "client.get"
  ],
  "dynamic_methods": [
    {
      "function": "blue.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "blue.register_error_handler",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "blue.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "blue.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "MyDecoratorException",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "MyFunctionException",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_specific_user_error_handling"
    }
  ],
  "assertions": [
    "assert client.get('/decorator').data == b'boom'",
    "assert client.get('/function').data == b'bam'",
    "assert isinstance(e, MyDecoratorException)",
    "assert isinstance(e, MyFunctionException)"
  ],
  "mocks": [],
  "success": true
}