{
  "test_name": "test_blueprint_url_defaults",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    {
      "name": "bp.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "bp.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_blueprint_url_defaults"
    }
  ],
  "assertions": [
    "assert client.get('/1/foo').data == b'23/42'",
    "assert client.get('/2/foo').data == b'19/42'",
    "assert client.get('/1/bar').data == b'23'",
    "assert client.get('/2/bar').data == b'19'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_blueprint_url_defaults(app, client):\n    bp = flask.Blueprint(\"test\", __name__)\n\n    @bp.route(\"/foo\", defaults={\"baz\": 42})\n    def foo(bar, baz):\n        return f\"{bar}/{baz:d}\"\n\n    @bp.route(\"/bar\")\n    def bar(bar):\n        return str(bar)\n\n    app.register_blueprint(bp, url_prefix=\"/1\", url_defaults={\"bar\": 23})\n    app.register_blueprint(bp, name=\"test2\", url_prefix=\"/2\", url_defaults={\"bar\": 19})\n\n    assert client.get(\"/1/foo\").data == b\"23/42\"\n    assert client.get(\"/2/foo\").data == b\"19/42\"\n    assert client.get(\"/1/bar\").data == b\"23\"\n    assert client.get(\"/2/bar\").data == b\"19\""
}