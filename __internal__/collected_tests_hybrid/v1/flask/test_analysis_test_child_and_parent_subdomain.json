{
  "test_name": "test_child_and_parent_subdomain",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    {
      "name": "child.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "parent.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "child.route",
      "filename": "",
      "line": 0,
      "caller": "test_child_and_parent_subdomain"
    },
    {
      "function": "parent.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_child_and_parent_subdomain"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_child_and_parent_subdomain"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_child_and_parent_subdomain"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_child_and_parent_subdomain"
    }
  ],
  "assertions": [
    "assert response.status_code == 200",
    "assert response.status_code == 404"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_child_and_parent_subdomain(app, client) -> None:\n    app.subdomain_matching = True\n    app.config[\"SERVER_NAME\"] = \"example.test\"\n    client.allow_subdomain_redirects = True\n\n    parent = flask.Blueprint(\"parent\", __name__)\n    child = flask.Blueprint(\"child\", __name__, subdomain=\"api\")\n\n    @child.route(\"/\")\n    def index():\n        return \"child\"\n\n    parent.register_blueprint(child)\n    app.register_blueprint(parent, subdomain=\"parent\")\n\n    response = client.get(\"/\", base_url=\"http://api.parent.example.test\")\n    assert response.status_code == 200\n\n    response = client.get(\"/\", base_url=\"http://parent.example.test\")\n    assert response.status_code == 404"
}