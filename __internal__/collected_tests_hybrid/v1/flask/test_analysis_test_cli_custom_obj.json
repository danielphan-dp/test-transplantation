{
  "test_name": "test_cli_custom_obj",
  "test_file": "__internal__/_data/flask/tests/test_testing.py",
  "static_methods": [
    {
      "name": "app.cli.command",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ScriptInfo",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_cli_runner",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "runner.invoke",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.cli.command",
      "filename": "",
      "line": 0,
      "caller": "test_cli_custom_obj"
    },
    {
      "function": "ScriptInfo",
      "filename": "",
      "line": 0,
      "caller": "test_cli_custom_obj"
    },
    {
      "function": "app.test_cli_runner",
      "filename": "",
      "line": 0,
      "caller": "test_cli_custom_obj"
    },
    {
      "function": "runner.invoke",
      "filename": "",
      "line": 0,
      "caller": "test_cli_custom_obj"
    }
  ],
  "assertions": [
    "assert NS.called"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_cli_custom_obj(app):\n    class NS:\n        called = False\n\n    def create_app():\n        NS.called = True\n        return app\n\n    @app.cli.command(\"hello\")\n    def hello_command():\n        click.echo(\"Hello, World!\")\n\n    script_info = ScriptInfo(create_app=create_app)\n    runner = app.test_cli_runner()\n    runner.invoke(hello_command, obj=script_info)\n    assert NS.called"
}