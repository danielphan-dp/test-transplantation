{
  "test_name": "test_closed_shouldnt_raise_on_closed_stream",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/ansitowin32_test.py",
  "static_methods": [
    {
      "name": "StringIO",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "stream.close",
      "source_code": "    def close(self) -> None:\n        for callback in self._callbacks:\n            callback()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/venv/lib/python3.9/site-packages/werkzeug/wsgi.py",
      "line_number": 258
    },
    {
      "name": "StreamWrapper",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "StringIO",
      "filename": "",
      "line": 0,
      "caller": "test_closed_shouldnt_raise_on_closed_stream",
      "source_code": ""
    },
    {
      "function": "stream.close",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/venv/lib/python3.9/site-packages/werkzeug/wsgi.py",
      "line": 258,
      "caller": "test_closed_shouldnt_raise_on_closed_stream",
      "source_code": "    def close(self) -> None:\n        for callback in self._callbacks:\n            callback()\n\n\n"
    },
    {
      "function": "StreamWrapper",
      "filename": "",
      "line": 0,
      "caller": "test_closed_shouldnt_raise_on_closed_stream",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_closed_shouldnt_raise_on_closed_stream",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_closed_shouldnt_raise_on_closed_stream(self):\n        stream = StringIO()\n        stream.close()\n        wrapper = StreamWrapper(stream, None)\n        self.assertEqual(wrapper.closed, True)"
}