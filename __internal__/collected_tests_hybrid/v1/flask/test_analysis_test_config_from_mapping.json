{
  "test_name": "test_config_from_mapping",
  "test_file": "__internal__/_data/flask/tests/test_config.py",
  "static_methods": [
    {
      "name": "app.config.from_mapping",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "common_object_test",
      "source_code": "def common_object_test(app):\n    assert app.secret_key == \"config\"\n    assert app.config[\"TEST_KEY\"] == \"foo\"\n    assert \"TestConfig\" not in app.config",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line_number": 13
    },
    {
      "name": "app.config.from_mapping",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "common_object_test",
      "source_code": "def common_object_test(app):\n    assert app.secret_key == \"config\"\n    assert app.config[\"TEST_KEY\"] == \"foo\"\n    assert \"TestConfig\" not in app.config",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line_number": 13
    },
    {
      "name": "app.config.from_mapping",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "common_object_test",
      "source_code": "def common_object_test(app):\n    assert app.secret_key == \"config\"\n    assert app.config[\"TEST_KEY\"] == \"foo\"\n    assert \"TestConfig\" not in app.config",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line_number": 13
    },
    {
      "name": "app.config.from_mapping",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "common_object_test",
      "source_code": "def common_object_test(app):\n    assert app.secret_key == \"config\"\n    assert app.config[\"TEST_KEY\"] == \"foo\"\n    assert \"TestConfig\" not in app.config",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line_number": 13
    },
    {
      "name": "app.config.from_mapping",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.config.from_mapping",
      "filename": "",
      "line": 0,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "common_object_test",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line": 13,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "app.config.from_mapping",
      "filename": "",
      "line": 0,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "common_object_test",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line": 13,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "app.config.from_mapping",
      "filename": "",
      "line": 0,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "common_object_test",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line": 13,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "app.config.from_mapping",
      "filename": "",
      "line": 0,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "common_object_test",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_config.py",
      "line": 13,
      "caller": "test_config_from_mapping"
    },
    {
      "function": "app.config.from_mapping",
      "filename": "",
      "line": 0,
      "caller": "test_config_from_mapping"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_config_from_mapping():\n    app = flask.Flask(__name__)\n    app.config.from_mapping({\"SECRET_KEY\": \"config\", \"TEST_KEY\": \"foo\"})\n    common_object_test(app)\n\n    app = flask.Flask(__name__)\n    app.config.from_mapping([(\"SECRET_KEY\", \"config\"), (\"TEST_KEY\", \"foo\")])\n    common_object_test(app)\n\n    app = flask.Flask(__name__)\n    app.config.from_mapping(SECRET_KEY=\"config\", TEST_KEY=\"foo\")\n    common_object_test(app)\n\n    app = flask.Flask(__name__)\n    app.config.from_mapping(SECRET_KEY=\"config\", TEST_KEY=\"foo\", skip_key=\"skip\")\n    common_object_test(app)\n\n    app = flask.Flask(__name__)\n    with pytest.raises(TypeError):\n        app.config.from_mapping({}, {})"
}