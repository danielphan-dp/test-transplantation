{
  "test_name": "test_duplicate_tag",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_json_tag.py",
  "static_methods": [
    {
      "name": "TaggedJSONSerializer",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "s.register",
      "source_code": "    def register(self, code: CodeType, source: str) -> None:\n        self._storage[id(code)] = source\n        # register code objects of wrapped functions too.\n        for var in code.co_consts:\n            if isinstance(var, CodeType):\n                self._storage[id(var)] = source",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/venv/lib/python3.9/site-packages/werkzeug/debug/console.py",
      "line_number": 118
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "TaggedJSONSerializer",
      "filename": "",
      "line": 0,
      "caller": "test_duplicate_tag",
      "source_code": ""
    },
    {
      "function": "s.register",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/venv/lib/python3.9/site-packages/werkzeug/debug/console.py",
      "line": 118,
      "caller": "test_duplicate_tag",
      "source_code": "    def register(self, code: CodeType, source: str) -> None:\n        self._storage[id(code)] = source\n        # register code objects of wrapped functions too.\n        for var in code.co_consts:\n            if isinstance(var, CodeType):\n                self._storage[id(var)] = source\n\n"
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_duplicate_tag",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_duplicate_tag",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert isinstance(s.tags[' d'], TagDict)",
    "assert isinstance(s.order[0], TagDict)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_duplicate_tag():\n    class TagDict(JSONTag):\n        key = \" d\"\n\n    s = TaggedJSONSerializer()\n    pytest.raises(KeyError, s.register, TagDict)\n    s.register(TagDict, force=True, index=0)\n    assert isinstance(s.tags[\" d\"], TagDict)\n    assert isinstance(s.order[0], TagDict)"
}