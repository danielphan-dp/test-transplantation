{
  "test_name": "test_enctype_debug_helper",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.post",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_enctype_debug_helper"
    },
    {
      "function": "client.post",
      "filename": "",
      "line": 0,
      "caller": "test_enctype_debug_helper"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_enctype_debug_helper"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_enctype_debug_helper"
    }
  ],
  "assertions": [
    "assert 'no file contents were transmitted' in str(e.value)",
    "assert \"This was submitted: 'index.txt'\" in str(e.value)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_enctype_debug_helper(app, client):\n    from flask.debughelpers import DebugFilesKeyError\n\n    app.debug = True\n\n    @app.route(\"/fail\", methods=[\"POST\"])\n    def index():\n        return flask.request.files[\"foo\"].filename\n\n    with pytest.raises(DebugFilesKeyError) as e:\n        client.post(\"/fail\", data={\"foo\": \"index.txt\"})\n    assert \"no file contents were transmitted\" in str(e.value)\n    assert \"This was submitted: 'index.txt'\" in str(e.value)"
}