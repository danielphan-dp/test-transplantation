{
  "test_name": "test_environ_for_valid_idna_completes",
  "test_file": "__internal__/_data/flask/tests/test_reqctx.py",
  "static_methods": [
    {
      "name": "app.request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "EnvironBuilder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "builder.get_environ",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.full_dispatch_request",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.request_context",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    },
    {
      "function": "EnvironBuilder",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    },
    {
      "function": "builder.get_environ",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    },
    {
      "function": "app.request_context",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    },
    {
      "function": "app.full_dispatch_request",
      "filename": "",
      "line": 0,
      "caller": "test_environ_for_valid_idna_completes"
    }
  ],
  "assertions": [
    "assert response.status_code == 200"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_environ_for_valid_idna_completes():\n    app = flask.Flask(__name__)\n\n    @app.route(\"/\")\n    def index():\n        return \"Hello World!\"\n\n    from flask.testing import EnvironBuilder\n\n    builder = EnvironBuilder(app)\n    environ = builder.get_environ()\n\n    # these characters are all IDNA-compatible\n    environ[\"HTTP_HOST\"] = \"\u0105\u015b\u017a\u00e4\u00fc\u0436\u0160\u00df\u044f.com\"\n\n    with app.request_context(environ):\n        response = app.full_dispatch_request()\n\n    assert response.status_code == 200"
}