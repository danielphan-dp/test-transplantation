{
  "test_name": "test_error_handler_no_match",
  "test_file": "__internal__/_data/flask/tests/test_user_error_handler.py",
  "static_methods": [
    "app.errorhandler",
    "app.errorhandler",
    "app.route",
    "app.route",
    "app.route",
    "isinstance",
    "app.register_error_handler",
    "str",
    "app.register_error_handler",
    "str",
    "isinstance",
    "app.register_error_handler",
    "str",
    "CustomException",
    "KeyError",
    "CustomException",
    "client.get",
    "client.get",
    "client.get",
    "type"
  ],
  "dynamic_methods": [
    {
      "function": "app.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.register_error_handler",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.register_error_handler",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "app.register_error_handler",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "CustomException",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "KeyError",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "CustomException",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    },
    {
      "function": "type",
      "filename": "",
      "line": 0,
      "caller": "test_error_handler_no_match"
    }
  ],
  "assertions": [
    "assert 'CustomException() is an instance, not a class.' in str(exc_info.value)",
    "assert \"'list' is not a subclass of Exception.\" in str(exc_info.value)",
    "assert 'Use a subclass of HTTPException' in str(exc_info.value)",
    "assert client.get('/custom').data == b'custom'",
    "assert client.get('/keyerror').data == b'wrapped KeyError'",
    "assert client.get('/abort').data == b'direct'",
    "assert isinstance(e, CustomException)",
    "assert isinstance(e, InternalServerError)"
  ],
  "mocks": [],
  "success": true
}