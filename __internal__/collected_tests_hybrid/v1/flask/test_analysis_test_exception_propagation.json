{
  "test_name": "test_exception_propagation",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_exception_propagation"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_exception_propagation"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_exception_propagation"
    }
  ],
  "assertions": [
    "assert client.get('/').status_code == 500"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_exception_propagation(app, client, key):\n    app.testing = False\n\n    @app.route(\"/\")\n    def index():\n        raise ZeroDivisionError\n\n    if key is not None:\n        app.config[key] = True\n\n        with pytest.raises(ZeroDivisionError):\n            client.get(\"/\")\n    else:\n        assert client.get(\"/\").status_code == 500"
}