{
  "test_name": "test_from_prefixed_env_custom_prefix",
  "test_file": "__internal__/_data/flask/tests/test_config.py",
  "static_methods": [
    {
      "name": "monkeypatch.setenv",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "monkeypatch.setenv",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.config.from_prefixed_env",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "monkeypatch.setenv",
      "filename": "",
      "line": 0,
      "caller": "test_from_prefixed_env_custom_prefix"
    },
    {
      "function": "monkeypatch.setenv",
      "filename": "",
      "line": 0,
      "caller": "test_from_prefixed_env_custom_prefix"
    },
    {
      "function": "app.config.from_prefixed_env",
      "filename": "",
      "line": 0,
      "caller": "test_from_prefixed_env_custom_prefix"
    }
  ],
  "assertions": [
    "assert app.config['A'] == 'b'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_from_prefixed_env_custom_prefix(monkeypatch):\n    monkeypatch.setenv(\"FLASK_A\", \"a\")\n    monkeypatch.setenv(\"NOT_FLASK_A\", \"b\")\n\n    app = flask.Flask(__name__)\n    app.config.from_prefixed_env(\"NOT_FLASK\")\n\n    assert app.config[\"A\"] == \"b\""
}