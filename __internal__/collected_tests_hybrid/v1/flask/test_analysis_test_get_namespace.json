{
  "test_name": "test_get_namespace",
  "test_file": "__internal__/_data/flask/tests/test_config.py",
  "static_methods": [
    "app.config.get_namespace",
    "app.config.get_namespace",
    "app.config.get_namespace",
    "app.config.get_namespace",
    "len",
    "len",
    "len",
    "len"
  ],
  "dynamic_methods": [
    {
      "function": "app.config.get_namespace",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "app.config.get_namespace",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "app.config.get_namespace",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "app.config.get_namespace",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_get_namespace"
    }
  ],
  "assertions": [
    "assert 2 == len(foo_options)",
    "assert 'foo option 1' == foo_options['option_1']",
    "assert 'foo option 2' == foo_options['option_2']",
    "assert 2 == len(bar_options)",
    "assert 'bar stuff 1' == bar_options['STUFF_1']",
    "assert 'bar stuff 2' == bar_options['STUFF_2']",
    "assert 2 == len(foo_options)",
    "assert 'foo option 1' == foo_options['foo_option_1']",
    "assert 'foo option 2' == foo_options['foo_option_2']",
    "assert 2 == len(bar_options)",
    "assert 'bar stuff 1' == bar_options['BAR_STUFF_1']",
    "assert 'bar stuff 2' == bar_options['BAR_STUFF_2']"
  ],
  "mocks": [],
  "success": true
}