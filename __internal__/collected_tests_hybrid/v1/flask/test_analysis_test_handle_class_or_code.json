{
  "test_name": "test_handle_class_or_code",
  "test_file": "__internal__/_data/flask/tests/test_user_error_handler.py",
  "static_methods": [
    "app.errorhandler",
    "isinstance",
    "self.report_error",
    "client.get",
    "client.get",
    "client.get",
    "client.get"
  ],
  "dynamic_methods": [
    {
      "function": "app.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "self.report_error",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_handle_class_or_code"
    }
  ],
  "assertions": [
    "assert client.get('/custom').data == b'wrapped Custom'",
    "assert client.get('/error').data == b'wrapped KeyError'",
    "assert client.get('/abort').data == b'direct InternalServerError'",
    "assert client.get('/raise').data == b'direct InternalServerError'",
    "assert isinstance(e, InternalServerError)"
  ],
  "mocks": [],
  "success": false
}