{
  "test_name": "test_implicit_head",
  "test_file": "__internal__/_data/flask/tests/test_views.py",
  "static_methods": [
    {
      "name": "app.add_url_rule",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.head",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Index.as_view",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.add_url_rule",
      "filename": "",
      "line": 0,
      "caller": "test_implicit_head"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_implicit_head"
    },
    {
      "function": "client.head",
      "filename": "",
      "line": 0,
      "caller": "test_implicit_head"
    },
    {
      "function": "Index.as_view",
      "filename": "",
      "line": 0,
      "caller": "test_implicit_head"
    }
  ],
  "assertions": [
    "assert rv.data == b'Blub'",
    "assert rv.headers['X-Method'] == 'GET'",
    "assert rv.data == b''",
    "assert rv.headers['X-Method'] == 'HEAD'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_implicit_head(app, client):\n    class Index(flask.views.MethodView):\n        def get(self):\n            return flask.Response(\"Blub\", headers={\"X-Method\": flask.request.method})\n\n    app.add_url_rule(\"/\", view_func=Index.as_view(\"index\"))\n    rv = client.get(\"/\")\n    assert rv.data == b\"Blub\"\n    assert rv.headers[\"X-Method\"] == \"GET\"\n    rv = client.head(\"/\")\n    assert rv.data == b\"\"\n    assert rv.headers[\"X-Method\"] == \"HEAD\""
}