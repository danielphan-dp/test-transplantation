{
  "test_name": "test_jsonify_aware_datetimes",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_json.py",
  "static_methods": [
    {
      "name": "FixedOffset",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FixedOffset",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "dt.astimezone.strftime",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "dt.astimezone",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "FixedOffset",
      "filename": "",
      "line": 0,
      "caller": "test_jsonify_aware_datetimes",
      "source_code": ""
    },
    {
      "function": "FixedOffset",
      "filename": "",
      "line": 0,
      "caller": "test_jsonify_aware_datetimes",
      "source_code": ""
    },
    {
      "function": "dt.astimezone.strftime",
      "filename": "",
      "line": 0,
      "caller": "test_jsonify_aware_datetimes",
      "source_code": ""
    },
    {
      "function": "dt.astimezone",
      "filename": "",
      "line": 0,
      "caller": "test_jsonify_aware_datetimes",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert flask.json.dumps(dt) == expected"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_jsonify_aware_datetimes(tz):\n    \"\"\"Test if aware datetime.datetime objects are converted into GMT.\"\"\"\n    tzinfo = FixedOffset(hours=tz[1], name=tz[0])\n    dt = datetime.datetime(2017, 1, 1, 12, 34, 56, tzinfo=tzinfo)\n    gmt = FixedOffset(hours=0, name=\"GMT\")\n    expected = dt.astimezone(gmt).strftime('\"%a, %d %b %Y %H:%M:%S %Z\"')\n    assert flask.json.dumps(dt) == expected"
}