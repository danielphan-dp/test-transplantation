{
  "test_name": "test_log_view_exception",
  "test_file": "__internal__/_data/flask/tests/test_logging.py",
  "static_methods": [
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "StringIO",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "stream.getvalue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Exception",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_log_view_exception"
    },
    {
      "function": "StringIO",
      "filename": "",
      "line": 0,
      "caller": "test_log_view_exception"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_log_view_exception"
    },
    {
      "function": "stream.getvalue",
      "filename": "",
      "line": 0,
      "caller": "test_log_view_exception"
    },
    {
      "function": "Exception",
      "filename": "",
      "line": 0,
      "caller": "test_log_view_exception"
    }
  ],
  "assertions": [
    "assert rv.status_code == 500",
    "assert rv.data",
    "assert 'Exception on / [GET]' in err",
    "assert 'Exception: test' in err"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_log_view_exception(app, client):\n    @app.route(\"/\")\n    def index():\n        raise Exception(\"test\")\n\n    app.testing = False\n    stream = StringIO()\n    rv = client.get(\"/\", errors_stream=stream)\n    assert rv.status_code == 500\n    assert rv.data\n    err = stream.getvalue()\n    assert \"Exception on / [GET]\" in err\n    assert \"Exception: test\" in err"
}