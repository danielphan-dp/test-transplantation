{
  "test_name": "test_max_cookie_size",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    "app.app_context",
    "app.route",
    "client.get",
    "recwarn.pop",
    "client.get",
    "app.app_context",
    "r.set_cookie",
    "len",
    "str",
    "len"
  ],
  "dynamic_methods": [
    {
      "function": "app.app_context",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "recwarn.pop",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "app.app_context",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "r.set_cookie",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_max_cookie_size"
    }
  ],
  "assertions": [
    "assert response.max_cookie_size == default",
    "assert len(recwarn) == 1",
    "assert 'cookie is too large' in str(w.message)",
    "assert len(recwarn) == 0",
    "assert flask.Response().max_cookie_size == 100"
  ],
  "mocks": [],
  "success": true
}