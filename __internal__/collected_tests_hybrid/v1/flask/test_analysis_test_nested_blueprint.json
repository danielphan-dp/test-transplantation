{
  "test_name": "test_nested_blueprint",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    {
      "name": "parent.errorhandler",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "parent.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "parent.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "child.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "child.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "grandchild.errorhandler",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "grandchild.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "grandchild.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "child.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "parent.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.register_blueprint",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "parent.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "parent.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "parent.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "child.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "child.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "grandchild.errorhandler",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "grandchild.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "grandchild.route",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "child.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "parent.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_nested_blueprint"
    }
  ],
  "assertions": [
    "assert client.get('/parent/').data == b'Parent yes'",
    "assert client.get('/parent/child/').data == b'Child yes'",
    "assert client.get('/parent/child/grandchild/').data == b'Grandchild yes'",
    "assert client.get('/parent/no').data == b'Parent no'",
    "assert client.get('/parent/child/no').data == b'Parent no'",
    "assert client.get('/parent/child/grandchild/no').data == b'Grandchild no'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_nested_blueprint(app, client):\n    parent = flask.Blueprint(\"parent\", __name__)\n    child = flask.Blueprint(\"child\", __name__)\n    grandchild = flask.Blueprint(\"grandchild\", __name__)\n\n    @parent.errorhandler(403)\n    def forbidden(e):\n        return \"Parent no\", 403\n\n    @parent.route(\"/\")\n    def parent_index():\n        return \"Parent yes\"\n\n    @parent.route(\"/no\")\n    def parent_no():\n        flask.abort(403)\n\n    @child.route(\"/\")\n    def child_index():\n        return \"Child yes\"\n\n    @child.route(\"/no\")\n    def child_no():\n        flask.abort(403)\n\n    @grandchild.errorhandler(403)\n    def grandchild_forbidden(e):\n        return \"Grandchild no\", 403\n\n    @grandchild.route(\"/\")\n    def grandchild_index():\n        return \"Grandchild yes\"\n\n    @grandchild.route(\"/no\")\n    def grandchild_no():\n        flask.abort(403)\n\n    child.register_blueprint(grandchild, url_prefix=\"/grandchild\")\n    parent.register_blueprint(child, url_prefix=\"/child\")\n    app.register_blueprint(parent, url_prefix=\"/parent\")\n\n    assert client.get(\"/parent/\").data == b\"Parent yes\"\n    assert client.get(\"/parent/child/\").data == b\"Child yes\"\n    assert client.get(\"/parent/child/grandchild/\").data == b\"Grandchild yes\"\n    assert client.get(\"/parent/no\").data == b\"Parent no\"\n    assert client.get(\"/parent/child/no\").data == b\"Parent no\"\n    assert client.get(\"/parent/child/grandchild/no\").data == b\"Grandchild no\""
}