{
  "test_name": "test_request_exception_signal",
  "test_file": "__internal__/_data/flask/tests/test_signals.py",
  "static_methods": [
    "app.route",
    "recorded.append",
    "isinstance",
    "len",
    "app.test_client.get",
    "app.test_client"
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    },
    {
      "function": "recorded.append",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    },
    {
      "function": "isinstance",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    },
    {
      "function": "app.test_client.get",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_request_exception_signal"
    }
  ],
  "assertions": [
    "assert app.test_client().get('/').status_code == 500",
    "assert len(recorded) == 1",
    "assert isinstance(recorded[0], ZeroDivisionError)"
  ],
  "mocks": [],
  "success": true
}