{
  "test_name": "test_response_types",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get"
  ],
  "dynamic_methods": [
    {
      "function": "make_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "skip_missing_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "make_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "skip_missing_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "make_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "skip_missing_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "make_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "skip_missing_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "make_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "skip_missing_files",
      "filename": "/home/quark-ubuntu-wsl/miniconda3/envs/gluon/lib/python3.9/site-packages/importlib_metadata/_functools.py",
      "line": 99,
      "caller": "decorator"
    },
    {
      "function": "<module>",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/conftest.py",
      "line": 1,
      "caller": "exec_module"
    }
  ],
  "assertions": [
    "assert client.get('/text').data == 'H\u00e4llo W\u00f6rld'.encode()",
    "assert client.get('/bytes').data == 'H\u00e4llo W\u00f6rld'.encode()",
    "assert rv.data == b'Meh'",
    "assert rv.headers['X-Foo'] == 'Testing'",
    "assert rv.status_code == 400",
    "assert rv.mimetype == 'text/plain'",
    "assert rv.data == b'Hello'",
    "assert rv.headers['X-Foo'] == 'Test'",
    "assert rv.status_code == 200",
    "assert rv.mimetype == 'text/plain'",
    "assert rv.data == b'Hi, status!'",
    "assert rv.status_code == 400",
    "assert rv.mimetype == 'text/html'",
    "assert rv.data == b'Hello world'",
    "assert rv.content_type == 'text/plain'",
    "assert rv.headers.getlist('X-Foo') == ['Bar']",
    "assert rv.headers['X-Bar'] == 'Foo'",
    "assert rv.status_code == 404",
    "assert rv.data == b'Hello world'",
    "assert rv.status_code == 500",
    "assert b'Not Found' in rv.data",
    "assert rv.status_code == 404",
    "assert rv.json == {'foo': 'bar'}",
    "assert rv.status_code == 201",
    "assert rv.json == ['foo', 'bar']",
    "assert rv.status_code == 201"
  ],
  "mocks": []
}