{
  "test_name": "test_route_decorator_custom_endpoint",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    "bp.route",
    "bp.route",
    "bp.route",
    "bp.route",
    "app.register_blueprint",
    "app.route",
    "client.get",
    "client.get",
    "client.get",
    "client.get",
    "client.get"
  ],
  "dynamic_methods": [
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "bp.route",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "app.register_blueprint",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_route_decorator_custom_endpoint"
    }
  ],
  "assertions": [
    "assert client.get('/').data == b'index'",
    "assert client.get('/py/foo').data == b'bp.foo'",
    "assert client.get('/py/bar').data == b'bp.bar'",
    "assert client.get('/py/bar/123').data == b'bp.123'",
    "assert client.get('/py/bar/foo').data == b'bp.bar_foo'"
  ],
  "mocks": [],
  "success": true
}