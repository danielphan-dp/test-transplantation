{
  "test_name": "test_session",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.post",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session"
    },
    {
      "function": "client.post",
      "filename": "",
      "line": 0,
      "caller": "test_session"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session"
    }
  ],
  "assertions": [
    "assert client.post('/set', data={'value': '42'}).data == b'value set'",
    "assert client.get('/get').data == b'42'",
    "assert not flask.session.accessed",
    "assert not flask.session.modified",
    "assert flask.session.accessed",
    "assert flask.session.modified",
    "assert not flask.session.accessed",
    "assert not flask.session.modified",
    "assert flask.session.accessed",
    "assert not flask.session.modified"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_session(app, client):\n    @app.route(\"/set\", methods=[\"POST\"])\n    def set():\n        assert not flask.session.accessed\n        assert not flask.session.modified\n        flask.session[\"value\"] = flask.request.form[\"value\"]\n        assert flask.session.accessed\n        assert flask.session.modified\n        return \"value set\"\n\n    @app.route(\"/get\")\n    def get():\n        assert not flask.session.accessed\n        assert not flask.session.modified\n        v = flask.session.get(\"value\", \"None\")\n        assert flask.session.accessed\n        assert not flask.session.modified\n        return v\n\n    assert client.post(\"/set\", data={\"value\": \"42\"}).data == b\"value set\"\n    assert client.get(\"/get\").data == b\"42\""
}