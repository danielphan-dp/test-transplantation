{
  "test_name": "test_session_dynamic_cookie_name",
  "test_file": "__internal__/_data/flask/tests/test_reqctx.py",
  "static_methods": [
    {
      "name": "CustomFlask",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "PathAwareSessionInterface",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "test_client.post",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "test_client.post",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "test_client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "test_client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "super.get_cookie_name",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "super",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "CustomFlask",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "PathAwareSessionInterface",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "test_client.post",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "test_client.post",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "test_client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "test_client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "super.get_cookie_name",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    },
    {
      "function": "super",
      "filename": "",
      "line": 0,
      "caller": "test_session_dynamic_cookie_name"
    }
  ],
  "assertions": [
    "assert test_client.post('/set', data={'value': '42'}).data == b'value set'",
    "assert test_client.post('/set_dynamic_cookie', data={'value': '616'}).data == b'value set'",
    "assert test_client.get('/get').data == b'42'",
    "assert test_client.get('/get_dynamic_cookie').data == b'616'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_session_dynamic_cookie_name():\n    # This session interface will use a cookie with a different name if the\n    # requested url ends with the string \"dynamic_cookie\"\n    class PathAwareSessionInterface(SecureCookieSessionInterface):\n        def get_cookie_name(self, app):\n            if flask.request.url.endswith(\"dynamic_cookie\"):\n                return \"dynamic_cookie_name\"\n            else:\n                return super().get_cookie_name(app)\n\n    class CustomFlask(flask.Flask):\n        session_interface = PathAwareSessionInterface()\n\n    app = CustomFlask(__name__)\n    app.secret_key = \"secret_key\"\n\n    @app.route(\"/set\", methods=[\"POST\"])\n    def set():\n        flask.session[\"value\"] = flask.request.form[\"value\"]\n        return \"value set\"\n\n    @app.route(\"/get\")\n    def get():\n        v = flask.session.get(\"value\", \"None\")\n        return v\n\n    @app.route(\"/set_dynamic_cookie\", methods=[\"POST\"])\n    def set_dynamic_cookie():\n        flask.session[\"value\"] = flask.request.form[\"value\"]\n        return \"value set\"\n\n    @app.route(\"/get_dynamic_cookie\")\n    def get_dynamic_cookie():\n        v = flask.session.get(\"value\", \"None\")\n        return v\n\n    test_client = app.test_client()\n\n    # first set the cookie in both /set urls but each with a different value\n    assert test_client.post(\"/set\", data={\"value\": \"42\"}).data == b\"value set\"\n    assert (\n        test_client.post(\"/set_dynamic_cookie\", data={\"value\": \"616\"}).data\n        == b\"value set\"\n    )\n\n    # now check that the relevant values come back - meaning that different\n    # cookies are being used for the urls that end with \"dynamic cookie\"\n    assert test_client.get(\"/get\").data == b\"42\"\n    assert test_client.get(\"/get_dynamic_cookie\").data == b\"616\""
}