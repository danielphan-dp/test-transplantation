{
  "test_name": "test_session_special_types",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    "app.route",
    "Markup",
    "client.get",
    "type",
    "type",
    "Markup"
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    },
    {
      "function": "Markup",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    },
    {
      "function": "type",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    },
    {
      "function": "type",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    },
    {
      "function": "Markup",
      "filename": "",
      "line": 0,
      "caller": "test_session_special_types"
    }
  ],
  "assertions": [
    "assert s['t'] == (1, 2, 3)",
    "assert type(s['b']) is bytes",
    "assert s['b'] == b'\\xff'",
    "assert type(s['m']) is Markup",
    "assert s['m'] == Markup('<html>')",
    "assert s['u'] == the_uuid",
    "assert s['d'] == now",
    "assert s['t_tag'] == {' t': 'not-a-tuple'}",
    "assert s['di_t_tag'] == {' t__': 'not-a-tuple'}",
    "assert s['di_tag'] == {' di': 'not-a-dict'}"
  ],
  "mocks": [],
  "success": true
}