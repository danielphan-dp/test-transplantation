{
  "test_name": "test_session_transactions",
  "test_file": "__internal__/_data/flask/tests/test_testing.py",
  "static_methods": [
    "app.route",
    "client.session_transaction",
    "client.session_transaction",
    "str",
    "client.get",
    "client.session_transaction",
    "client.session_transaction",
    "len",
    "len",
    "len"
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "client.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "client.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "client.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "client.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions"
    }
  ],
  "assertions": [
    "assert rv.data == b'[42]'",
    "assert len(sess) == 0",
    "assert len(sess) == 1",
    "assert len(sess) == 1",
    "assert sess['foo'] == [42]"
  ],
  "mocks": [],
  "success": true
}