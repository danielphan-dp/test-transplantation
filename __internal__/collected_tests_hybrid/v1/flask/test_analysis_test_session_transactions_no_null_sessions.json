{
  "test_name": "test_session_transactions_no_null_sessions",
  "test_file": "__internal__/_data/flask/tests/test_testing.py",
  "static_methods": [
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.session_transaction",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.session_transaction",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions_no_null_sessions"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions_no_null_sessions"
    },
    {
      "function": "c.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions_no_null_sessions"
    },
    {
      "function": "str",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions_no_null_sessions"
    },
    {
      "function": "c.session_transaction",
      "filename": "",
      "line": 0,
      "caller": "test_session_transactions_no_null_sessions"
    }
  ],
  "assertions": [
    "assert 'Session backend did not open a session' in str(e.value)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_session_transactions_no_null_sessions():\n    app = flask.Flask(__name__)\n\n    with app.test_client() as c:\n        with pytest.raises(RuntimeError) as e:\n            with c.session_transaction():\n                pass\n        assert \"Session backend did not open a session\" in str(e.value)"
}