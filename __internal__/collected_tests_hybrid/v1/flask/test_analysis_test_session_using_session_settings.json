{
  "test_name": "test_session_using_session_settings",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    "app.config.update",
    "app.route",
    "app.route",
    "client.get",
    "rv.headers.lower",
    "client.get",
    "rv.headers.lower"
  ],
  "dynamic_methods": [
    {
      "function": "app.config.update",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "rv.headers.lower",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    },
    {
      "function": "rv.headers.lower",
      "filename": "",
      "line": 0,
      "caller": "test_session_using_session_settings"
    }
  ],
  "assertions": [
    "assert 'domain=example.com' in cookie or 'domain=.example.com' in cookie",
    "assert 'path=/' in cookie",
    "assert 'secure' in cookie",
    "assert 'httponly' not in cookie",
    "assert 'samesite' in cookie",
    "assert 'partitioned' in cookie",
    "assert 'session=;' in cookie",
    "assert 'domain=example.com' in cookie or 'domain=.example.com' in cookie",
    "assert 'path=/' in cookie",
    "assert 'secure' in cookie",
    "assert 'samesite' in cookie",
    "assert 'partitioned' in cookie"
  ],
  "mocks": [],
  "success": false
}