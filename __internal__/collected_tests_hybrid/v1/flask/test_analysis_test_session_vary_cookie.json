{
  "test_name": "test_session_vary_cookie",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    "app.route",
    "app.route",
    "app.route",
    "app.route",
    "app.route",
    "app.route",
    "app.route",
    "app.route",
    "expect",
    "expect",
    "expect",
    "expect",
    "expect",
    "expect",
    "expect",
    "expect",
    "response.vary.add",
    "response.vary.update",
    "client.get",
    "len",
    "rv.headers.get_all"
  ],
  "dynamic_methods": [
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "expect",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/tests/test_basic.py",
      "line": 554,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "response.vary.add",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "response.vary.update",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "len",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    },
    {
      "function": "rv.headers.get_all",
      "filename": "",
      "line": 0,
      "caller": "test_session_vary_cookie"
    }
  ],
  "assertions": [
    "assert len(rv.headers.get_all('Vary')) == 1",
    "assert rv.headers['Vary'] == header_value",
    "assert 'Vary' not in rv.headers"
  ],
  "mocks": [],
  "success": true
}