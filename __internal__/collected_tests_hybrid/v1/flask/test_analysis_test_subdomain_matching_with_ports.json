{
  "test_name": "test_subdomain_matching_with_ports",
  "test_file": "__internal__/_data/flask/tests/test_basic.py",
  "static_methods": [
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.route",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_subdomain_matching_with_ports"
    },
    {
      "function": "app.route",
      "filename": "",
      "line": 0,
      "caller": "test_subdomain_matching_with_ports"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_subdomain_matching_with_ports"
    }
  ],
  "assertions": [
    "assert rv.data == b'index for mitsuhiko'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_subdomain_matching_with_ports():\n    app = flask.Flask(__name__, subdomain_matching=True)\n    app.config[\"SERVER_NAME\"] = \"localhost.localdomain:3000\"\n    client = app.test_client()\n\n    @app.route(\"/\", subdomain=\"<user>\")\n    def index(user):\n        return f\"index for {user}\"\n\n    rv = client.get(\"/\", \"http://mitsuhiko.localhost.localdomain:3000/\")\n    assert rv.data == b\"index for mitsuhiko\""
}