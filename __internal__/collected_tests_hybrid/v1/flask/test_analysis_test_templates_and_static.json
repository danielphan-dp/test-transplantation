{
  "test_name": "test_templates_and_static",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    {
      "name": "app.test_request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "rv.close",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "rv.close",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "rv.data.strip",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "rv.data.strip",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "client.get",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "parse_cache_control_header",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "rv.close",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_request_context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.test_request_context",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "app.test_request_context",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "rv.close",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "rv.close",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "rv.data.strip",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "rv.data.strip",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "client.get",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "parse_cache_control_header",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "rv.close",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "app.test_request_context",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    },
    {
      "function": "app.test_request_context",
      "filename": "",
      "line": 0,
      "caller": "test_templates_and_static"
    }
  ],
  "assertions": [
    "assert rv.data == b'Hello from the Frontend'",
    "assert rv.data == b'Hello from the Admin'",
    "assert rv.data == b'Hello from the Admin'",
    "assert rv.data.strip() == b'Admin File'",
    "assert rv.data.strip() == b'/* nested file */'",
    "assert cc.max_age == expected_max_age",
    "assert flask.url_for('admin.static', filename='test.txt') == '/admin/static/test.txt'",
    "assert e.value.name == 'missing.html'",
    "assert flask.render_template('nested/nested.txt') == \"I'm nested\""
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_templates_and_static(test_apps):\n    from blueprintapp import app\n\n    client = app.test_client()\n\n    rv = client.get(\"/\")\n    assert rv.data == b\"Hello from the Frontend\"\n    rv = client.get(\"/admin/\")\n    assert rv.data == b\"Hello from the Admin\"\n    rv = client.get(\"/admin/index2\")\n    assert rv.data == b\"Hello from the Admin\"\n    rv = client.get(\"/admin/static/test.txt\")\n    assert rv.data.strip() == b\"Admin File\"\n    rv.close()\n    rv = client.get(\"/admin/static/css/test.css\")\n    assert rv.data.strip() == b\"/* nested file */\"\n    rv.close()\n\n    # try/finally, in case other tests use this app for Blueprint tests.\n    max_age_default = app.config[\"SEND_FILE_MAX_AGE_DEFAULT\"]\n    try:\n        expected_max_age = 3600\n        if app.config[\"SEND_FILE_MAX_AGE_DEFAULT\"] == expected_max_age:\n            expected_max_age = 7200\n        app.config[\"SEND_FILE_MAX_AGE_DEFAULT\"] = expected_max_age\n        rv = client.get(\"/admin/static/css/test.css\")\n        cc = parse_cache_control_header(rv.headers[\"Cache-Control\"])\n        assert cc.max_age == expected_max_age\n        rv.close()\n    finally:\n        app.config[\"SEND_FILE_MAX_AGE_DEFAULT\"] = max_age_default\n\n    with app.test_request_context():\n        assert (\n            flask.url_for(\"admin.static\", filename=\"test.txt\")\n            == \"/admin/static/test.txt\"\n        )\n\n    with app.test_request_context():\n        with pytest.raises(TemplateNotFound) as e:\n            flask.render_template(\"missing.html\")\n        assert e.value.name == \"missing.html\"\n\n    with flask.Flask(__name__).test_request_context():\n        assert flask.render_template(\"nested/nested.txt\") == \"I'm nested\""
}