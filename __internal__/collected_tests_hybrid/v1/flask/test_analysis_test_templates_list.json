{
  "test_name": "test_templates_list",
  "test_file": "__internal__/_data/flask/tests/test_blueprints.py",
  "static_methods": [
    {
      "name": "sorted",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "app.jinja_env.list_templates",
      "source_code": "    def list_templates(self) -> list[str]:\n        result = set()\n        loader = self.app.jinja_loader\n        if loader is not None:\n            result.update(loader.list_templates())",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/src/flask/templating.py",
      "line_number": 111
    }
  ],
  "dynamic_methods": [
    {
      "function": "sorted",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_templates_list",
      "source_code": ""
    },
    {
      "function": "app.jinja_env.list_templates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/flask/src/flask/templating.py",
      "line": 111,
      "caller": "test_templates_list",
      "source_code": "    def list_templates(self) -> list[str]:\n        result = set()\n        loader = self.app.jinja_loader\n        if loader is not None:\n            result.update(loader.list_templates())\n\n        for blueprint in self.app.iter_blueprints():\n            loader = blueprint.jinja_loader\n            if loader is not None:\n                for template in loader.list_templates():\n                    result.add(template)\n\n        return list(result)\n\n\n"
    }
  ],
  "assertions": [
    "assert templates == ['admin/index.html', 'frontend/index.html']"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_templates_list(test_apps):\n    from blueprintapp import app\n\n    templates = sorted(app.jinja_env.list_templates())\n    assert templates == [\"admin/index.html\", \"frontend/index.html\"]"
}