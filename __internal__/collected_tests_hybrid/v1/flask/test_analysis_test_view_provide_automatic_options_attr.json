{
  "test_name": "test_view_provide_automatic_options_attr",
  "test_file": "__internal__/_data/flask/tests/test_views.py",
  "static_methods": [
    {
      "name": "app.add_url_rule",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.open",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.add_url_rule",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.open",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.add_url_rule",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "app.test_client",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.open",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "sorted",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Index1.as_view",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Index2.as_view",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Index3.as_view",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "app.add_url_rule",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "c.open",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "app.add_url_rule",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "c.open",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "app.add_url_rule",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "app.test_client",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "c.open",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "sorted",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "Index1.as_view",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "Index2.as_view",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    },
    {
      "function": "Index3.as_view",
      "filename": "",
      "line": 0,
      "caller": "test_view_provide_automatic_options_attr"
    }
  ],
  "assertions": [
    "assert rv.status_code == 405",
    "assert sorted(rv.allow) == ['OPTIONS']",
    "assert 'OPTIONS' in rv.allow"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_view_provide_automatic_options_attr():\n    app = flask.Flask(__name__)\n\n    class Index1(flask.views.View):\n        provide_automatic_options = False\n\n        def dispatch_request(self):\n            return \"Hello World!\"\n\n    app.add_url_rule(\"/\", view_func=Index1.as_view(\"index\"))\n    c = app.test_client()\n    rv = c.open(\"/\", method=\"OPTIONS\")\n    assert rv.status_code == 405\n\n    app = flask.Flask(__name__)\n\n    class Index2(flask.views.View):\n        methods = [\"OPTIONS\"]\n        provide_automatic_options = True\n\n        def dispatch_request(self):\n            return \"Hello World!\"\n\n    app.add_url_rule(\"/\", view_func=Index2.as_view(\"index\"))\n    c = app.test_client()\n    rv = c.open(\"/\", method=\"OPTIONS\")\n    assert sorted(rv.allow) == [\"OPTIONS\"]\n\n    app = flask.Flask(__name__)\n\n    class Index3(flask.views.View):\n        def dispatch_request(self):\n            return \"Hello World!\"\n\n    app.add_url_rule(\"/\", view_func=Index3.as_view(\"index\"))\n    c = app.test_client()\n    rv = c.open(\"/\", method=\"OPTIONS\")\n    assert \"OPTIONS\" in rv.allow"
}