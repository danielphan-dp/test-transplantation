{
  "test_name": "test_with_appcontext",
  "test_file": "__internal__/_data/flask/tests/test_cli.py",
  "static_methods": [
    {
      "name": "ScriptInfo",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "runner.invoke",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Flask",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "ScriptInfo",
      "filename": "",
      "line": 0,
      "caller": "test_with_appcontext"
    },
    {
      "function": "runner.invoke",
      "filename": "",
      "line": 0,
      "caller": "test_with_appcontext"
    },
    {
      "function": "Flask",
      "filename": "",
      "line": 0,
      "caller": "test_with_appcontext"
    }
  ],
  "assertions": [
    "assert result.exit_code == 0",
    "assert result.output == 'testapp\\n'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_with_appcontext(runner):\n    @click.command()\n    @with_appcontext\n    def testcmd():\n        click.echo(current_app.name)\n\n    obj = ScriptInfo(create_app=lambda: Flask(\"testapp\"))\n\n    result = runner.invoke(testcmd, obj=obj)\n    assert result.exit_code == 0\n    assert result.output == \"testapp\\n\""
}