{
  "test_name": "test___call___with_venusian_args",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_response.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "DummyVenusian",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "dec",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test___call___with_venusian_args",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "DummyVenusian",
      "filename": "",
      "line": 0,
      "caller": "test___call___with_venusian_args",
      "source_code": ""
    },
    {
      "function": "dec",
      "filename": "",
      "line": 0,
      "caller": "test___call___with_venusian_args",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test___call___with_venusian_args",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test___call___with_venusian_args(self):\n        from zope.interface import Interface\n\n        class IFoo(Interface):\n            pass\n\n        dec = self._makeOne(IFoo, _category='foo', _depth=1)\n        dummy_venusian = DummyVenusian()\n        dec.venusian = dummy_venusian\n\n        def foo():  # pragma: no cover\n            pass\n\n        dec(foo)\n        self.assertEqual(\n            dummy_venusian.attached, [(foo, dec.register, 'foo', 2)]\n        )"
}