{
  "test_name": "test__repr__directlyProvides_module",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
  "static_methods": [
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.addCleanup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "directlyProvides",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n    ):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare interfaces declared directly for an object.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 684
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "alsoProvides",
      "source_code": "    def alsoProvides(object, *interfaces):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare additional interfaces directly for an object.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 730
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "directlyProvides",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n    ):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare interfaces declared directly for an object.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 684
    },
    {
      "name": "self.addCleanup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "hasattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "self.addCleanup",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "directlyProvides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 684,
      "caller": "test__repr__directlyProvides_module",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "alsoProvides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 730,
      "caller": "test__repr__directlyProvides_module",
      "source_code": "    def alsoProvides(object, *interfaces):  # pylint:disable=redefined-builtin\n        \"\"\"\n        Declare additional interfaces directly for an object.\n\n        For example::\n\n          alsoProvides(ob, I1)\n\n        is equivalent to::\n\n          directlyProvides(ob, directlyProvidedBy(ob), I1)\n\n        .. seealso:: `zope.interface.alsoProvides`\n        \"\"\"\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "directlyProvides",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 684,
      "caller": "test__repr__directlyProvides_module",
      "source_code": "    def directlyProvides(\n        object, *interfaces,\n"
    },
    {
      "function": "self.addCleanup",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "self.assertIs",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "hasattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__repr__directlyProvides_module",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert not hasattr(my_module, '__provides__')"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test__repr__directlyProvides_module(self):\n        import sys\n\n        from zope.interface.declarations import alsoProvides\n        from zope.interface.declarations import directlyProvides\n        from zope.interface.interface import InterfaceClass\n        from zope.interface.tests import dummy\n\n        IFoo = InterfaceClass('IFoo')\n        IBar = InterfaceClass('IBar')\n\n        orig_provides = dummy.__provides__  # pylint:disable=no-member\n        del dummy.__provides__  # pylint:disable=no-member\n        self.addCleanup(setattr, dummy, '__provides__', orig_provides)\n\n        directlyProvides(dummy, IFoo)\n        provides = dummy.__provides__  # pylint:disable=no-member\n\n        self.assertEqual(\n            repr(provides),\n            \"directlyProvides(sys.modules['zope.interface.tests.dummy'], IFoo)\"\n        )\n\n        alsoProvides(dummy, IBar)\n        provides = dummy.__provides__  # pylint:disable=no-member\n\n        self.assertEqual(\n            repr(provides),\n            \"directlyProvides(\"\n            \"sys.modules['zope.interface.tests.dummy'], \"\n            \"IFoo, IBar)\"\n        )\n\n        # If we make this module also provide IFoo and IBar, then the repr\n        # lists both names.\n        my_module = sys.modules[__name__]\n        assert not hasattr(my_module, '__provides__')\n\n        directlyProvides(my_module, IFoo, IBar)\n        self.addCleanup(delattr, my_module, '__provides__')\n        self.assertIs(my_module.__provides__, provides)\n        self.assertEqual(\n            repr(provides),\n            \"directlyProvides(('zope.interface.tests.dummy', \"\n            \"'zope.interface.tests.test_declarations'), \"\n            \"IFoo, IBar)\"\n        )"
}