{
  "test_name": "test__uncached_subscriptions_components_miss_wrong_iface",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
  "static_methods": [
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "InterfaceClass",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeRegistry",
      "source_code": "    def _makeRegistry(self, depth):",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line_number": 1377
    },
    {
      "name": "self._makeSubregistry",
      "source_code": "    def _makeSubregistry(self, *provided):",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line_number": 1544
    },
    {
      "name": "object",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "registry.ro.append",
      "source_code": "    def append(\n        self, text: Union[\"Text\", str], style: Optional[Union[str, \"Style\"]] = None\n    ) -> \"Text\":\n        \"\"\"Add text with an optional style.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/text.py",
      "line_number": 917
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "alb._uncached_subscriptions",
      "source_code": "    def _uncached_subscriptions(self, required, provided):\n        required = tuple(required)\n        order = len(required)\n        result = []\n        for registry in reversed(self._registry.ro):\n            byorder = registry._subscribers\n            if order >= len(byorder):\n                continue",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/adapter.py",
      "line_number": 888
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": ""
    },
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": ""
    },
    {
      "function": "InterfaceClass",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": ""
    },
    {
      "function": "self._makeRegistry",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line": 1377,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": "    def _makeRegistry(self, depth):\n\n        class WithGeneration:\n            _generation = 1\n\n        class Registry:\n            def __init__(self, depth):\n                self.ro = [WithGeneration() for i in range(depth)]\n\n        return Registry(depth)\n\n"
    },
    {
      "function": "self._makeSubregistry",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_adapter.py",
      "line": 1544,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": "    def _makeSubregistry(self, *provided):\n\n        class Subregistry:\n            def __init__(self):\n                self._adapters = []\n                self._subscribers = []\n\n        return Subregistry()\n\n"
    },
    {
      "function": "object",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": ""
    },
    {
      "function": "registry.ro.append",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/text.py",
      "line": 917,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": "    def append(\n        self, text: Union[\"Text\", str], style: Optional[Union[str, \"Style\"]] = None\n"
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "alb._uncached_subscriptions",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/adapter.py",
      "line": 888,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": "    def _uncached_subscriptions(self, required, provided):\n        required = tuple(required)\n        order = len(required)\n        result = []\n        for registry in reversed(self._registry.ro):\n            byorder = registry._subscribers\n            if order >= len(byorder):\n                continue\n\n            if provided is None:\n                extendors = (provided, )\n            else:\n                extendors = registry._v_lookup._extendors.get(provided)\n                if extendors is None:\n                    continue\n\n            _subscriptions(byorder[order], required, extendors, '',\n                           result, 0, order)\n\n        self._subscribe(*required)\n\n        return result\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test__uncached_subscriptions_components_miss_wrong_iface",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test__uncached_subscriptions_components_miss_wrong_iface(self):\n        from zope.interface.interface import InterfaceClass\n        IFoo = InterfaceClass('IFoo')\n        IBar = InterfaceClass('IBar', (IFoo,))\n        IQux = InterfaceClass('IQux')\n        registry = self._makeRegistry(IFoo, IBar)\n        subr = self._makeSubregistry()\n        irrelevant = object()\n        subr._subscribers = [  # utilities, single adapters\n            {},\n            {IFoo: {IQux: {'': irrelevant}}},\n        ]\n        registry.ro.append(subr)\n        alb = self._makeOne(registry)\n        subr._v_lookup = alb\n        result = alb._uncached_subscriptions((IFoo,), IBar)\n        self.assertEqual(result, [])"
}