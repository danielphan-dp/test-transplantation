{
  "test_name": "test_acl",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_authorization.py",
  "static_methods": [
    {
      "name": "ACLHelper",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "helper.permits",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line_number": 60
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "ACLHelper",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "helper.permits",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/testing.py",
      "line": 60,
      "caller": "test_acl",
      "source_code": "    def permits(self, request, context, permission):\n        return self.permissive\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_acl",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_acl(self):\n        from pyramid.authorization import (\n            ALL_PERMISSIONS,\n            DENY_ALL,\n            ACLHelper,\n            Allow,\n            Authenticated,\n            Deny,\n            Everyone,\n        )\n\n        helper = ACLHelper()\n        root = DummyContext()\n        community = DummyContext(__name__='community', __parent__=root)\n        blog = DummyContext(__name__='blog', __parent__=community)\n        root.__acl__ = [(Allow, Authenticated, VIEW)]\n        community.__acl__ = [\n            (Allow, 'fred', ALL_PERMISSIONS),\n            (Allow, 'wilma', VIEW),\n            DENY_ALL,\n        ]\n        blog.__acl__ = [\n            (Allow, 'barney', MEMBER_PERMS),\n            (Allow, 'wilma', VIEW),\n        ]\n\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'wilma'], 'view'\n        )\n        self.assertEqual(result, True)\n        self.assertEqual(result.context, blog)\n        self.assertEqual(result.ace, (Allow, 'wilma', VIEW))\n        self.assertEqual(result.acl, blog.__acl__)\n\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'wilma'], 'delete'\n        )\n        self.assertEqual(result, False)\n        self.assertEqual(result.context, community)\n        self.assertEqual(result.ace, (Deny, Everyone, ALL_PERMISSIONS))\n        self.assertEqual(result.acl, community.__acl__)\n\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'fred'], 'view'\n        )\n        self.assertEqual(result, True)\n        self.assertEqual(result.context, community)\n        self.assertEqual(result.ace, (Allow, 'fred', ALL_PERMISSIONS))\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'fred'], 'doesntevenexistyet'\n        )\n        self.assertEqual(result, True)\n        self.assertEqual(result.context, community)\n        self.assertEqual(result.ace, (Allow, 'fred', ALL_PERMISSIONS))\n        self.assertEqual(result.acl, community.__acl__)\n\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'barney'], 'view'\n        )\n        self.assertEqual(result, True)\n        self.assertEqual(result.context, blog)\n        self.assertEqual(result.ace, (Allow, 'barney', MEMBER_PERMS))\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'barney'], 'administer'\n        )\n        self.assertEqual(result, False)\n        self.assertEqual(result.context, community)\n        self.assertEqual(result.ace, (Deny, Everyone, ALL_PERMISSIONS))\n        self.assertEqual(result.acl, community.__acl__)\n\n        result = helper.permits(\n            root, [Everyone, Authenticated, 'someguy'], 'view'\n        )\n        self.assertEqual(result, True)\n        self.assertEqual(result.context, root)\n        self.assertEqual(result.ace, (Allow, Authenticated, VIEW))\n        result = helper.permits(\n            blog, [Everyone, Authenticated, 'someguy'], 'view'\n        )\n        self.assertEqual(result, False)\n        self.assertEqual(result.context, community)\n        self.assertEqual(result.ace, (Deny, Everyone, ALL_PERMISSIONS))\n        self.assertEqual(result.acl, community.__acl__)\n\n        result = helper.permits(root, [Everyone], 'view')\n        self.assertEqual(result, False)\n        self.assertEqual(result.context, root)\n        self.assertEqual(result.ace, '<default deny>')\n        self.assertEqual(result.acl, root.__acl__)\n\n        context = DummyContext()\n        result = helper.permits(context, [Everyone], 'view')\n        self.assertEqual(result, False)\n        self.assertEqual(result.ace, '<default deny>')\n        self.assertEqual(\n            result.acl, '<No ACL found on any object in resource lineage>'\n        )"
}