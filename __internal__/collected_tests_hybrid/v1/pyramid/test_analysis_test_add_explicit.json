{
  "test_name": "test_add_explicit",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_tweens.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "tweens.add_explicit",
      "source_code": "    def add_explicit(self, name, factory):\n        self.explicit.append((name, factory))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/tweens.py",
      "line_number": 174
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "tweens.add_explicit",
      "source_code": "    def add_explicit(self, name, factory):\n        self.explicit.append((name, factory))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/tweens.py",
      "line_number": 174
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_add_explicit",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "tweens.add_explicit",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/tweens.py",
      "line": 174,
      "caller": "test_add_explicit",
      "source_code": "    def add_explicit(self, name, factory):\n        self.explicit.append((name, factory))\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_explicit",
      "source_code": ""
    },
    {
      "function": "tweens.add_explicit",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/tweens.py",
      "line": 174,
      "caller": "test_add_explicit",
      "source_code": "    def add_explicit(self, name, factory):\n        self.explicit.append((name, factory))\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_add_explicit",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_add_explicit(self):\n        tweens = self._makeOne()\n        tweens.add_explicit('name', 'factory')\n        self.assertEqual(tweens.explicit, [('name', 'factory')])\n        tweens.add_explicit('name2', 'factory2')\n        self.assertEqual(\n            tweens.explicit, [('name', 'factory'), ('name2', 'factory2')]\n        )"
}