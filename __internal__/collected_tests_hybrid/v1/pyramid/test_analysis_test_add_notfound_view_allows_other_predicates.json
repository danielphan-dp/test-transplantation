{
  "test_name": "test_add_notfound_view_allows_other_predicates",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_views.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "config.add_view_predicate",
      "source_code": "    def add_view_predicate(\n        self, name, factory, weighs_more_than=None, weighs_less_than=None\n    ):\n        \"\"\"\n        .. versionadded:: 1.4",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/views.py",
      "line_number": 1179
    },
    {
      "name": "config.add_notfound_view",
      "source_code": "    def add_notfound_view(\n        self,\n        view=None,\n        attr=None,\n        renderer=None,\n        wrapper=None,\n        route_name=None,\n        request_type=None,\n        request_method=None,\n        request_param=None,\n        containment=None,\n        xhr=None,\n        accept=None,\n        header=None,\n        path_info=None,\n        custom_predicates=(),\n        decorator=None,\n        mapper=None,\n        match_param=None,\n        append_slash=False,\n        **view_options,\n    ):\n        \"\"\"Add a default :term:`Not Found View` to the current configuration\n        state. The view will be called when Pyramid or application code raises\n        an :exc:`pyramid.httpexceptions.HTTPNotFound` exception (e.g., when a\n        view cannot be found for the request).  The simplest example is:",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/views.py",
      "line_number": 1695
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_add_notfound_view_allows_other_predicates",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "config.add_view_predicate",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/views.py",
      "line": 1179,
      "caller": "test_add_notfound_view_allows_other_predicates",
      "source_code": "    @action_method\n    def add_view_predicate(\n        self, name, factory, weighs_more_than=None, weighs_less_than=None\n"
    },
    {
      "function": "config.add_notfound_view",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/views.py",
      "line": 1695,
      "caller": "test_add_notfound_view_allows_other_predicates",
      "source_code": "    @viewdefaults\n    @action_method\n    def add_notfound_view(\n        self,\n        view=None,\n        attr=None,\n        renderer=None,\n        wrapper=None,\n        route_name=None,\n        request_type=None,\n        request_method=None,\n        request_param=None,\n        containment=None,\n        xhr=None,\n        accept=None,\n        header=None,\n        path_info=None,\n        custom_predicates=(),\n        decorator=None,\n        mapper=None,\n        match_param=None,\n        append_slash=False,\n        **view_options,\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_add_notfound_view_allows_other_predicates(self):\n        from pyramid.renderers import null_renderer\n\n        config = self._makeOne(autocommit=True)\n        # doesnt blow up\n        config.add_view_predicate('dummy', DummyPredicate)\n        config.add_notfound_view(renderer=null_renderer, dummy='abc')"
}