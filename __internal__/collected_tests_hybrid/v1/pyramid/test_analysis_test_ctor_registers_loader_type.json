{
  "test_name": "test_ctor_registers_loader_type",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_assets.py",
  "static_methods": [
    {
      "name": "DummyPkgResources",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyPackage",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyPkgResources",
      "filename": "",
      "line": 0,
      "caller": "test_ctor_registers_loader_type",
      "source_code": ""
    },
    {
      "function": "DummyPackage",
      "filename": "",
      "line": 0,
      "caller": "test_ctor_registers_loader_type",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_ctor_registers_loader_type",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_ctor_registers_loader_type",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_ctor_registers_loader_type(self):\n        from pyramid.config.assets import OverrideProvider\n\n        dummy_pkg_resources = DummyPkgResources()\n        package = DummyPackage('package')\n        po = self._makeOne(package, dummy_pkg_resources)\n        self.assertEqual(\n            dummy_pkg_resources.registered, [(po.__class__, OverrideProvider)]\n        )"
}