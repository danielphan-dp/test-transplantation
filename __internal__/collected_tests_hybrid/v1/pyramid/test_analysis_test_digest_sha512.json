{
  "test_name": "test_digest_sha512",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_authentication.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "ticket.digest",
      "source_code": "    def digest(self):\n        return calculate_digest(\n            self.ip,\n            self.time,\n            self.secret,\n            self.userid,\n            self.tokens,\n            self.user_data,\n            self.hashalg,\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/authentication.py",
      "line_number": 708
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_digest_sha512",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "ticket.digest",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/authentication.py",
      "line": 708,
      "caller": "test_digest_sha512",
      "source_code": "    def digest(self):\n        return calculate_digest(\n            self.ip,\n            self.time,\n            self.secret,\n            self.userid,\n            self.tokens,\n            self.user_data,\n            self.hashalg,\n        )\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_digest_sha512",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_digest_sha512(self):\n        ticket = self._makeOne(\n            'secret', 'userid', '0.0.0.0', time=10, hashalg='sha512'\n        )\n        result = ticket.digest()\n        self.assertEqual(\n            result,\n            '74770b2e0d5b1a54c2a466ec567a40f7d7823576aa49'\n            '3c65fc3445e9b44097f4a80410319ef8cb256a2e60b9'\n            'c2002e48a9e33a3e8ee4379352c04ef96d2cb278',\n        )"
}