{
  "test_name": "test_generator_functional_newstyle",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
  "static_methods": [
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "text_",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line_number": 26
    },
    {
      "name": "text_",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line_number": 26
    },
    {
      "name": "text_",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line_number": 26
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_newstyle",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "text_",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line": 26,
      "caller": "test_generator_functional_newstyle",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s\n\n"
    },
    {
      "function": "text_",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line": 26,
      "caller": "test_generator_functional_newstyle",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s\n\n"
    },
    {
      "function": "text_",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/webob/compat.py",
      "line": 26,
      "caller": "test_generator_functional_newstyle",
      "source_code": "def text_(s, encoding='latin-1', errors='strict'):\n    if isinstance(s, bytes):\n        return s.decode(encoding, errors)\n    return s\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_generator_functional_newstyle(self):\n        self.generates('/{x}', {'x': ''}, '/')\n        self.generates('/{x}', {'x': 'a'}, '/a')\n        self.generates('/{x}', {'x': 'a/b/c'}, '/a/b/c')\n        self.generates('/{x}', {'x': ':@&+$,'}, '/:@&+$,')\n        self.generates('zzz/{x}', {'x': 'abc'}, '/zzz/abc')\n        self.generates(\n            'zzz/{x}*traverse', {'x': 'abc', 'traverse': ''}, '/zzz/abc'\n        )\n        self.generates(\n            'zzz/{x}*traverse',\n            {'x': 'abc', 'traverse': '/def/g'},\n            '/zzz/abc/def/g',\n        )\n        self.generates(\n            'zzz/{x}*traverse',\n            {'x': ':@&+$,', 'traverse': '/:@&+$,'},\n            '/zzz/:@&+$,/:@&+$,',\n        )\n        self.generates(\n            '/{x}',\n            {'x': text_(b'/La Pe\\xc3\\xb1a', 'utf-8')},\n            '//La%20Pe%C3%B1a',\n        )\n        self.generates(\n            '/{x}*y',\n            {'x': text_(b'/La Pe\\xc3\\xb1a', 'utf-8'), 'y': '/rest/of/path'},\n            '//La%20Pe%C3%B1a/rest/of/path',\n        )\n        self.generates(\n            '*traverse',\n            {'traverse': ('a', text_(b'La Pe\\xf1a'))},\n            '/a/La%20Pe%C3%B1a',\n        )\n        self.generates('/foo/{id}.html', {'id': 'bar'}, '/foo/bar.html')\n        self.generates('/foo/{_}', {'_': '20'}, '/foo/20')\n        self.generates('/foo/{_abc}', {'_abc': '20'}, '/foo/20')\n        self.generates('/foo/{abc_def}', {'abc_def': '20'}, '/foo/20')"
}