{
  "test_name": "test_generator_functional_notdynamic",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
  "static_methods": [
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    },
    {
      "name": "self.generates",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line_number": 498
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_notdynamic",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    },
    {
      "function": "self.generates",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
      "line": 498,
      "caller": "test_generator_functional_notdynamic",
      "source_code": "    def generates(self, pattern, dict, result):\n        from pyramid.urldispatch import _compile_route\n\n        self.assertEqual(_compile_route(pattern)[1](dict), result)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_generator_functional_notdynamic(self):\n        self.generates('', {}, '/')\n        self.generates('/', {}, '/')"
}