{
  "test_name": "test_getAdapter_miss",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_registry.py",
  "static_methods": [
    {
      "name": "IFoo",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "IFoo",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "implementer",
      "source_code": "    def implementer(*interfaces):\n        \"\"\"\n        Create a decorator for declaring interfaces implemented by a\n        factory.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line_number": 630
    },
    {
      "name": "_Context",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertRaises",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "IFoo",
      "filename": "",
      "line": 0,
      "caller": "test_getAdapter_miss",
      "source_code": ""
    },
    {
      "function": "IFoo",
      "filename": "",
      "line": 0,
      "caller": "test_getAdapter_miss",
      "source_code": ""
    },
    {
      "function": "implementer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interfaces.py",
      "line": 630,
      "caller": "test_getAdapter_miss",
      "source_code": "    def implementer(*interfaces):\n        \"\"\"\n        Create a decorator for declaring interfaces implemented by a\n        factory.\n\n        A callable is returned that makes an implements declaration on\n        objects passed to it.\n\n        .. seealso:: :meth:`classImplements`\n        \"\"\"\n\n"
    },
    {
      "function": "_Context",
      "filename": "",
      "line": 0,
      "caller": "test_getAdapter_miss",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_getAdapter_miss",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertRaises",
      "filename": "",
      "line": 0,
      "caller": "test_getAdapter_miss",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_getAdapter_miss(self):\n        from zope.interface.declarations import InterfaceClass\n        from zope.interface.declarations import implementer\n        from zope.interface.interfaces import ComponentLookupError\n\n        class IFoo(InterfaceClass):\n            pass\n\n        ifoo = IFoo('IFoo')\n        ibar = IFoo('IBar')\n\n        @implementer(ibar)\n        class _Context:\n            pass\n\n        _context = _Context()\n        comp = self._makeOne()\n        self.assertRaises(ComponentLookupError,\n                          comp.getAdapter, _context, ifoo)"
}