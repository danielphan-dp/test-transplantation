{
  "test_name": "test_getDescriptionFor_hit",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Attribute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fromFunction",
      "source_code": "def fromFunction(func, interface=None, imlevel=0, name=None):\n    name = name or func.__name__\n    method = Method(name, func.__doc__)\n    defaults = getattr(func, '__defaults__', None) or ()\n    code = func.__code__\n    # Number of positional arguments\n    na = code.co_argcount - imlevel\n    names = code.co_varnames[imlevel:]\n    opt = {}\n    # Number of required arguments\n    defaults_count = len(defaults)\n    if not defaults_count:\n        # PyPy3 uses ``__defaults_count__`` for builtin methods\n        # like ``dict.pop``. Surprisingly, these don't have recorded\n        # ``__defaults__``\n        defaults_count = getattr(func, '__defaults_count__', 0)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 1092
    },
    {
      "name": "one.getDescriptionFor",
      "source_code": "    def getDescriptionFor(self, name):\n        \"\"\"Return the attribute description for the given name.\"\"\"\n        r = self.get(name)\n        if r is not None:\n            return r",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 876
    },
    {
      "name": "one.getDescriptionFor",
      "source_code": "    def getDescriptionFor(self, name):\n        \"\"\"Return the attribute description for the given name.\"\"\"\n        r = self.get(name)\n        if r is not None:\n            return r",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 876
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_getDescriptionFor_hit",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_getDescriptionFor_hit",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_getDescriptionFor_hit",
      "source_code": ""
    },
    {
      "function": "Attribute",
      "filename": "",
      "line": 0,
      "caller": "test_getDescriptionFor_hit",
      "source_code": ""
    },
    {
      "function": "fromFunction",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 1092,
      "caller": "test_getDescriptionFor_hit",
      "source_code": "def fromFunction(func, interface=None, imlevel=0, name=None):\n    name = name or func.__name__\n    method = Method(name, func.__doc__)\n    defaults = getattr(func, '__defaults__', None) or ()\n    code = func.__code__\n    # Number of positional arguments\n    na = code.co_argcount - imlevel\n    names = code.co_varnames[imlevel:]\n    opt = {}\n    # Number of required arguments\n    defaults_count = len(defaults)\n    if not defaults_count:\n        # PyPy3 uses ``__defaults_count__`` for builtin methods\n        # like ``dict.pop``. Surprisingly, these don't have recorded\n        # ``__defaults__``\n        defaults_count = getattr(func, '__defaults_count__', 0)\n\n    nr = na - defaults_count\n    if nr < 0:\n        defaults = defaults[-nr:]\n        nr = 0\n\n    # Determine the optional arguments.\n    opt.update(dict(zip(names[nr:], defaults)))\n\n    method.positional = names[:na]\n    method.required = names[:nr]\n    method.optional = opt\n\n    argno = na\n\n    # Determine the function's variable argument's name (i.e. *args)\n    if code.co_flags & CO_VARARGS:\n        method.varargs = names[argno]\n        argno = argno + 1\n    else:\n        method.varargs = None\n\n    # Determine the function's keyword argument's name (i.e. **kw)\n    if code.co_flags & CO_VARKEYWORDS:\n        method.kwargs = names[argno]\n    else:\n        method.kwargs = None\n\n    method.interface = interface\n\n    for key, value in func.__dict__.items():\n        method.setTaggedValue(key, value)\n\n    return method\n\n\n"
    },
    {
      "function": "one.getDescriptionFor",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 876,
      "caller": "test_getDescriptionFor_hit",
      "source_code": "    def getDescriptionFor(self, name):\n        \"\"\"Return the attribute description for the given name.\"\"\"\n        r = self.get(name)\n        if r is not None:\n            return r\n\n        raise KeyError(name)\n\n"
    },
    {
      "function": "one.getDescriptionFor",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 876,
      "caller": "test_getDescriptionFor_hit",
      "source_code": "    def getDescriptionFor(self, name):\n        \"\"\"Return the attribute description for the given name.\"\"\"\n        r = self.get(name)\n        if r is not None:\n            return r\n\n        raise KeyError(name)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_getDescriptionFor_hit(self):\n        from zope.interface.interface import Attribute\n        from zope.interface.interface import fromFunction\n\n        def _bar():\n            \"\"\"DOCSTRING\"\"\"\n\n        ATTRS = {\n            'foo': Attribute('Foo', ''),\n            'bar': fromFunction(_bar),\n        }\n        one = self._makeOne(attrs=ATTRS)\n        self.assertEqual(one.getDescriptionFor('foo'), ATTRS['foo'])\n        self.assertEqual(one.getDescriptionFor('bar'), ATTRS['bar'])"
}