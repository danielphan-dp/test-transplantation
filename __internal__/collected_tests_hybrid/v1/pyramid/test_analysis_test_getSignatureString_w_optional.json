{
  "test_name": "test_getSignatureString_w_optional",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "method.getSignatureString",
      "source_code": "    def getSignatureString(self):\n        sig = []\n        for v in self.positional:\n            sig.append(v)\n            if v in self.optional.keys():\n                sig[-1] += \"=\" + repr(self.optional[v])\n        if self.varargs:\n            sig.append(\"*\" + self.varargs)\n        if self.kwargs:\n            sig.append(\"**\" + self.kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 1076
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_getSignatureString_w_optional",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_getSignatureString_w_optional",
      "source_code": ""
    },
    {
      "function": "method.getSignatureString",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 1076,
      "caller": "test_getSignatureString_w_optional",
      "source_code": "    def getSignatureString(self):\n        sig = []\n        for v in self.positional:\n            sig.append(v)\n            if v in self.optional.keys():\n                sig[-1] += \"=\" + repr(self.optional[v])\n        if self.varargs:\n            sig.append(\"*\" + self.varargs)\n        if self.kwargs:\n            sig.append(\"**\" + self.kwargs)\n\n        return \"(%s)\" % \", \".join(sig)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_getSignatureString_w_optional(self):\n        method = self._makeOne()\n        method.positional = method.required = ['foo']\n        method.optional = {'foo': 'bar'}\n        self.assertEqual(method.getSignatureString(), \"(foo='bar')\")"
}