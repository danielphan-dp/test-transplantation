{
  "test_name": "test_inside_exec",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_advice.py",
  "static_methods": [
    {
      "name": "exec",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIsNone",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "exec",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_inside_exec",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_inside_exec",
      "source_code": ""
    },
    {
      "function": "self.assertIs",
      "filename": "",
      "line": 0,
      "caller": "test_inside_exec",
      "source_code": ""
    },
    {
      "function": "self.assertIsNone",
      "filename": "",
      "line": 0,
      "caller": "test_inside_exec",
      "source_code": ""
    },
    {
      "function": "self.assertIs",
      "filename": "",
      "line": 0,
      "caller": "test_inside_exec",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_inside_exec(self):\n        from zope.interface.advice import getFrameInfo\n        _globals = {'getFrameInfo': getFrameInfo}\n        _locals = {}\n        exec(_FUNKY_EXEC, _globals, _locals)\n        self.assertEqual(_locals['kind'], \"exec\")\n        self.assertIs(_locals['f_locals'], _locals)\n        self.assertIsNone(_locals['module'])\n        self.assertIs(_locals['f_globals'], _globals)"
}