{
  "test_name": "test_matcher_functional_notdynamic",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_urldispatch.py",
  "static_methods": [
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    },
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    },
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    },
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    },
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    },
    {
      "name": "self.matches",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n    ) -> bool:\n        \"\"\"\n        Method for quick testing of a parser against a test string. Good for simple\n        inline microtests of sub expressions while building up larger parser.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1927
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    },
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    },
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    },
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    },
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    },
    {
      "function": "self.matches",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1927,
      "caller": "test_matcher_functional_notdynamic",
      "source_code": "    def matches(\n        self, test_string: str, parse_all: bool = True, *, parseAll: bool = True\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_matcher_functional_notdynamic(self):\n        self.matches('/', '', None)\n        self.matches('', '', None)\n        self.matches('/', '/foo', None)\n        self.matches('/foo/', '/foo', None)\n        self.matches('', '/', {})\n        self.matches('/', '/', {})"
}