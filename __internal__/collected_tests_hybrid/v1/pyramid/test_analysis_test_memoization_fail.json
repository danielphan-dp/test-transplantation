{
  "test_name": "test_memoization_fail",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_path.py",
  "static_methods": [
    {
      "name": "DummyPackageOrModule",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "self.assertFalse",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "hasattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyPackageOrModule",
      "filename": "",
      "line": 0,
      "caller": "test_memoization_fail",
      "source_code": ""
    },
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_memoization_fail",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "self.assertFalse",
      "filename": "",
      "line": 0,
      "caller": "test_memoization_fail",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_memoization_fail",
      "source_code": ""
    },
    {
      "function": "hasattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_memoization_fail",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_memoization_fail(self):\n        from . import test_path\n\n        module = DummyPackageOrModule(test_path, raise_exc=TypeError)\n        result = self._callFUT(module)\n        self.assertFalse(hasattr(module, '__abspath__'))\n        self.assertEqual(result, module.package_path)"
}