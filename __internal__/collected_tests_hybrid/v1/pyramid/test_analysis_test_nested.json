{
  "test_name": "test_nested",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_sorting.py",
  "static_methods": [
    {
      "name": "self._makeI1",
      "source_code": "    def _makeI1(self):",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_sorting.py",
      "line_number": 72
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "hash",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeI1",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_sorting.py",
      "line": 72,
      "caller": "test_nested",
      "source_code": "    def _makeI1(self):\n\n        class I1(Interface):\n            pass\n\n        return I1\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_nested",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_nested",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_nested",
      "source_code": ""
    },
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_nested",
      "source_code": ""
    },
    {
      "function": "hash",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_nested",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_nested(self):\n        nested_I1 = self._makeI1()\n        self.assertEqual(I1, nested_I1)\n        self.assertEqual(nested_I1, I1)\n        self.assertEqual(hash(I1), hash(nested_I1))"
}