{
  "test_name": "test_one_base_optimization",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_ro.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertIsNotNone",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "c3.mro",
      "source_code": "    def mro(self):\n        return list(self.__mro)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/ro.py",
      "line_number": 251
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_one_base_optimization",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self.assertIsNotNone",
      "filename": "",
      "line": 0,
      "caller": "test_one_base_optimization",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_one_base_optimization",
      "source_code": ""
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_one_base_optimization",
      "source_code": ""
    },
    {
      "function": "c3.mro",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/ro.py",
      "line": 251,
      "caller": "test_one_base_optimization",
      "source_code": "    def mro(self):\n        return list(self.__mro)\n\n\n"
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_one_base_optimization",
      "source_code": ""
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_one_base_optimization",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_one_base_optimization(self):\n        c3 = self._makeOne(type(self))\n        # Even though we didn't call .mro() yet, the MRO has been\n        # computed.\n        self.assertIsNotNone(c3._C3__mro)  # pylint:disable=no-member\n        c3._merge = None\n        self.assertEqual(c3.mro(), list(type(self).__mro__))"
}