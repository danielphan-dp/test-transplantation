{
  "test_name": "test_original_ignore_files",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_scripts/test_pserve.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "dummy.DummyApp",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "inst.run",
      "source_code": "    def run(self) -> None:\n        while not self.done.wait(1 / self.refresh_per_second):\n            with self.live._lock:\n                if not self.done.is_set():\n                    self.live.refresh()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/live.py",
      "line_number": 28
    },
    {
      "name": "self.assertNotIn",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "dummy.DummyApp",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "inst.run",
      "source_code": "    def run(self) -> None:\n        while not self.done.wait(1 / self.refresh_per_second):\n            with self.live._lock:\n                if not self.done.is_set():\n                    self.live.refresh()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/live.py",
      "line_number": 28
    },
    {
      "name": "self.assertIn",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.out_.getvalue",
      "source_code": "        def getvalue(self):\n            return self.builder.build()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/msgpack/fallback.py",
      "line_number": 66
    },
    {
      "name": "self.out_.getvalue",
      "source_code": "        def getvalue(self):\n            return self.builder.build()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/msgpack/fallback.py",
      "line_number": 66
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_original_ignore_files",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "dummy.DummyApp",
      "filename": "",
      "line": 0,
      "caller": "test_original_ignore_files",
      "source_code": ""
    },
    {
      "function": "inst.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/live.py",
      "line": 28,
      "caller": "test_original_ignore_files",
      "source_code": "    def run(self) -> None:\n        while not self.done.wait(1 / self.refresh_per_second):\n            with self.live._lock:\n                if not self.done.is_set():\n                    self.live.refresh()\n\n\n"
    },
    {
      "function": "self.assertNotIn",
      "filename": "",
      "line": 0,
      "caller": "test_original_ignore_files",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_original_ignore_files",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "dummy.DummyApp",
      "filename": "",
      "line": 0,
      "caller": "test_original_ignore_files",
      "source_code": ""
    },
    {
      "function": "inst.run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/rich/live.py",
      "line": 28,
      "caller": "test_original_ignore_files",
      "source_code": "    def run(self) -> None:\n        while not self.done.wait(1 / self.refresh_per_second):\n            with self.live._lock:\n                if not self.done.is_set():\n                    self.live.refresh()\n\n\n"
    },
    {
      "function": "self.assertIn",
      "filename": "",
      "line": 0,
      "caller": "test_original_ignore_files",
      "source_code": ""
    },
    {
      "function": "self.out_.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/msgpack/fallback.py",
      "line": 66,
      "caller": "test_original_ignore_files",
      "source_code": "        def getvalue(self):\n            return self.builder.build()\n\n"
    },
    {
      "function": "self.out_.getvalue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/pip/_vendor/msgpack/fallback.py",
      "line": 66,
      "caller": "test_original_ignore_files",
      "source_code": "        def getvalue(self):\n            return self.builder.build()\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_original_ignore_files(self):\n        msg = 'A change to \"ignore_files\" was detected'\n\n        def get_app(name, global_conf):\n            app.name = name\n            app.global_conf = global_conf\n            return app\n\n        inst = self._makeOne('development.ini')\n        app = dummy.DummyApp()\n        self.loader.get_wsgi_app = get_app\n        self.loader.server = lambda x: x\n        self.loader.settings = {'pserve': {'ignore_files': '*.txt'}}\n        inst.run()\n        self.assertNotIn(msg, self.out_.getvalue())\n\n        inst = self._makeOne(\n            'development.ini', original_ignore_files={'*.txt'}\n        )\n        app = dummy.DummyApp()\n        self.loader.get_wsgi_app = get_app\n        self.loader.server = lambda x: x\n        self.loader.settings = {'pserve': {'ignore_files': 'foo/*.txt'}}\n        inst.run()\n        self.assertIn(msg, self.out_.getvalue())"
}