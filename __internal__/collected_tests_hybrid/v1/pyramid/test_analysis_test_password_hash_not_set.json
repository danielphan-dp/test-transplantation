{
  "test_name": "test_password_hash_not_set",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tests/test_user_model.py",
  "static_methods": [
    {
      "name": "models.User",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "user.check_password",
      "source_code": "    def check_password(self, pw):\n        if self.password_hash is not None:\n            expected_hash = self.password_hash.encode('utf8')\n            return bcrypt.checkpw(pw.encode('utf8'), expected_hash)\n        return False",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tutorial/models/user.py",
      "line_number": 21
    }
  ],
  "dynamic_methods": [
    {
      "function": "models.User",
      "filename": "",
      "line": 0,
      "caller": "test_password_hash_not_set",
      "source_code": ""
    },
    {
      "function": "user.check_password",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/docs/tutorials/wiki2/src/tests/tutorial/models/user.py",
      "line": 21,
      "caller": "test_password_hash_not_set",
      "source_code": "    def check_password(self, pw):\n        if self.password_hash is not None:\n            expected_hash = self.password_hash.encode('utf8')\n            return bcrypt.checkpw(pw.encode('utf8'), expected_hash)\n        return False\n\n"
    }
  ],
  "assertions": [
    "assert not user.check_password('secret')"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_password_hash_not_set():\n    user = models.User(name='foo', role='bar')\n    assert not user.check_password('secret')"
}