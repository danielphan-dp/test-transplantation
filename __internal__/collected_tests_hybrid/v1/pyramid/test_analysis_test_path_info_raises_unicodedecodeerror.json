{
  "test_name": "test_path_info_raises_unicodedecodeerror",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_traversal.py",
  "static_methods": [
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "DummyContext",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "self._getEnviron",
      "source_code": "    def _getEnviron(self, **kw):\n        environ = {}\n        environ.update(kw)\n        return environ",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_traversal.py",
      "line_number": 115
    },
    {
      "name": "UnicodeDecodeError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "DummyRequest",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertRaises",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": ""
    },
    {
      "function": "DummyContext",
      "filename": "",
      "line": 0,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": ""
    },
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "self._getEnviron",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_traversal.py",
      "line": 115,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": "    def _getEnviron(self, **kw):\n        environ = {}\n        environ.update(kw)\n        return environ\n\n"
    },
    {
      "function": "UnicodeDecodeError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": ""
    },
    {
      "function": "DummyRequest",
      "filename": "",
      "line": 0,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": ""
    },
    {
      "function": "self.assertRaises",
      "filename": "",
      "line": 0,
      "caller": "test_path_info_raises_unicodedecodeerror",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_path_info_raises_unicodedecodeerror(self):\n        from pyramid.exceptions import URLDecodeError\n\n        foo = DummyContext()\n        root = DummyContext(foo)\n        policy = self._makeOne(root)\n        environ = self._getEnviron()\n        toraise = UnicodeDecodeError('ascii', b'a', 2, 3, '5')\n        request = DummyRequest(environ, toraise=toraise)\n        request.matchdict = None\n        self.assertRaises(URLDecodeError, policy, request)"
}