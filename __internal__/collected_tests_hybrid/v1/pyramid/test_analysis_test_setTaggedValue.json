{
  "test_name": "test_setTaggedValue",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "element.setTaggedValue",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 120
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "element.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    },
    {
      "name": "element.queryTaggedValue",
      "source_code": "    def queryTaggedValue(self, tag, default=None):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        return self.__tagged_values.get(\n            tag, default,\n        ) if self.__tagged_values else default",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 110
    },
    {
      "name": "element.getTaggedValueTags",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 116
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_setTaggedValue",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "element.setTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 120,
      "caller": "test_setTaggedValue",
      "source_code": "    def setTaggedValue(self, tag, value):\n        \"\"\" Associates 'value' with 'key'. \"\"\"\n        if self.__tagged_values is None:\n            self.__tagged_values = {}\n        self.__tagged_values[tag] = value\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_setTaggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_setTaggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_setTaggedValue",
      "source_code": ""
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_setTaggedValue",
      "source_code": ""
    },
    {
      "function": "element.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_setTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    },
    {
      "function": "element.queryTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 110,
      "caller": "test_setTaggedValue",
      "source_code": "    def queryTaggedValue(self, tag, default=None):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        return self.__tagged_values.get(\n            tag, default,\n        ) if self.__tagged_values else default\n\n"
    },
    {
      "function": "element.getTaggedValueTags",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 116,
      "caller": "test_setTaggedValue",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_setTaggedValue(self):\n        element = self._makeOne()\n        element.setTaggedValue('foo', 'bar')\n        self.assertEqual(list(element.getTaggedValueTags()), ['foo'])\n        self.assertEqual(element.getTaggedValue('foo'), 'bar')\n        self.assertEqual(element.queryTaggedValue('foo'), 'bar')"
}