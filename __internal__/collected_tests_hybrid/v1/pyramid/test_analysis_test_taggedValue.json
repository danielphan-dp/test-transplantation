{
  "test_name": "test_taggedValue",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
  "static_methods": [
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertRaises",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Attribute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Attribute",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 58
    },
    {
      "name": "taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 58
    },
    {
      "name": "taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 58
    },
    {
      "name": "ITagged.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    },
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "IDerived2.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    },
    {
      "name": "IDerived2.getTaggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 104
    },
    {
      "name": "set",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ITagged.getTaggedValueTags",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 116
    },
    {
      "name": "IDerived2.getTaggedValueTags",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line_number": 116
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertRaises",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "Attribute",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "Attribute",
      "filename": "",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "taggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 58,
      "caller": "test_taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return\n\n\n"
    },
    {
      "function": "taggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 58,
      "caller": "test_taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return\n\n\n"
    },
    {
      "function": "taggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 58,
      "caller": "test_taggedValue",
      "source_code": "def taggedValue(key, value):\n    \"\"\"Attaches a tagged value to an interface at definition time.\"\"\"\n    f_locals = sys._getframe(1).f_locals\n    tagged_values = f_locals.setdefault(TAGGED_DATA, {})\n    tagged_values[key] = value\n    return _decorator_non_return\n\n\n"
    },
    {
      "function": "ITagged.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_taggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    },
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "IDerived2.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_taggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    },
    {
      "function": "IDerived2.getTaggedValue",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 104,
      "caller": "test_taggedValue",
      "source_code": "    def getTaggedValue(self, tag):\n        \"\"\" Returns the value associated with 'tag'. \"\"\"\n        if not self.__tagged_values:\n            raise KeyError(tag)\n        return self.__tagged_values[tag]\n\n"
    },
    {
      "function": "set",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_taggedValue",
      "source_code": ""
    },
    {
      "function": "ITagged.getTaggedValueTags",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 116,
      "caller": "test_taggedValue",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()\n\n"
    },
    {
      "function": "IDerived2.getTaggedValueTags",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/interface.py",
      "line": 116,
      "caller": "test_taggedValue",
      "source_code": "    def getTaggedValueTags(self):\n        \"\"\" Returns a collection of all tags. \"\"\"\n        return self.__tagged_values.keys() if self.__tagged_values else ()\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_taggedValue(self):\n        from zope.interface import Attribute\n        from zope.interface import Interface\n        from zope.interface import taggedValue\n\n        class ITagged(Interface):\n            foo = Attribute('foo')\n            bar = Attribute('bar; must eval to Boolean True if foo does')\n            taggedValue('qux', 'Spam')\n\n        class IDerived(ITagged):\n            taggedValue('qux', 'Spam Spam')\n            taggedValue('foo', 'bar')\n\n        class IDerived2(IDerived):\n            pass\n\n        self.assertEqual(ITagged.getTaggedValue('qux'), 'Spam')\n        self.assertRaises(KeyError, ITagged.getTaggedValue, 'foo')\n        self.assertEqual(list(ITagged.getTaggedValueTags()), ['qux'])\n\n        self.assertEqual(IDerived2.getTaggedValue('qux'), 'Spam Spam')\n        self.assertEqual(IDerived2.getTaggedValue('foo'), 'bar')\n        self.assertEqual(set(IDerived2.getTaggedValueTags()), {'qux', 'foo'})"
}