{
  "test_name": "test_testing_add_subscriber_dottedname",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/tests/test_config/test_testing.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line_number": 120
    },
    {
      "name": "config.testing_add_subscriber",
      "source_code": "    def testing_add_subscriber(self, event_iface=None):\n        \"\"\"Unit/integration testing helper: Registers a\n        :term:`subscriber` which listens for events of the type\n        ``event_iface``.  This method returns a list object which is\n        appended to by the subscriber whenever an event is captured.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/testing.py",
      "line_number": 110
    },
    {
      "name": "DummyEvent",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "config.registry.notify",
      "source_code": "    def notify(*arg, **kw):\n        pass",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/registry.py",
      "line_number": 22
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "config.registry.notify",
      "source_code": "    def notify(*arg, **kw):\n        pass",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/registry.py",
      "line_number": 22
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "object",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_interface.py",
      "line": 120,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": "    def _makeOne(self, name=None):\n        if name is None:\n            name = self.DEFAULT_NAME\n        return self._getTargetClass()(name)\n\n"
    },
    {
      "function": "config.testing_add_subscriber",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/src/pyramid/config/testing.py",
      "line": 110,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": "    @action_method\n    def testing_add_subscriber(self, event_iface=None):\n        \"\"\"Unit/integration testing helper: Registers a\n        :term:`subscriber` which listens for events of the type\n        ``event_iface``.  This method returns a list object which is\n        appended to by the subscriber whenever an event is captured.\n\n        When an event is dispatched that matches the value implied by\n        the ``event_iface`` argument, that event will be appended to\n        the list.  You can then compare the values in the list to\n        expected event notifications.  This method is useful when\n        testing code that wants to call\n        :meth:`pyramid.registry.Registry.notify`,\n        or :func:`zope.component.event.dispatch`.\n\n        The default value of ``event_iface`` (``None``) implies a\n        subscriber registered for *any* kind of event.\n        \"\"\"\n        event_iface = self.maybe_dotted(event_iface)\n        L = []\n\n        def subscriber(*event):\n            L.extend(event)\n\n        self.add_subscriber(subscriber, event_iface)\n        return L\n\n"
    },
    {
      "function": "DummyEvent",
      "filename": "",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "config.registry.notify",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/registry.py",
      "line": 22,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": "    def notify(*arg, **kw):\n        pass\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "config.registry.notify",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/registry.py",
      "line": 22,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": "    def notify(*arg, **kw):\n        pass\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "object",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_testing_add_subscriber_dottedname",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_testing_add_subscriber_dottedname(self):\n        config = self._makeOne(autocommit=True)\n        L = config.testing_add_subscriber('tests.test_config.IDummy')\n        event = DummyEvent()\n        config.registry.notify(event)\n        self.assertEqual(len(L), 1)\n        self.assertEqual(L[0], event)\n        config.registry.notify(object())\n        self.assertEqual(len(L), 1)"
}