{
  "test_name": "test_w_None_no_bases_w_class",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_declarations.py",
  "static_methods": [
    {
      "name": "self._callFUT",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line_number": 22
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIs",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIsInstance",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertIsInstance",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._callFUT",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/pyramid/venv/lib/python3.9/site-packages/zope/interface/tests/test_document.py",
      "line": 22,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": "    def _callFUT(self, iface):\n        from zope.interface.document import asStructuredText\n        return asStructuredText(iface)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    },
    {
      "function": "self.assertIs",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    },
    {
      "function": "self.assertIs",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    },
    {
      "function": "self.assertIsInstance",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    },
    {
      "function": "self.assertIsInstance",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_w_None_no_bases_w_class",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_w_None_no_bases_w_class(self):\n        from zope.interface.declarations import ClassProvides\n\n        class Foo:\n            __implemented__ = None\n\n        spec = self._callFUT(Foo)\n        self.assertEqual(spec.__name__,\n                         'zope.interface.tests.test_declarations.Foo')\n        self.assertIs(spec.inherit, Foo)\n        self.assertIs(Foo.__implemented__, spec)\n        self.assertIsInstance(\n            Foo.__providedBy__, ClassProvides\n        )  # pylint:disable=no-member\n        self.assertIsInstance(\n            Foo.__provides__, ClassProvides\n        )  # pylint:disable=no-member\n        self.assertEqual(\n            Foo.__provides__, Foo.__providedBy__\n        )"
}