{
  "test_name": "test_abi3_filename",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_build_ext.py",
  "static_methods": [
    {
      "name": "print",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "Extension",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "Distribution",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "build_ext",
      "source_code": "    def build_ext(self, *args, **kwargs):\n        return build_ext(*args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_build_ext.py",
      "line_number": 90
    },
    {
      "name": "get_abi3_suffix",
      "source_code": "def get_abi3_suffix():\n    \"\"\"Return the file extension for an abi3-compliant Extension()\"\"\"\n    for suffix in EXTENSION_SUFFIXES:\n        if '.abi3' in suffix:  # Unix\n            return suffix\n        elif suffix == '.pyd':  # Windows\n            return suffix\n    return None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/command/build_ext.py",
      "line_number": 81
    },
    {
      "name": "dict",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "get_abi3_suffix",
      "source_code": "def get_abi3_suffix():\n    \"\"\"Return the file extension for an abi3-compliant Extension()\"\"\"\n    for suffix in EXTENSION_SUFFIXES:\n        if '.abi3' in suffix:  # Unix\n            return suffix\n        elif suffix == '.pyd':  # Windows\n            return suffix\n    return None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/command/build_ext.py",
      "line_number": 81
    },
    {
      "name": "res.endswith",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "get_config_var",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line_number": 563
    },
    {
      "name": "res.endswith",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "print",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    },
    {
      "function": "Extension",
      "filename": "",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    },
    {
      "function": "Distribution",
      "filename": "",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    },
    {
      "function": "build_ext",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_build_ext.py",
      "line": 90,
      "caller": "test_abi3_filename",
      "source_code": "    def build_ext(self, *args, **kwargs):\n        return build_ext(*args, **kwargs)\n\n"
    },
    {
      "function": "get_abi3_suffix",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/command/build_ext.py",
      "line": 81,
      "caller": "test_abi3_filename",
      "source_code": "def get_abi3_suffix():\n    \"\"\"Return the file extension for an abi3-compliant Extension()\"\"\"\n    for suffix in EXTENSION_SUFFIXES:\n        if '.abi3' in suffix:  # Unix\n            return suffix\n        elif suffix == '.pyd':  # Windows\n            return suffix\n    return None\n\n\n"
    },
    {
      "function": "dict",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    },
    {
      "function": "get_abi3_suffix",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/command/build_ext.py",
      "line": 81,
      "caller": "test_abi3_filename",
      "source_code": "def get_abi3_suffix():\n    \"\"\"Return the file extension for an abi3-compliant Extension()\"\"\"\n    for suffix in EXTENSION_SUFFIXES:\n        if '.abi3' in suffix:  # Unix\n            return suffix\n        elif suffix == '.pyd':  # Windows\n            return suffix\n    return None\n\n\n"
    },
    {
      "function": "res.endswith",
      "filename": "",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    },
    {
      "function": "get_config_var",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line": 563,
      "caller": "test_abi3_filename",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings\n\n        warnings.warn('SO is deprecated, use EXT_SUFFIX', DeprecationWarning, 2)\n    return get_config_vars().get(name)\n\n\n"
    },
    {
      "function": "res.endswith",
      "filename": "",
      "line": 0,
      "caller": "test_abi3_filename",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert 'spam.eggs' in cmd.ext_map",
    "assert res.endswith(get_config_var('EXT_SUFFIX'))",
    "assert res.endswith('eggs.pyd')",
    "assert 'abi3' in res"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_abi3_filename(self):\n        \"\"\"\n        Filename needs to be loadable by several versions\n        of Python 3 if 'is_abi3' is truthy on Extension()\n        \"\"\"\n        print(get_abi3_suffix())\n\n        extension = Extension('spam.eggs', ['eggs.c'], py_limited_api=True)\n        dist = Distribution(dict(ext_modules=[extension]))\n        cmd = build_ext(dist)\n        cmd.finalize_options()\n        assert 'spam.eggs' in cmd.ext_map\n        res = cmd.get_ext_filename('spam.eggs')\n\n        if not get_abi3_suffix():\n            assert res.endswith(get_config_var('EXT_SUFFIX'))\n        elif sys.platform == 'win32':\n            assert res.endswith('eggs.pyd')\n        else:\n            assert 'abi3' in res"
}