{
  "test_name": "test_check_author_maintainer",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
  "static_methods": [
    {
      "name": "self._run",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line_number": 22
    },
    {
      "name": "self._run",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line_number": 22
    },
    {
      "name": "self._run",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line_number": 22
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line": 22,
      "caller": "test_check_author_maintainer",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd\n\n"
    },
    {
      "function": "self._run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line": 22,
      "caller": "test_check_author_maintainer",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd\n\n"
    },
    {
      "function": "self._run",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_check.py",
      "line": 22,
      "caller": "test_check_author_maintainer",
      "source_code": "    def _run(self, metadata=None, cwd=None, **options):\n        if metadata is None:\n            metadata = {}\n        if cwd is not None:\n            old_dir = os.getcwd()\n            os.chdir(cwd)\n        pkg_info, dist = self.create_dist(**metadata)\n        cmd = check(dist)\n        cmd.initialize_options()\n        for name, value in options.items():\n            setattr(cmd, name, value)\n        cmd.ensure_finalized()\n        cmd.run()\n        if cwd is not None:\n            os.chdir(old_dir)\n        return cmd\n\n"
    }
  ],
  "assertions": [
    "assert cmd._warnings == 0",
    "assert cmd._warnings == 0",
    "assert cmd._warnings == 0"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_check_author_maintainer(self):\n        for kind in (\"author\", \"maintainer\"):\n            # ensure no warning when author_email or maintainer_email is given\n            # (the spec allows these fields to take the form \"Name <email>\")\n            metadata = {\n                'url': 'xxx',\n                kind + '_email': 'Name <name@email.com>',\n                'name': 'xxx',\n                'version': 'xxx',\n            }\n            cmd = self._run(metadata)\n            assert cmd._warnings == 0\n\n            # the check should not warn if only email is given\n            metadata[kind + '_email'] = 'name@email.com'\n            cmd = self._run(metadata)\n            assert cmd._warnings == 0\n\n            # the check should not warn if only the name is given\n            metadata[kind] = \"Name\"\n            del metadata[kind + '_email']\n            cmd = self._run(metadata)\n            assert cmd._warnings == 0"
}