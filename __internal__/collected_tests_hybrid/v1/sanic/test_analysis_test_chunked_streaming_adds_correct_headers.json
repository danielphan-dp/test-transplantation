{
  "test_name": "test_chunked_streaming_adds_correct_headers",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_response.py",
  "static_methods": [
    {
      "name": "streaming_app.test_client.get",
      "source_code": "    def get(self, key, default=None):\n        \"\"\"Get first value matching the key.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 88
    }
  ],
  "dynamic_methods": [
    {
      "function": "streaming_app.test_client.get",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 88,
      "caller": "test_chunked_streaming_adds_correct_headers",
      "source_code": "    def get(self, key, default=None):\n        \"\"\"Get first value matching the key.\n\n        If the key is not found, returns the default (or None if no default is provided)\n        \"\"\"\n        return self.getone(key, default)\n\n"
    }
  ],
  "assertions": [
    "assert response.headers['Transfer-Encoding'] == 'chunked'",
    "assert response.headers['Content-Type'] == 'text/csv'",
    "assert 'Content-Length' not in response.headers"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_chunked_streaming_adds_correct_headers(streaming_app):\n    request, response = streaming_app.test_client.get(\"/\")\n    assert response.headers[\"Transfer-Encoding\"] == \"chunked\"\n    assert response.headers[\"Content-Type\"] == \"text/csv\"\n    # Content-Length is not allowed by HTTP/1.1 specification\n    # when \"Transfer-Encoding: chunked\" is used\n    assert \"Content-Length\" not in response.headers"
}