{
  "test_name": "test_cookie_jar_get_cookie",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_cookies.py",
  "static_methods": [
    {
      "name": "Header",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "CookieJar",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "jar.add_cookie",
      "source_code": "    def add_cookie(\n        self,\n        key: str,\n        value: str,\n        *,\n        path: str = \"/\",\n        domain: Optional[str] = None,\n        secure: bool = True,\n        max_age: Optional[int] = None,\n        expires: Optional[datetime] = None,\n        httponly: bool = False,\n        samesite: Optional[SameSite] = \"Lax\",\n        partitioned: bool = False,\n        comment: Optional[str] = None,\n        host_prefix: bool = False,\n        secure_prefix: bool = False,\n    ) -> Cookie:\n        \"\"\"Add a cookie to the CookieJar",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/response/types.py",
      "line_number": 127
    },
    {
      "name": "jar.add_cookie",
      "source_code": "    def add_cookie(\n        self,\n        key: str,\n        value: str,\n        *,\n        path: str = \"/\",\n        domain: Optional[str] = None,\n        secure: bool = True,\n        max_age: Optional[int] = None,\n        expires: Optional[datetime] = None,\n        httponly: bool = False,\n        samesite: Optional[SameSite] = \"Lax\",\n        partitioned: bool = False,\n        comment: Optional[str] = None,\n        host_prefix: bool = False,\n        secure_prefix: bool = False,\n    ) -> Cookie:\n        \"\"\"Add a cookie to the CookieJar",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/response/types.py",
      "line_number": 127
    },
    {
      "name": "jar.get_cookie",
      "source_code": "    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line_number": 453
    },
    {
      "name": "jar.get_cookie",
      "source_code": "    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line_number": 453
    },
    {
      "name": "jar.get_cookie",
      "source_code": "    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line_number": 453
    },
    {
      "name": "jar.get_cookie",
      "source_code": "    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line_number": 453
    }
  ],
  "dynamic_methods": [
    {
      "function": "Header",
      "filename": "",
      "line": 0,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": ""
    },
    {
      "function": "CookieJar",
      "filename": "",
      "line": 0,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": ""
    },
    {
      "function": "jar.add_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/response/types.py",
      "line": 127,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    def add_cookie(\n        self,\n        key: str,\n        value: str,\n        *,\n        path: str = \"/\",\n        domain: Optional[str] = None,\n        secure: bool = True,\n        max_age: Optional[int] = None,\n        expires: Optional[datetime] = None,\n        httponly: bool = False,\n        samesite: Optional[SameSite] = \"Lax\",\n        partitioned: bool = False,\n        comment: Optional[str] = None,\n        host_prefix: bool = False,\n        secure_prefix: bool = False,\n"
    },
    {
      "function": "jar.add_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/response/types.py",
      "line": 127,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    def add_cookie(\n        self,\n        key: str,\n        value: str,\n        *,\n        path: str = \"/\",\n        domain: Optional[str] = None,\n        secure: bool = True,\n        max_age: Optional[int] = None,\n        expires: Optional[datetime] = None,\n        httponly: bool = False,\n        samesite: Optional[SameSite] = \"Lax\",\n        partitioned: bool = False,\n        comment: Optional[str] = None,\n        host_prefix: bool = False,\n        secure_prefix: bool = False,\n"
    },
    {
      "function": "jar.get_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line": 453,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    @app.get(\"/cookie\")\n    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True\n\n        response.cookies[\"c2\"] = \"Cookie2\"\n        response.cookies[\"c2\"][\"httponly\"] = False\n\n        return response\n\n"
    },
    {
      "function": "jar.get_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line": 453,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    @app.get(\"/cookie\")\n    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True\n\n        response.cookies[\"c2\"] = \"Cookie2\"\n        response.cookies[\"c2\"][\"httponly\"] = False\n\n        return response\n\n"
    },
    {
      "function": "jar.get_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line": 453,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    @app.get(\"/cookie\")\n    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True\n\n        response.cookies[\"c2\"] = \"Cookie2\"\n        response.cookies[\"c2\"][\"httponly\"] = False\n\n        return response\n\n"
    },
    {
      "function": "jar.get_cookie",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_asgi.py",
      "line": 453,
      "caller": "test_cookie_jar_get_cookie",
      "source_code": "    @app.get(\"/cookie\")\n    def get_cookie(request):\n        response = text(\"There's a cookie up in this response\")\n        response.cookies[\"test\"] = \"Cookie1\"\n        response.cookies[\"test\"][\"httponly\"] = True\n\n        response.cookies[\"c2\"] = \"Cookie2\"\n        response.cookies[\"c2\"][\"httponly\"] = False\n\n        return response\n\n"
    }
  ],
  "assertions": [
    "assert jar.get_cookie('foo') is cookie1",
    "assert jar.get_cookie('foo', domain='example.com') is cookie2",
    "assert jar.get_cookie('foo', path='/unknown') is None",
    "assert jar.get_cookie('bar') is None"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_cookie_jar_get_cookie():\n    headers = Header()\n    jar = CookieJar(headers)\n    cookie1 = jar.add_cookie(\"foo\", \"one\")\n    cookie2 = jar.add_cookie(\"foo\", \"two\", domain=\"example.com\")\n\n    assert jar.get_cookie(\"foo\") is cookie1\n    assert jar.get_cookie(\"foo\", domain=\"example.com\") is cookie2\n    assert jar.get_cookie(\"foo\", path=\"/unknown\") is None\n    assert jar.get_cookie(\"bar\") is None"
}