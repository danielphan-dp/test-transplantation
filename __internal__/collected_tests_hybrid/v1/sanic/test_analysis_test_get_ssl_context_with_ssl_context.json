{
  "test_name": "test_get_ssl_context_with_ssl_context",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_tls.py",
  "static_methods": [
    {
      "name": "Mock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "get_ssl_context",
      "source_code": "def get_ssl_context(\n    app: Sanic, ssl: Optional[ssl.SSLContext]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/http/tls/creators.py",
      "line_number": 63
    }
  ],
  "dynamic_methods": [
    {
      "function": "Mock",
      "filename": "",
      "line": 0,
      "caller": "test_get_ssl_context_with_ssl_context",
      "source_code": ""
    },
    {
      "function": "get_ssl_context",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/http/tls/creators.py",
      "line": 63,
      "caller": "test_get_ssl_context_with_ssl_context",
      "source_code": "def get_ssl_context(\n    app: Sanic, ssl: Optional[ssl.SSLContext]\n"
    }
  ],
  "assertions": [
    "assert context is mock_context"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_get_ssl_context_with_ssl_context(app):\n    mock_context = Mock()\n    context = get_ssl_context(app, mock_context)\n    assert context is mock_context"
}