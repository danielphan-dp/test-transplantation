{
  "test_name": "test_install_requires_unordered_disallowed",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_egg_info.py",
  "static_methods": [
    {
      "name": "self._setup_script_with_requires",
      "source_code": "    def _setup_script_with_requires(self, requires, use_setup_cfg=False):\n        setup_script = DALS(\n            \"\"\"\n            from setuptools import setup",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_egg_info.py",
      "line_number": 249
    },
    {
      "name": "self._run_egg_info_command",
      "source_code": "    def _run_egg_info_command(self, tmpdir_cwd, env, cmd=None, output=None):\n        environ = os.environ.copy().update(\n            HOME=env.paths['home'],\n        )\n        if cmd is None:\n            cmd = [\n                'egg_info',\n            ]\n        code, data = environment.run_setup_py(\n            cmd=cmd,\n            pypath=os.pathsep.join([env.paths['lib'], str(tmpdir_cwd)]),\n            data_stream=1,\n            env=environ,\n        )\n        assert not code, data",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_egg_info.py",
      "line_number": 1227
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._setup_script_with_requires",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_egg_info.py",
      "line": 249,
      "caller": "test_install_requires_unordered_disallowed",
      "source_code": "    def _setup_script_with_requires(self, requires, use_setup_cfg=False):\n        setup_script = DALS(\n            \"\"\"\n            from setuptools import setup\n\n            setup(name='foo', zip_safe=False, %s)\n            \"\"\"\n        ) % ('' if use_setup_cfg else requires)\n        setup_config = requires if use_setup_cfg else ''\n        path.build({\n            'setup.py': setup_script,\n            'setup.cfg': setup_config,\n        })\n\n"
    },
    {
      "function": "self._run_egg_info_command",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_egg_info.py",
      "line": 1227,
      "caller": "test_install_requires_unordered_disallowed",
      "source_code": "    def _run_egg_info_command(self, tmpdir_cwd, env, cmd=None, output=None):\n        environ = os.environ.copy().update(\n            HOME=env.paths['home'],\n        )\n        if cmd is None:\n            cmd = [\n                'egg_info',\n            ]\n        code, data = environment.run_setup_py(\n            cmd=cmd,\n            pypath=os.pathsep.join([env.paths['lib'], str(tmpdir_cwd)]),\n            data_stream=1,\n            env=environ,\n        )\n        assert not code, data\n\n        if output:\n            assert output in data\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_install_requires_unordered_disallowed(self, tmpdir_cwd, env):\n        \"\"\"\n        Packages that pass unordered install_requires sequences\n        should be rejected as they produce non-deterministic\n        builds. See #458.\n        \"\"\"\n        req = 'install_requires={\"fake-factory==0.5.2\", \"pytz\"}'\n        self._setup_script_with_requires(req)\n        with pytest.raises(AssertionError):\n            self._run_egg_info_command(tmpdir_cwd, env)"
}