{
  "test_name": "test_is_entity_header",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_helpers.py",
  "static_methods": [
    {
      "name": "helpers.is_entity_header",
      "source_code": "def is_entity_header(header):\n    \"\"\"Checks if the given header is an Entity Header\"\"\"\n    return header.lower() in _ENTITY_HEADERS",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/helpers.py",
      "line_number": 127
    }
  ],
  "dynamic_methods": [
    {
      "function": "helpers.is_entity_header",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/sanic/helpers.py",
      "line": 127,
      "caller": "test_is_entity_header",
      "source_code": "def is_entity_header(header):\n    \"\"\"Checks if the given header is an Entity Header\"\"\"\n    return header.lower() in _ENTITY_HEADERS\n\n\n"
    }
  ],
  "assertions": [
    "assert helpers.is_entity_header(header) is expected"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_is_entity_header():\n    tests = (\n        (\"allow\", True),\n        (\"extension-header\", True),\n        (\"\", False),\n        (\"test\", False),\n    )\n    for header, expected in tests:\n        assert helpers.is_entity_header(header) is expected"
}