{
  "test_name": "test_metadata_check_option",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
  "static_methods": [
    {
      "name": "self.get_cmd",
      "source_code": "    def get_cmd(self, metadata=None):\n        \"\"\"Returns a cmd\"\"\"\n        if metadata is None:\n            metadata = {\n                'name': 'ns.fake--pkg',\n                'version': '1.0',\n                'url': 'xxx',\n                'author': 'xxx',\n                'author_email': 'xxx',\n            }\n        dist = Distribution(metadata)\n        dist.script_name = 'setup.py'\n        dist.packages = ['somecode']\n        dist.include_package_data = True\n        cmd = sdist(dist)\n        cmd.dist_dir = 'dist'\n        return dist, cmd",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line_number": 71
    },
    {
      "name": "caplog.clear",
      "source_code": "    def clear(self):\n        \"\"\"Remove all items from MultiDict.\"\"\"\n        self._impl._items.clear()\n        self._impl.incr_version()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 271
    },
    {
      "name": "self.get_cmd",
      "source_code": "    def get_cmd(self, metadata=None):\n        \"\"\"Returns a cmd\"\"\"\n        if metadata is None:\n            metadata = {\n                'name': 'ns.fake--pkg',\n                'version': '1.0',\n                'url': 'xxx',\n                'author': 'xxx',\n                'author_email': 'xxx',\n            }\n        dist = Distribution(metadata)\n        dist.script_name = 'setup.py'\n        dist.packages = ['somecode']\n        dist.include_package_data = True\n        cmd = sdist(dist)\n        cmd.dist_dir = 'dist'\n        return dist, cmd",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line_number": 71
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "self.warnings",
      "source_code": "    def warnings(messages, prefix='warning: '):\n        return [msg for msg in messages if msg.startswith(prefix)]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line_number": 255
    },
    {
      "name": "self.warnings",
      "source_code": "    def warnings(messages, prefix='warning: '):\n        return [msg for msg in messages if msg.startswith(prefix)]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line_number": 255
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.get_cmd",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line": 71,
      "caller": "test_metadata_check_option",
      "source_code": "    def get_cmd(self, metadata=None):\n        \"\"\"Returns a cmd\"\"\"\n        if metadata is None:\n            metadata = {\n                'name': 'ns.fake--pkg',\n                'version': '1.0',\n                'url': 'xxx',\n                'author': 'xxx',\n                'author_email': 'xxx',\n            }\n        dist = Distribution(metadata)\n        dist.script_name = 'setup.py'\n        dist.packages = ['somecode']\n        dist.include_package_data = True\n        cmd = sdist(dist)\n        cmd.dist_dir = 'dist'\n        return dist, cmd\n\n"
    },
    {
      "function": "caplog.clear",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 271,
      "caller": "test_metadata_check_option",
      "source_code": "    def clear(self):\n        \"\"\"Remove all items from MultiDict.\"\"\"\n        self._impl._items.clear()\n        self._impl.incr_version()\n\n"
    },
    {
      "function": "self.get_cmd",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line": 71,
      "caller": "test_metadata_check_option",
      "source_code": "    def get_cmd(self, metadata=None):\n        \"\"\"Returns a cmd\"\"\"\n        if metadata is None:\n            metadata = {\n                'name': 'ns.fake--pkg',\n                'version': '1.0',\n                'url': 'xxx',\n                'author': 'xxx',\n                'author_email': 'xxx',\n            }\n        dist = Distribution(metadata)\n        dist.script_name = 'setup.py'\n        dist.packages = ['somecode']\n        dist.include_package_data = True\n        cmd = sdist(dist)\n        cmd.dist_dir = 'dist'\n        return dist, cmd\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_metadata_check_option",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_metadata_check_option",
      "source_code": ""
    },
    {
      "function": "self.warnings",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line": 255,
      "caller": "test_metadata_check_option",
      "source_code": "    @staticmethod\n    def warnings(messages, prefix='warning: '):\n        return [msg for msg in messages if msg.startswith(prefix)]\n\n"
    },
    {
      "function": "self.warnings",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sdist.py",
      "line": 255,
      "caller": "test_metadata_check_option",
      "source_code": "    @staticmethod\n    def warnings(messages, prefix='warning: '):\n        return [msg for msg in messages if msg.startswith(prefix)]\n\n"
    }
  ],
  "assertions": [
    "assert len(self.warnings(caplog.messages, 'warning: check: ')) == 1",
    "assert len(self.warnings(caplog.messages, 'warning: check: ')) == 0"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_metadata_check_option(self, caplog):\n        # testing the `medata-check` option\n        dist, cmd = self.get_cmd(metadata={})\n\n        # this should raise some warnings !\n        # with the `check` subcommand\n        cmd.ensure_finalized()\n        cmd.run()\n        assert len(self.warnings(caplog.messages, 'warning: check: ')) == 1\n\n        # trying with a complete set of metadata\n        caplog.clear()\n        dist, cmd = self.get_cmd()\n        cmd.ensure_finalized()\n        cmd.metadata_check = 0\n        cmd.run()\n        assert len(self.warnings(caplog.messages, 'warning: check: ')) == 0"
}