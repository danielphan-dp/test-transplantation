{
  "test_name": "test_mk_cert_creator_default",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_tls.py",
  "static_methods": [
    {
      "name": "MkcertCreator",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "cert_creator.tmpdir.exists",
      "source_code": "    def exists(self):\n        path = os.path.join(self.dirname, self.filename)\n        return os.path.isfile(path)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/distlib/wheel.py",
      "line_number": 234
    }
  ],
  "dynamic_methods": [
    {
      "function": "MkcertCreator",
      "filename": "",
      "line": 0,
      "caller": "test_mk_cert_creator_default",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_mk_cert_creator_default",
      "source_code": ""
    },
    {
      "function": "cert_creator.tmpdir.exists",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/distlib/wheel.py",
      "line": 234,
      "caller": "test_mk_cert_creator_default",
      "source_code": "    @property\n    def exists(self):\n        path = os.path.join(self.dirname, self.filename)\n        return os.path.isfile(path)\n\n"
    }
  ],
  "assertions": [
    "assert isinstance(cert_creator.tmpdir, Path)",
    "assert cert_creator.tmpdir.exists()"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_mk_cert_creator_default(app: Sanic):\n    cert_creator = MkcertCreator(app, _default, _default)\n    assert isinstance(cert_creator.tmpdir, Path)\n    assert cert_creator.tmpdir.exists()"
}