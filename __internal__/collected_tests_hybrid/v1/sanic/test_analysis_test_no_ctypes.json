{
  "test_name": "test_no_ctypes",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_bdist_wheel.py",
  "static_methods": [
    {
      "name": "suppress",
      "source_code": "    def suppress(self) -> \"ParserElement\":\n        \"\"\"\n        Suppresses the output of this :class:`ParserElement`; useful to keep punctuation from\n        cluttering up returned output.\n        \"\"\"\n        return Suppress(self)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1683
    },
    {
      "name": "monkeypatch.setattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "monkeypatch.delitem",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "suppress",
      "source_code": "    def suppress(self) -> \"ParserElement\":\n        \"\"\"\n        Suppresses the output of this :class:`ParserElement`; useful to keep punctuation from\n        cluttering up returned output.\n        \"\"\"\n        return Suppress(self)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line_number": 1683
    },
    {
      "name": "monkeypatch.delitem",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ModuleNotFoundError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "suppress",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1683,
      "caller": "test_no_ctypes",
      "source_code": "    def suppress(self) -> \"ParserElement\":\n        \"\"\"\n        Suppresses the output of this :class:`ParserElement`; useful to keep punctuation from\n        cluttering up returned output.\n        \"\"\"\n        return Suppress(self)\n\n"
    },
    {
      "function": "monkeypatch.setattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_no_ctypes",
      "source_code": ""
    },
    {
      "function": "monkeypatch.delitem",
      "filename": "",
      "line": 0,
      "caller": "test_no_ctypes",
      "source_code": ""
    },
    {
      "function": "suppress",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/pyparsing/core.py",
      "line": 1683,
      "caller": "test_no_ctypes",
      "source_code": "    def suppress(self) -> \"ParserElement\":\n        \"\"\"\n        Suppresses the output of this :class:`ParserElement`; useful to keep punctuation from\n        cluttering up returned output.\n        \"\"\"\n        return Suppress(self)\n\n"
    },
    {
      "function": "monkeypatch.delitem",
      "filename": "",
      "line": 0,
      "caller": "test_no_ctypes",
      "source_code": ""
    },
    {
      "function": "ModuleNotFoundError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_no_ctypes",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_no_ctypes(monkeypatch) -> None:\n    def _fake_import(name: str, *args, **kwargs):\n        if name == \"ctypes\":\n            raise ModuleNotFoundError(f\"No module named {name}\")\n\n        return importlib.__import__(name, *args, **kwargs)\n\n    with suppress(KeyError):\n        monkeypatch.delitem(sys.modules, \"wheel.macosx_libfile\")\n\n    # Install an importer shim that refuses to load ctypes\n    monkeypatch.setattr(builtins, \"__import__\", _fake_import)\n    with pytest.raises(ModuleNotFoundError, match=\"No module named ctypes\"):\n        import wheel.macosx_libfile  # noqa: F401\n\n    # Unload and reimport the bdist_wheel command module to make sure it won't try to\n    # import ctypes\n    monkeypatch.delitem(sys.modules, \"setuptools.command.bdist_wheel\")\n\n    import setuptools.command.bdist_wheel"
}