{
  "test_name": "test_response_handler_cancelled",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/tests/test_response_timeout.py",
  "static_methods": [
    {
      "name": "response_handler_cancelled_app.test_client.get",
      "source_code": "    def get(self, key, default=None):\n        \"\"\"Get first value matching the key.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line_number": 88
    }
  ],
  "dynamic_methods": [
    {
      "function": "response_handler_cancelled_app.test_client.get",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/multidict/_multidict_py.py",
      "line": 88,
      "caller": "test_response_handler_cancelled",
      "source_code": "    def get(self, key, default=None):\n        \"\"\"Get first value matching the key.\n\n        If the key is not found, returns the default (or None if no default is provided)\n        \"\"\"\n        return self.getone(key, default)\n\n"
    }
  ],
  "assertions": [
    "assert response.status == 503",
    "assert 'Response Timeout' in response.text",
    "assert response_handler_cancelled_app.ctx.flag is False"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_response_handler_cancelled(response_handler_cancelled_app):\n    request, response = response_handler_cancelled_app.test_client.get(\"/1\")\n    assert response.status == 503\n    assert \"Response Timeout\" in response.text\n    assert response_handler_cancelled_app.ctx.flag is False"
}