{
  "test_name": "test_rfc822_unescape",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/tests/test_core_metadata.py",
  "static_methods": [
    {
      "name": "rfc822_unescape",
      "source_code": "def rfc822_unescape(content: str) -> str:\n    \"\"\"Reverse RFC-822 escaping by removing leading whitespaces from content.\"\"\"\n    lines = content.splitlines()\n    if len(lines) == 1:\n        return lines[0].lstrip()\n    return '\\n'.join((lines[0].lstrip(), textwrap.dedent('\\n'.join(lines[1:]))))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_core_metadata.py",
      "line_number": 35
    },
    {
      "name": "rfc822_escape",
      "source_code": "def rfc822_escape(header):\n    \"\"\"Return a version of the string escaped for inclusion in an\n    RFC-822 header, by ensuring there are 8 spaces space after each newline.\n    \"\"\"\n    indent = 8 * \" \"\n    lines = header.splitlines(keepends=True)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/util.py",
      "line_number": 484
    }
  ],
  "dynamic_methods": [
    {
      "function": "rfc822_unescape",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_core_metadata.py",
      "line": 35,
      "caller": "test_rfc822_unescape",
      "source_code": "def rfc822_unescape(content: str) -> str:\n    \"\"\"Reverse RFC-822 escaping by removing leading whitespaces from content.\"\"\"\n    lines = content.splitlines()\n    if len(lines) == 1:\n        return lines[0].lstrip()\n    return '\\n'.join((lines[0].lstrip(), textwrap.dedent('\\n'.join(lines[1:]))))\n\n\n"
    },
    {
      "function": "rfc822_escape",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/util.py",
      "line": 484,
      "caller": "test_rfc822_unescape",
      "source_code": "def rfc822_escape(header):\n    \"\"\"Return a version of the string escaped for inclusion in an\n    RFC-822 header, by ensuring there are 8 spaces space after each newline.\n    \"\"\"\n    indent = 8 * \" \"\n    lines = header.splitlines(keepends=True)\n\n    # Emulate the behaviour of `str.split`\n    # (the terminal line break in `splitlines` does not result in an extra line):\n    ends_in_newline = lines and lines[-1].splitlines()[0] != lines[-1]\n    suffix = indent if ends_in_newline else \"\"\n\n    return indent.join(lines) + suffix\n\n\n"
    }
  ],
  "assertions": [
    "assert (result or content) == rfc822_unescape(rfc822_escape(content))"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_rfc822_unescape(content, result):\n    assert (result or content) == rfc822_unescape(rfc822_escape(content))"
}