{
  "test_name": "test_strtobool",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_util.py",
  "static_methods": [
    {
      "name": "strtobool",
      "source_code": "def strtobool(val: str) -> int:\n    \"\"\"Convert a string representation of truth to true (1) or false (0).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/utils/misc.py",
      "line_number": 214
    },
    {
      "name": "strtobool",
      "source_code": "def strtobool(val: str) -> int:\n    \"\"\"Convert a string representation of truth to true (1) or false (0).",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/utils/misc.py",
      "line_number": 214
    }
  ],
  "dynamic_methods": [
    {
      "function": "strtobool",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/utils/misc.py",
      "line": 214,
      "caller": "test_strtobool",
      "source_code": "def strtobool(val: str) -> int:\n    \"\"\"Convert a string representation of truth to true (1) or false (0).\n\n    True values are 'y', 'yes', 't', 'true', 'on', and '1'; false values\n    are 'n', 'no', 'f', 'false', 'off', and '0'.  Raises ValueError if\n    'val' is anything else.\n    \"\"\"\n    val = val.lower()\n    if val in (\"y\", \"yes\", \"t\", \"true\", \"on\", \"1\"):\n        return 1\n    elif val in (\"n\", \"no\", \"f\", \"false\", \"off\", \"0\"):\n        return 0\n    else:\n        raise ValueError(f\"invalid truth value {val!r}\")\n\n\n"
    },
    {
      "function": "strtobool",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_internal/utils/misc.py",
      "line": 214,
      "caller": "test_strtobool",
      "source_code": "def strtobool(val: str) -> int:\n    \"\"\"Convert a string representation of truth to true (1) or false (0).\n\n    True values are 'y', 'yes', 't', 'true', 'on', and '1'; false values\n    are 'n', 'no', 'f', 'false', 'off', and '0'.  Raises ValueError if\n    'val' is anything else.\n    \"\"\"\n    val = val.lower()\n    if val in (\"y\", \"yes\", \"t\", \"true\", \"on\", \"1\"):\n        return 1\n    elif val in (\"n\", \"no\", \"f\", \"false\", \"off\", \"0\"):\n        return 0\n    else:\n        raise ValueError(f\"invalid truth value {val!r}\")\n\n\n"
    }
  ],
  "assertions": [
    "assert strtobool(y)",
    "assert not strtobool(n)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_strtobool(self):\n        yes = ('y', 'Y', 'yes', 'True', 't', 'true', 'True', 'On', 'on', '1')\n        no = ('n', 'no', 'f', 'false', 'off', '0', 'Off', 'No', 'N')\n\n        for y in yes:\n            assert strtobool(y)\n\n        for n in no:\n            assert not strtobool(n)"
}