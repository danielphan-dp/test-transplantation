{
  "test_name": "test_sysconfig_compiler_vars",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_sysconfig.py",
  "static_methods": [
    {
      "name": "global_sysconfig.get_config_var",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line_number": 563
    },
    {
      "name": "global_sysconfig.get_config_var",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line_number": 563
    }
  ],
  "dynamic_methods": [
    {
      "function": "global_sysconfig.get_config_var",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line": 563,
      "caller": "test_sysconfig_compiler_vars",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings\n\n        warnings.warn('SO is deprecated, use EXT_SUFFIX', DeprecationWarning, 2)\n    return get_config_vars().get(name)\n\n\n"
    },
    {
      "function": "global_sysconfig.get_config_var",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/sysconfig.py",
      "line": 563,
      "caller": "test_sysconfig_compiler_vars",
      "source_code": "def get_config_var(name):\n    \"\"\"Return the value of a single variable using the dictionary\n    returned by 'get_config_vars()'.  Equivalent to\n    get_config_vars().get(name)\n    \"\"\"\n    if name == 'SO':\n        import warnings\n\n        warnings.warn('SO is deprecated, use EXT_SUFFIX', DeprecationWarning, 2)\n    return get_config_vars().get(name)\n\n\n"
    }
  ],
  "assertions": [
    "assert global_sysconfig.get_config_var('LDSHARED') == sysconfig.get_config_var('LDSHARED')",
    "assert global_sysconfig.get_config_var('CC') == sysconfig.get_config_var('CC')"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_sysconfig_compiler_vars(self):\n        import sysconfig as global_sysconfig\n\n        if sysconfig.get_config_var('CUSTOMIZED_OSX_COMPILER'):\n            pytest.skip('compiler flags customized')\n        assert global_sysconfig.get_config_var('LDSHARED') == sysconfig.get_config_var(\n            'LDSHARED'\n        )\n        assert global_sysconfig.get_config_var('CC') == sysconfig.get_config_var('CC')"
}