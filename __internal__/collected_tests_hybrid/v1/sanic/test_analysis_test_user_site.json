{
  "test_name": "test_user_site",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_build_ext.py",
  "static_methods": [
    {
      "name": "Distribution",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.build_ext",
      "source_code": "    def build_ext(self, *args, **kwargs):\n        return build_ext(*args, **kwargs)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_build_ext.py",
      "line_number": 90
    }
  ],
  "dynamic_methods": [
    {
      "function": "Distribution",
      "filename": "",
      "line": 0,
      "caller": "test_user_site",
      "source_code": ""
    },
    {
      "function": "self.build_ext",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/setuptools/_distutils/tests/test_build_ext.py",
      "line": 90,
      "caller": "test_user_site",
      "source_code": "    def build_ext(self, *args, **kwargs):\n        return build_ext(*args, **kwargs)\n\n"
    }
  ],
  "assertions": [
    "assert 'user' in options",
    "assert lib in cmd.library_dirs",
    "assert lib in cmd.rpath",
    "assert incl in cmd.include_dirs"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_user_site(self):\n        import site\n\n        dist = Distribution({'name': 'xx'})\n        cmd = self.build_ext(dist)\n\n        # making sure the user option is there\n        options = [name for name, short, label in cmd.user_options]\n        assert 'user' in options\n\n        # setting a value\n        cmd.user = True\n\n        # setting user based lib and include\n        lib = os.path.join(site.USER_BASE, 'lib')\n        incl = os.path.join(site.USER_BASE, 'include')\n        os.mkdir(lib)\n        os.mkdir(incl)\n\n        # let's run finalize\n        cmd.ensure_finalized()\n\n        # see if include_dirs and library_dirs\n        # were set\n        assert lib in cmd.library_dirs\n        assert lib in cmd.rpath\n        assert incl in cmd.include_dirs"
}