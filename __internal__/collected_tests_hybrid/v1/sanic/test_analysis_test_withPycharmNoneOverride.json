{
  "test_name": "test_withPycharmNoneOverride",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
  "static_methods": [
    {
      "name": "pycharm",
      "source_code": "def pycharm():\n    os.environ[\"PYCHARM_HOSTED\"] = \"1\"\n    non_tty = StreamNonTTY()\n    with replace_by(non_tty), replace_original_by(non_tty):\n        yield\n    del os.environ[\"PYCHARM_HOSTED\"]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 44
    },
    {
      "name": "replace_by",
      "source_code": "def replace_by(stream):\n    orig_stdout = sys.stdout\n    orig_stderr = sys.stderr\n    sys.stdout = stream\n    sys.stderr = stream\n    yield\n    sys.stdout = orig_stdout\n    sys.stderr = orig_stderr",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 24
    },
    {
      "name": "replace_original_by",
      "source_code": "def replace_original_by(stream):\n    orig_stdout = sys.__stdout__\n    orig_stderr = sys.__stderr__\n    sys.__stdout__ = stream\n    sys.__stderr__ = stream\n    yield\n    sys.__stdout__ = orig_stdout\n    sys.__stderr__ = orig_stderr",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 34
    },
    {
      "name": "pycharm",
      "source_code": "def pycharm():\n    os.environ[\"PYCHARM_HOSTED\"] = \"1\"\n    non_tty = StreamNonTTY()\n    with replace_by(non_tty), replace_original_by(non_tty):\n        yield\n    del os.environ[\"PYCHARM_HOSTED\"]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 44
    },
    {
      "name": "replace_by",
      "source_code": "def replace_by(stream):\n    orig_stdout = sys.stdout\n    orig_stderr = sys.stderr\n    sys.stdout = stream\n    sys.stderr = stream\n    yield\n    sys.stdout = orig_stdout\n    sys.stderr = orig_stderr",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 24
    },
    {
      "name": "replace_original_by",
      "source_code": "def replace_original_by(stream):\n    orig_stdout = sys.__stdout__\n    orig_stderr = sys.__stderr__\n    sys.__stdout__ = stream\n    sys.__stderr__ = stream\n    yield\n    sys.__stdout__ = orig_stdout\n    sys.__stderr__ = orig_stderr",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line_number": 34
    },
    {
      "name": "self.assertFalse",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertFalse",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "is_a_tty",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line_number": 9
    },
    {
      "name": "is_a_tty",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line_number": 9
    },
    {
      "name": "is_a_tty",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line_number": 9
    },
    {
      "name": "StreamNonTTY",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "StreamTTY",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "pycharm",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 44,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef pycharm():\n    os.environ[\"PYCHARM_HOSTED\"] = \"1\"\n    non_tty = StreamNonTTY()\n    with replace_by(non_tty), replace_original_by(non_tty):\n        yield\n    del os.environ[\"PYCHARM_HOSTED\"]\n"
    },
    {
      "function": "replace_by",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 24,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef replace_by(stream):\n    orig_stdout = sys.stdout\n    orig_stderr = sys.stderr\n    sys.stdout = stream\n    sys.stderr = stream\n    yield\n    sys.stdout = orig_stdout\n    sys.stderr = orig_stderr\n\n"
    },
    {
      "function": "replace_original_by",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 34,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef replace_original_by(stream):\n    orig_stdout = sys.__stdout__\n    orig_stderr = sys.__stderr__\n    sys.__stdout__ = stream\n    sys.__stderr__ = stream\n    yield\n    sys.__stdout__ = orig_stdout\n    sys.__stderr__ = orig_stderr\n\n"
    },
    {
      "function": "pycharm",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 44,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef pycharm():\n    os.environ[\"PYCHARM_HOSTED\"] = \"1\"\n    non_tty = StreamNonTTY()\n    with replace_by(non_tty), replace_original_by(non_tty):\n        yield\n    del os.environ[\"PYCHARM_HOSTED\"]\n"
    },
    {
      "function": "replace_by",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 24,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef replace_by(stream):\n    orig_stdout = sys.stdout\n    orig_stderr = sys.stderr\n    sys.stdout = stream\n    sys.stderr = stream\n    yield\n    sys.stdout = orig_stdout\n    sys.stderr = orig_stderr\n\n"
    },
    {
      "function": "replace_original_by",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/utils.py",
      "line": 34,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "@contextmanager\ndef replace_original_by(stream):\n    orig_stdout = sys.__stdout__\n    orig_stderr = sys.__stderr__\n    sys.__stdout__ = stream\n    sys.__stderr__ = stream\n    yield\n    sys.__stdout__ = orig_stdout\n    sys.__stderr__ = orig_stderr\n\n"
    },
    {
      "function": "self.assertFalse",
      "filename": "",
      "line": 0,
      "caller": "test_withPycharmNoneOverride",
      "source_code": ""
    },
    {
      "function": "self.assertFalse",
      "filename": "",
      "line": 0,
      "caller": "test_withPycharmNoneOverride",
      "source_code": ""
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_withPycharmNoneOverride",
      "source_code": ""
    },
    {
      "function": "is_a_tty",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line": 9,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()\n\n"
    },
    {
      "function": "is_a_tty",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line": 9,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()\n\n"
    },
    {
      "function": "is_a_tty",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/sanic/venv/lib/python3.9/site-packages/pip/_vendor/colorama/tests/isatty_test.py",
      "line": 9,
      "caller": "test_withPycharmNoneOverride",
      "source_code": "def is_a_tty(stream):\n    return StreamWrapper(stream, None).isatty()\n\n"
    },
    {
      "function": "StreamNonTTY",
      "filename": "",
      "line": 0,
      "caller": "test_withPycharmNoneOverride",
      "source_code": ""
    },
    {
      "function": "StreamTTY",
      "filename": "",
      "line": 0,
      "caller": "test_withPycharmNoneOverride",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_withPycharmNoneOverride(self):\n        with pycharm():\n            with replace_by(None), replace_original_by(None):\n                self.assertFalse(is_a_tty(None))\n                self.assertFalse(is_a_tty(StreamNonTTY()))\n                self.assertTrue(is_a_tty(StreamTTY()))"
}