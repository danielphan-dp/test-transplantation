{
  "test_name": "test_common_prefix",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/test_regex.py",
  "static_methods": [
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "type",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "regex.compile",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_common_prefix",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_common_prefix",
      "source_code": ""
    },
    {
      "function": "type",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_common_prefix",
      "source_code": ""
    },
    {
      "function": "regex.compile",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_common_prefix",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_common_prefix(self):\n        # Very long common prefix\n        all = string.ascii_lowercase + string.digits + string.ascii_uppercase\n        side = all * 4\n        regexp = '(' + side + '|' + side + ')'\n        self.assertEqual(repr(type(regex.compile(regexp))), self.PATTERN_CLASS)"
}