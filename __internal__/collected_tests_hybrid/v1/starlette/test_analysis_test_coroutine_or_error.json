{
  "test_name": "test_coroutine_or_error",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_util.py",
  "static_methods": [
    {
      "name": "ignore_coroutine_never_awaited_warnings",
      "source_code": "def ignore_coroutine_never_awaited_warnings() -> Generator[None, None, None]:\n    with warnings.catch_warnings():\n        warnings.filterwarnings(\"ignore\", message=\"coroutine '.*' was never awaited\")\n        try:\n            yield\n        finally:\n            # Make sure to trigger any coroutine __del__ methods now, before\n            # we leave the context manager.\n            gc_collect_harder()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line_number": 67
    },
    {
      "name": "ignore_coroutine_never_awaited_warnings",
      "source_code": "def ignore_coroutine_never_awaited_warnings() -> Generator[None, None, None]:\n    with warnings.catch_warnings():\n        warnings.filterwarnings(\"ignore\", message=\"coroutine '.*' was never awaited\")\n        try:\n            yield\n        finally:\n            # Make sure to trigger any coroutine __del__ methods now, before\n            # we leave the context manager.\n            gc_collect_harder()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line_number": 67
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "f",
      "source_code": "            def f(cur: TracebackType) -> Iterable[TracebackEntry]:\n                cur_: TracebackType | None = cur\n                while cur_ is not None:\n                    yield TracebackEntry(cur_)\n                    cur_ = cur_.tb_next",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_code/code.py",
      "line_number": 333
    },
    {
      "name": "coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line_number": 115
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "create_asyncio_future_in_new_loop",
      "source_code": "def create_asyncio_future_in_new_loop() -> asyncio.Future[object]:\n    with closing(asyncio.new_event_loop()) as loop:\n        return loop.create_future()",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line_number": 115
    },
    {
      "name": "Deferred",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "generator_based_coro",
      "source_code": "            def generator_based_coro() -> Any:  # pragma: no cover\n                yield from asyncio.sleep(1)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_util.py",
      "line_number": 121
    },
    {
      "name": "Deferred",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "ignore_coroutine_never_awaited_warnings",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line": 67,
      "caller": "test_coroutine_or_error",
      "source_code": "@contextmanager\ndef ignore_coroutine_never_awaited_warnings() -> Generator[None, None, None]:\n    with warnings.catch_warnings():\n        warnings.filterwarnings(\"ignore\", message=\"coroutine '.*' was never awaited\")\n        try:\n            yield\n        finally:\n            # Make sure to trigger any coroutine __del__ methods now, before\n            # we leave the context manager.\n            gc_collect_harder()\n\n\n"
    },
    {
      "function": "ignore_coroutine_never_awaited_warnings",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line": 67,
      "caller": "test_coroutine_or_error",
      "source_code": "@contextmanager\ndef ignore_coroutine_never_awaited_warnings() -> Generator[None, None, None]:\n    with warnings.catch_warnings():\n        warnings.filterwarnings(\"ignore\", message=\"coroutine '.*' was never awaited\")\n        try:\n            yield\n        finally:\n            # Make sure to trigger any coroutine __del__ methods now, before\n            # we leave the context manager.\n            gc_collect_harder()\n\n\n"
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "f",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/_pytest/_code/code.py",
      "line": 333,
      "caller": "test_coroutine_or_error",
      "source_code": "            def f(cur: TracebackType) -> Iterable[TracebackEntry]:\n                cur_: TracebackType | None = cur\n                while cur_ is not None:\n                    yield TracebackEntry(cur_)\n                    cur_ = cur_.tb_next\n\n"
    },
    {
      "function": "coroutine_or_error",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_util.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def coroutine_or_error(\n    async_fn: Callable[[Unpack[PosArgsT]], Awaitable[RetT]],\n    *args: Unpack[PosArgsT],\n"
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "create_asyncio_future_in_new_loop",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/tutil.py",
      "line": 115,
      "caller": "test_coroutine_or_error",
      "source_code": "def create_asyncio_future_in_new_loop() -> asyncio.Future[object]:\n    with closing(asyncio.new_event_loop()) as loop:\n        return loop.create_future()\n"
    },
    {
      "function": "Deferred",
      "filename": "",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    },
    {
      "function": "generator_based_coro",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_util.py",
      "line": 121,
      "caller": "test_coroutine_or_error",
      "source_code": "            @asyncio.coroutine  # type: ignore[misc]\n            def generator_based_coro() -> Any:  # pragma: no cover\n                yield from asyncio.sleep(1)\n\n"
    },
    {
      "function": "Deferred",
      "filename": "",
      "line": 0,
      "caller": "test_coroutine_or_error",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert 'expecting an async function' in str(excinfo.value)",
    "assert 'asyncio' in str(excinfo.value)",
    "assert 'asyncio' in str(excinfo.value)",
    "assert 'twisted' in str(excinfo.value)",
    "assert 'twisted' in str(excinfo.value)",
    "assert 'appears to be synchronous' in str(excinfo.value)",
    "assert msg in str(excinfo.value)",
    "assert 'asyncio' in str(excinfo.value)"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_coroutine_or_error() -> None:\n    class Deferred:\n        \"Just kidding\"\n\n    with ignore_coroutine_never_awaited_warnings():\n\n        async def f() -> None:  # pragma: no cover\n            pass\n\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(f())  # type: ignore[arg-type, unused-coroutine]\n        assert \"expecting an async function\" in str(excinfo.value)\n\n        import asyncio\n\n        if sys.version_info < (3, 11):\n            # not bothering to type this one\n            @asyncio.coroutine  # type: ignore[misc]\n            def generator_based_coro() -> Any:  # pragma: no cover\n                yield from asyncio.sleep(1)\n\n            with pytest.raises(TypeError) as excinfo:\n                coroutine_or_error(generator_based_coro())  # type: ignore[arg-type, unused-coroutine]\n            assert \"asyncio\" in str(excinfo.value)\n\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(create_asyncio_future_in_new_loop())  # type: ignore[arg-type, unused-coroutine]\n        assert \"asyncio\" in str(excinfo.value)\n\n        # does not raise arg-type error\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(create_asyncio_future_in_new_loop)  # type: ignore[unused-coroutine]\n        assert \"asyncio\" in str(excinfo.value)\n\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(Deferred())  # type: ignore[arg-type, unused-coroutine]\n        assert \"twisted\" in str(excinfo.value)\n\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(lambda: Deferred())  # type: ignore[arg-type, unused-coroutine, return-value]\n        assert \"twisted\" in str(excinfo.value)\n\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(len, [[1, 2, 3]])  # type: ignore[arg-type, unused-coroutine]\n\n        assert \"appears to be synchronous\" in str(excinfo.value)\n\n        async def async_gen(_: object) -> Any:  # pragma: no cover\n            yield\n\n        # does not give arg-type typing error\n        with pytest.raises(TypeError) as excinfo:\n            coroutine_or_error(async_gen, [0])  # type: ignore[unused-coroutine]\n        msg = \"expected an async function but got an async generator\"\n        assert msg in str(excinfo.value)\n\n        # Make sure no references are kept around to keep anything alive\n        del excinfo"
}