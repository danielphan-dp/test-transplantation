{
  "test_name": "test_deprecated_types",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_status.py",
  "static_methods": [
    {
      "name": "getattr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "str",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "getattr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_deprecated_types",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_deprecated_types",
      "source_code": ""
    },
    {
      "function": "str",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_deprecated_types",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert len(record) == 1",
    "assert msg in str(record.list[0])"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_deprecated_types(constant: str, msg: str) -> None:\n    with pytest.warns(DeprecationWarning) as record:\n        getattr(importlib.import_module(\"starlette.status\"), constant)\n        assert len(record) == 1\n        assert msg in str(record.list[0])"
}