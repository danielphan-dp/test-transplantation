{
  "test_name": "test_format_host_port",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
  "static_methods": [
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    },
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    },
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    },
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    },
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    },
    {
      "name": "format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 163
    }
  ],
  "dynamic_methods": [
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    },
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    },
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    },
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    },
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    },
    {
      "function": "format_host_port",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 163,
      "caller": "test_format_host_port",
      "source_code": "def format_host_port(host: str | bytes, port: int | str) -> str:\n    host = host.decode(\"ascii\") if isinstance(host, bytes) else host\n    if \":\" in host:\n        return f\"[{host}]:{port}\"\n    else:\n        return f\"{host}:{port}\"\n\n\n"
    }
  ],
  "assertions": [
    "assert format_host_port('127.0.0.1', 80) == '127.0.0.1:80'",
    "assert format_host_port(b'127.0.0.1', 80) == '127.0.0.1:80'",
    "assert format_host_port('example.com', 443) == 'example.com:443'",
    "assert format_host_port(b'example.com', 443) == 'example.com:443'",
    "assert format_host_port('::1', 'http') == '[::1]:http'",
    "assert format_host_port(b'::1', 'http') == '[::1]:http'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_format_host_port() -> None:\n    assert format_host_port(\"127.0.0.1\", 80) == \"127.0.0.1:80\"\n    assert format_host_port(b\"127.0.0.1\", 80) == \"127.0.0.1:80\"\n    assert format_host_port(\"example.com\", 443) == \"example.com:443\"\n    assert format_host_port(b\"example.com\", 443) == \"example.com:443\"\n    assert format_host_port(\"::1\", \"http\") == \"[::1]:http\"\n    assert format_host_port(b\"::1\", \"http\") == \"[::1]:http\""
}