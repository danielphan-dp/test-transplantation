{
  "test_name": "test_lifespan_app_subclass",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_applications.py",
  "static_methods": [
    {
      "name": "App",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "App",
      "filename": "",
      "line": 0,
      "caller": "test_lifespan_app_subclass",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_lifespan_app_subclass() -> None:\n    # This test exists to make sure that subclasses of Starlette\n    # (like FastAPI) are compatible with the types hints for Lifespan\n\n    class App(Starlette):\n        pass\n\n    @asynccontextmanager\n    async def lifespan(app: App) -> AsyncIterator[None]:  # pragma: no cover\n        yield\n\n    App(lifespan=lifespan)"
}