{
  "test_name": "test_mock_clock",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_core/_tests/test_mock_clock.py",
  "static_methods": [
    {
      "name": "MockClock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "repr",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "c.jump",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 319
    },
    {
      "name": "c.jump",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 319
    },
    {
      "name": "MockClock",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.jump",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 319
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.deadline_to_sleep_time",
      "source_code": "    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 45
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    },
    {
      "name": "c2.current_time",
      "source_code": "    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line_number": 33
    }
  ],
  "dynamic_methods": [
    {
      "function": "MockClock",
      "filename": "",
      "line": 0,
      "caller": "test_mock_clock",
      "source_code": ""
    },
    {
      "function": "repr",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_mock_clock",
      "source_code": ""
    },
    {
      "function": "c.jump",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 319,
      "caller": "test_mock_clock",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump\n\n"
    },
    {
      "function": "c.jump",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 319,
      "caller": "test_mock_clock",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump\n\n"
    },
    {
      "function": "MockClock",
      "filename": "",
      "line": 0,
      "caller": "test_mock_clock",
      "source_code": ""
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.jump",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 319,
      "caller": "test_mock_clock",
      "source_code": "    def jump(self, name):\n        return name.lower() in self._jump\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.deadline_to_sleep_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 45,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def deadline_to_sleep_time(self, deadline: float) -> float:\n        \"\"\"Compute the real time until the given deadline.\n\n        This is called before we enter a system-specific wait function like\n        :func:`select.select`, to get the timeout to pass.\n\n        For a clock using wall-time, this should be something like::\n\n           return deadline - self.current_time()\n\n        but of course it may be different if you're implementing some kind of\n        virtual clock.\n\n        Args:\n            deadline (float): The absolute time of the next deadline,\n                according to this clock.\n\n        Returns:\n            float: The number of real seconds to sleep until the given\n            deadline. May be :data:`math.inf`.\n\n        \"\"\"\n\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    },
    {
      "function": "c2.current_time",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_abc.py",
      "line": 33,
      "caller": "test_mock_clock",
      "source_code": "    @abstractmethod\n    def current_time(self) -> float:\n        \"\"\"Return the current time, according to this clock.\n\n        This is used to implement functions like :func:`trio.current_time` and\n        :func:`trio.move_on_after`.\n\n        Returns:\n            float: The current time.\n\n        \"\"\"\n\n"
    }
  ],
  "assertions": [
    "assert c.rate == 0",
    "assert c.current_time() == 0",
    "assert c.current_time() == 1.2",
    "assert c.current_time() == 1.2",
    "assert c.deadline_to_sleep_time(1.1) == 0",
    "assert c.deadline_to_sleep_time(1.2) == 0",
    "assert c.deadline_to_sleep_time(1.3) > 999999",
    "assert c.rate == 0",
    "assert c.current_time() == 1.2",
    "assert c.current_time() == 3.2",
    "assert c.deadline_to_sleep_time(3.1) == 0",
    "assert c.deadline_to_sleep_time(3.2) == 0",
    "assert c.deadline_to_sleep_time(4.2) == 0.5",
    "assert c.current_time() == 3.2",
    "assert c.deadline_to_sleep_time(3.1) == 0",
    "assert c.deadline_to_sleep_time(3.2) == 0",
    "assert c.deadline_to_sleep_time(4.2) == 2.0",
    "assert c.current_time() == 4.0",
    "assert c.current_time() == 4.5",
    "assert c2.rate == 3",
    "assert c2.current_time() < 10"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_mock_clock() -> None:\n    REAL_NOW = 123.0\n    c = MockClock()\n    c._real_clock = lambda: REAL_NOW\n    repr(c)  # smoke test\n    assert c.rate == 0\n    assert c.current_time() == 0\n    c.jump(1.2)\n    assert c.current_time() == 1.2\n    with pytest.raises(ValueError, match=\"^time can't go backwards$\"):\n        c.jump(-1)\n    assert c.current_time() == 1.2\n    assert c.deadline_to_sleep_time(1.1) == 0\n    assert c.deadline_to_sleep_time(1.2) == 0\n    assert c.deadline_to_sleep_time(1.3) > 999999\n\n    with pytest.raises(ValueError, match=\"^rate must be >= 0$\"):\n        c.rate = -1\n    assert c.rate == 0\n\n    c.rate = 2\n    assert c.current_time() == 1.2\n    REAL_NOW += 1\n    assert c.current_time() == 3.2\n    assert c.deadline_to_sleep_time(3.1) == 0\n    assert c.deadline_to_sleep_time(3.2) == 0\n    assert c.deadline_to_sleep_time(4.2) == 0.5\n\n    c.rate = 0.5\n    assert c.current_time() == 3.2\n    assert c.deadline_to_sleep_time(3.1) == 0\n    assert c.deadline_to_sleep_time(3.2) == 0\n    assert c.deadline_to_sleep_time(4.2) == 2.0\n\n    c.jump(0.8)\n    assert c.current_time() == 4.0\n    REAL_NOW += 1\n    assert c.current_time() == 4.5\n\n    c2 = MockClock(rate=3)\n    assert c2.rate == 3\n    assert c2.current_time() < 10"
}