{
  "test_name": "test_mount_routes_with_middleware_url_path_for",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/tests/test_routing.py",
  "static_methods": [
    {
      "name": "mounted_routes_with_middleware.url_path_for",
      "source_code": "    def url_path_for(self, name: str, /, **path_params: typing.Any) -> URLPath:\n        raise NotImplementedError()  # pragma: no cover",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line_number": 182
    }
  ],
  "dynamic_methods": [
    {
      "function": "mounted_routes_with_middleware.url_path_for",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/starlette/routing.py",
      "line": 182,
      "caller": "test_mount_routes_with_middleware_url_path_for",
      "source_code": "    def url_path_for(self, name: str, /, **path_params: typing.Any) -> URLPath:\n        raise NotImplementedError()  # pragma: no cover\n\n"
    }
  ],
  "assertions": [
    "assert mounted_routes_with_middleware.url_path_for('route') == '/http/'"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_mount_routes_with_middleware_url_path_for() -> None:\n    \"\"\"Checks that url_path_for still works with mounted routes with Middleware\"\"\"\n    assert mounted_routes_with_middleware.url_path_for(\"route\") == \"/http/\""
}