{
  "test_name": "test_primitives_included_in_header",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
  "static_methods": [
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "f.read",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line_number": 145
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "f.read",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line_number": 145
    },
    {
      "name": "name.startswith",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def endswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n    def replace(self, old: str, new: str, maxcount: int=...) -> str: ...\n    def encode(self, x: str=..., y: str=...) -> bytes: ...",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line_number": 110
    },
    {
      "name": "registry.method_call_ops.values",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line_number": 749
    },
    {
      "name": "registry.function_ops.values",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line_number": 749
    },
    {
      "name": "registry.unary_ops.values",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line_number": 749
    },
    {
      "name": "registry.binary_ops.values",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line_number": 749
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "isinstance",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "open",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "f.read",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line_number": 145
    },
    {
      "name": "check_name",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line_number": 23
    },
    {
      "name": "check_name",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line_number": 23
    },
    {
      "name": "check_name",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line_number": 23
    }
  ],
  "dynamic_methods": [
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "f.read",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line": 145,
      "caller": "test_primitives_included_in_header",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None\n\n        self.position += len(token.text)\n        self.next_token = None\n\n        return token\n\n"
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "f.read",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line": 145,
      "caller": "test_primitives_included_in_header",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None\n\n        self.position += len(token.text)\n        self.next_token = None\n\n        return token\n\n"
    },
    {
      "function": "name.startswith",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test-data/fixtures/ir.py",
      "line": 110,
      "caller": "test_primitives_included_in_header",
      "source_code": "    def startswith(self, x: str, start: int=..., end: int=...) -> bool: ...\n"
    },
    {
      "function": "registry.method_call_ops.values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line": 749,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]\n\n"
    },
    {
      "function": "registry.function_ops.values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line": 749,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]\n\n"
    },
    {
      "function": "registry.unary_ops.values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line": 749,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]\n\n"
    },
    {
      "function": "registry.binary_ops.values",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/pip/_vendor/distlib/compat.py",
      "line": 749,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def values(self):\n            'od.values() -> list of values in od'\n            return [self[key] for key in self]\n\n"
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "isinstance",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "open",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_primitives_included_in_header",
      "source_code": ""
    },
    {
      "function": "f.read",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/packaging/_tokenizer.py",
      "line": 145,
      "caller": "test_primitives_included_in_header",
      "source_code": "    def read(self) -> Token:\n        \"\"\"Consume the next token and return it.\"\"\"\n        token = self.next_token\n        assert token is not None\n\n        self.position += len(token.text)\n        self.next_token = None\n\n        return token\n\n"
    },
    {
      "function": "check_name",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line": 23,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'\n\n"
    },
    {
      "function": "check_name",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line": 23,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'\n\n"
    },
    {
      "function": "check_name",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/mypyc/test/test_cheader.py",
      "line": 23,
      "caller": "test_primitives_included_in_header",
      "source_code": "        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'\n\n"
    }
  ],
  "assertions": [
    "assert re.search(f'\\\\b{name}\\\\b', header), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_primitives_included_in_header(self) -> None:\n        base_dir = os.path.join(os.path.dirname(__file__), \"..\", \"lib-rt\")\n        with open(os.path.join(base_dir, \"CPy.h\")) as f:\n            header = f.read()\n        with open(os.path.join(base_dir, \"pythonsupport.h\")) as f:\n            header += f.read()\n\n        def check_name(name: str) -> None:\n            if name.startswith(\"CPy\"):\n                assert re.search(\n                    rf\"\\b{name}\\b\", header\n                ), f'\"{name}\" is used in mypyc.primitives but not declared in CPy.h'\n\n        for old_values in [\n            registry.method_call_ops.values(),\n            registry.function_ops.values(),\n            registry.unary_ops.values(),\n        ]:\n            for old_ops in old_values:\n                if isinstance(old_ops, CFunctionDescription):\n                    old_ops = [old_ops]\n                for old_op in old_ops:\n                    check_name(old_op.c_function_name)\n\n        for values in [registry.binary_ops.values()]:\n            for ops in values:\n                if isinstance(ops, PrimitiveDescription):\n                    ops = [ops]\n                for op in ops:\n                    if op.c_function_name is not None:\n                        check_name(op.c_function_name)\n\n        primitives_path = os.path.join(os.path.dirname(__file__), \"..\", \"primitives\")\n        for fnam in glob.glob(f\"{primitives_path}/*.py\"):\n            with open(fnam) as f:\n                content = f.read()\n            for name in re.findall(r'c_function_name=[\"\\'](CPy[A-Z_a-z0-9]+)', content):\n                check_name(name)"
}