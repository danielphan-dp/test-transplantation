{
  "test_name": "test_raises_group",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_testing_raisesgroup.py",
  "static_methods": [
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "TypeError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "RaisesGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "wrap_escape",
      "source_code": "def wrap_escape(s: str) -> str:\n    return \"^\" + re.escape(s) + \"$\"",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_testing_raisesgroup.py",
      "line_number": 17
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "SyntaxError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "SyntaxError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SyntaxError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "ExceptionGroup",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SyntaxError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "RuntimeError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "ValueError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "RuntimeError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "TypeError",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "TypeError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RaisesGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "wrap_escape",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_testing_raisesgroup.py",
      "line": 17,
      "caller": "test_raises_group",
      "source_code": "def wrap_escape(s: str) -> str:\n    return \"^\" + re.escape(s) + \"$\"\n\n\n"
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "SyntaxError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "SyntaxError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "SyntaxError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ExceptionGroup",
      "filename": "",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "SyntaxError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RuntimeError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "ValueError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "RuntimeError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    },
    {
      "function": "TypeError",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_raises_group",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_raises_group() -> None:\n    with pytest.raises(\n        ValueError,\n        match=wrap_escape(\n            f'Invalid argument \"{TypeError()!r}\" must be exception type, Matcher, or RaisesGroup.'\n        ),\n    ):\n        RaisesGroup(TypeError())\n\n    with RaisesGroup(ValueError):\n        raise ExceptionGroup(\"foo\", (ValueError(),))\n\n    with RaisesGroup(SyntaxError):\n        with RaisesGroup(ValueError):\n            raise ExceptionGroup(\"foo\", (SyntaxError(),))\n\n    # multiple exceptions\n    with RaisesGroup(ValueError, SyntaxError):\n        raise ExceptionGroup(\"foo\", (ValueError(), SyntaxError()))\n\n    # order doesn't matter\n    with RaisesGroup(SyntaxError, ValueError):\n        raise ExceptionGroup(\"foo\", (ValueError(), SyntaxError()))\n\n    # nested exceptions\n    with RaisesGroup(RaisesGroup(ValueError)):\n        raise ExceptionGroup(\"foo\", (ExceptionGroup(\"bar\", (ValueError(),)),))\n\n    with RaisesGroup(\n        SyntaxError,\n        RaisesGroup(ValueError),\n        RaisesGroup(RuntimeError),\n    ):\n        raise ExceptionGroup(\n            \"foo\",\n            (\n                SyntaxError(),\n                ExceptionGroup(\"bar\", (ValueError(),)),\n                ExceptionGroup(\"\", (RuntimeError(),)),\n            ),\n        )\n\n    # will error if there's excess exceptions\n    with pytest.raises(ExceptionGroup):\n        with RaisesGroup(ValueError):\n            raise ExceptionGroup(\"\", (ValueError(), ValueError()))\n\n    with pytest.raises(ExceptionGroup):\n        with RaisesGroup(ValueError):\n            raise ExceptionGroup(\"\", (RuntimeError(), ValueError()))\n\n    # will error if there's missing exceptions\n    with pytest.raises(ExceptionGroup):\n        with RaisesGroup(ValueError, ValueError):\n            raise ExceptionGroup(\"\", (ValueError(),))\n\n    with pytest.raises(ExceptionGroup):\n        with RaisesGroup(ValueError, SyntaxError):\n            raise ExceptionGroup(\"\", (ValueError(),))"
}