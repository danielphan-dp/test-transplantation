{
  "test_name": "test_re_split",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/test_regex.py",
  "static_methods": [
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.split",
      "source_code": "    def split(cls, s):\n        return list(cls(s))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line_number": 200
    },
    {
      "name": "regex.splititer",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line_number": 325
    },
    {
      "name": "regex.splititer",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line_number": 325
    },
    {
      "name": "regex.splititer",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line_number": 325
    },
    {
      "name": "regex.splititer",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line_number": 325
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_re_split",
      "source_code": ""
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.split",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/dateutil/parser/_parser.py",
      "line": 200,
      "caller": "test_re_split",
      "source_code": "    @classmethod\n    def split(cls, s):\n        return list(cls(s))\n\n"
    },
    {
      "function": "regex.splititer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line": 325,
      "caller": "test_re_split",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,\n  timeout=None, ignore_unused=False, **kwargs):\n    \"Return an iterator yielding the parts of a split string.\"\n    pat = _compile(pattern, flags, ignore_unused, kwargs, True)\n    return pat.splititer(string, maxsplit, concurrent, timeout)\n\n"
    },
    {
      "function": "regex.splititer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line": 325,
      "caller": "test_re_split",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,\n  timeout=None, ignore_unused=False, **kwargs):\n    \"Return an iterator yielding the parts of a split string.\"\n    pat = _compile(pattern, flags, ignore_unused, kwargs, True)\n    return pat.splititer(string, maxsplit, concurrent, timeout)\n\n"
    },
    {
      "function": "regex.splititer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line": 325,
      "caller": "test_re_split",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,\n  timeout=None, ignore_unused=False, **kwargs):\n    \"Return an iterator yielding the parts of a split string.\"\n    pat = _compile(pattern, flags, ignore_unused, kwargs, True)\n    return pat.splititer(string, maxsplit, concurrent, timeout)\n\n"
    },
    {
      "function": "regex.splititer",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/regex/regex.py",
      "line": 325,
      "caller": "test_re_split",
      "source_code": "def splititer(pattern, string, maxsplit=0, flags=0, concurrent=None,\n  timeout=None, ignore_unused=False, **kwargs):\n    \"Return an iterator yielding the parts of a split string.\"\n    pat = _compile(pattern, flags, ignore_unused, kwargs, True)\n    return pat.splititer(string, maxsplit, concurrent, timeout)\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_re_split(self):\n        self.assertEqual(regex.split(\":\", \":a:b::c\"), ['', 'a', 'b', '', 'c'])\n        if sys.version_info >= (3, 7, 0):\n            self.assertEqual(regex.split(\":*\", \":a:b::c\"), ['', '', 'a', '',\n              'b', '', 'c', ''])\n            self.assertEqual(regex.split(\"(:*)\", \":a:b::c\"), ['', ':', '', '',\n              'a', ':', '', '', 'b', '::', '', '', 'c', '', ''])\n            self.assertEqual(regex.split(\"(?::*)\", \":a:b::c\"), ['', '', 'a',\n              '', 'b', '', 'c', ''])\n            self.assertEqual(regex.split(\"(:)*\", \":a:b::c\"), ['', ':', '',\n              None, 'a', ':', '', None, 'b', ':', '', None, 'c', None, ''])\n        else:\n            self.assertEqual(regex.split(\":*\", \":a:b::c\"), ['', 'a', 'b', 'c'])\n            self.assertEqual(regex.split(\"(:*)\", \":a:b::c\"), ['', ':', 'a',\n              ':', 'b', '::', 'c'])\n            self.assertEqual(regex.split(\"(?::*)\", \":a:b::c\"), ['', 'a', 'b',\n              'c'])\n            self.assertEqual(regex.split(\"(:)*\", \":a:b::c\"), ['', ':', 'a',\n              ':', 'b', ':', 'c'])\n        self.assertEqual(regex.split(\"([b:]+)\", \":a:b::c\"), ['', ':', 'a',\n          ':b::', 'c'])\n        self.assertEqual(regex.split(\"(b)|(:+)\", \":a:b::c\"), ['', None, ':',\n          'a', None, ':', '', 'b', None, '', None, '::', 'c'])\n        self.assertEqual(regex.split(\"(?:b)|(?::+)\", \":a:b::c\"), ['', 'a', '',\n          '', 'c'])\n\n        self.assertEqual(regex.split(\"x\", \"xaxbxc\"), ['', 'a', 'b', 'c'])\n        self.assertEqual([m for m in regex.splititer(\"x\", \"xaxbxc\")], ['', 'a',\n          'b', 'c'])\n\n        self.assertEqual(regex.split(\"(?r)x\", \"xaxbxc\"), ['c', 'b', 'a', ''])\n        self.assertEqual([m for m in regex.splititer(\"(?r)x\", \"xaxbxc\")], ['c',\n          'b', 'a', ''])\n\n        self.assertEqual(regex.split(\"(x)|(y)\", \"xaxbxc\"), ['', 'x', None, 'a',\n          'x', None, 'b', 'x', None, 'c'])\n        self.assertEqual([m for m in regex.splititer(\"(x)|(y)\", \"xaxbxc\")],\n          ['', 'x', None, 'a', 'x', None, 'b', 'x', None, 'c'])\n\n        self.assertEqual(regex.split(\"(?r)(x)|(y)\", \"xaxbxc\"), ['c', 'x', None,\n          'b', 'x', None, 'a', 'x', None, ''])\n        self.assertEqual([m for m in regex.splititer(\"(?r)(x)|(y)\", \"xaxbxc\")],\n          ['c', 'x', None, 'b', 'x', None, 'a', 'x', None, ''])\n\n        self.assertEqual(regex.split(r\"(?V1)\\b\", \"a b c\"), ['', 'a', ' ', 'b',\n          ' ', 'c', ''])\n        self.assertEqual(regex.split(r\"(?V1)\\m\", \"a b c\"), ['', 'a ', 'b ',\n          'c'])\n        self.assertEqual(regex.split(r\"(?V1)\\M\", \"a b c\"), ['a', ' b', ' c',\n          ''])"
}