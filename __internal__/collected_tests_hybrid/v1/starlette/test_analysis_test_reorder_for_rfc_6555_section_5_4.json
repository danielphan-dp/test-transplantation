{
  "test_name": "test_reorder_for_rfc_6555_section_5_4",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
  "static_methods": [
    {
      "name": "list",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 135
    },
    {
      "name": "reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 135
    },
    {
      "name": "reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 135
    },
    {
      "name": "reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line_number": 135
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake4",
      "source_code": "    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 60
    },
    {
      "name": "fake6",
      "source_code": "    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line_number": 71
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "fake",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "list",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "reorder_for_rfc_6555_section_5_4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 135,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]\n"
    },
    {
      "function": "reorder_for_rfc_6555_section_5_4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 135,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]\n"
    },
    {
      "function": "reorder_for_rfc_6555_section_5_4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 135,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]\n"
    },
    {
      "function": "reorder_for_rfc_6555_section_5_4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_highlevel_open_tcp_stream.py",
      "line": 135,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "def reorder_for_rfc_6555_section_5_4(\n    targets: list[\n        tuple[\n            AddressFamily,\n            SocketKind,\n            int,\n            str,\n            Any,\n        ]\n    ]\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake4",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 60,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake4(\n        i: int,\n"
    },
    {
      "function": "fake6",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/starlette/venv/lib/python3.9/site-packages/trio/_tests/test_highlevel_open_tcp_stream.py",
      "line": 71,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": "    def fake6(\n        i: int,\n"
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    },
    {
      "function": "fake",
      "filename": "",
      "line": 0,
      "caller": "test_reorder_for_rfc_6555_section_5_4",
      "source_code": ""
    }
  ],
  "assertions": [
    "assert targets == orig",
    "assert targets == [fake4(0), fake6(0), fake4(1), fake4(2), fake6(1)]",
    "assert targets == [fake(0), fake(1), fake(2)]",
    "assert targets == [fake(0)]"
  ],
  "mocks": [],
  "success": true,
  "test_source_code": "def test_reorder_for_rfc_6555_section_5_4() -> None:\n    def fake4(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (\n            AF_INET,\n            SOCK_STREAM,\n            IPPROTO_TCP,\n            \"\",\n            (f\"10.0.0.{i}\", 80),\n        )\n\n    def fake6(\n        i: int,\n    ) -> tuple[socket.AddressFamily, socket.SocketKind, int, str, tuple[str, int]]:\n        return (AF_INET6, SOCK_STREAM, IPPROTO_TCP, \"\", (f\"::{i}\", 80))\n\n    for fake in fake4, fake6:\n        # No effect on homogeneous lists\n        targets = [fake(0), fake(1), fake(2)]\n        reorder_for_rfc_6555_section_5_4(targets)\n        assert targets == [fake(0), fake(1), fake(2)]\n\n        # Single item lists also OK\n        targets = [fake(0)]\n        reorder_for_rfc_6555_section_5_4(targets)\n        assert targets == [fake(0)]\n\n    # If the list starts out with different families in positions 0 and 1,\n    # then it's left alone\n    orig = [fake4(0), fake6(0), fake4(1), fake6(1)]\n    targets = list(orig)\n    reorder_for_rfc_6555_section_5_4(targets)\n    assert targets == orig\n\n    # If not, it's reordered\n    targets = [fake4(0), fake4(1), fake4(2), fake6(0), fake6(1)]\n    reorder_for_rfc_6555_section_5_4(targets)\n    assert targets == [fake4(0), fake6(0), fake4(1), fake4(2), fake6(1)]"
}