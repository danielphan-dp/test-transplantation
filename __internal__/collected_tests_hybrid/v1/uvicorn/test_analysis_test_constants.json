{
  "test_name": "test_constants",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/regex/test_regex.py",
  "static_methods": [
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    },
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    },
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    },
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    },
    {
      "name": "self.fail",
      "source_code": "def fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line_number": 164
    }
  ],
  "dynamic_methods": [
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_constants",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    },
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_constants",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    },
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_constants",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    },
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_constants",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    },
    {
      "function": "self.fail",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/_pytest/outcomes.py",
      "line": 164,
      "caller": "test_constants",
      "source_code": "@_with_exception(Failed)\ndef fail(reason: str = \"\", pytrace: bool = True) -> NoReturn:\n    \"\"\"Explicitly fail an executing test with the given message.\n\n    :param reason:\n        The message to show the user as reason for the failure.\n\n    :param pytrace:\n        If False, msg represents the full failure information and no\n        python traceback will be reported.\n\n    :raises pytest.fail.Exception:\n        The exception that is raised.\n    \"\"\"\n    __tracebackhide__ = True\n    raise Failed(msg=reason, pytrace=pytrace)\n\n\n"
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_constants(self):\n        if regex.I != regex.IGNORECASE:\n            self.fail()\n        if regex.L != regex.LOCALE:\n            self.fail()\n        if regex.M != regex.MULTILINE:\n            self.fail()\n        if regex.S != regex.DOTALL:\n            self.fail()\n        if regex.X != regex.VERBOSE:\n            self.fail()"
}