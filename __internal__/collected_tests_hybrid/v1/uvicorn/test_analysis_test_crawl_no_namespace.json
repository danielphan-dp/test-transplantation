{
  "test_name": "test_crawl_no_namespace",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
  "static_methods": [
    {
      "name": "Options",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "SourceFinder",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "crawl",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line_number": 50
    }
  ],
  "dynamic_methods": [
    {
      "function": "Options",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "SourceFinder",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_crawl_no_namespace",
      "source_code": ""
    },
    {
      "function": "crawl",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
      "line": 50,
      "caller": "test_crawl_no_namespace",
      "source_code": "def crawl(finder: SourceFinder, f: str) -> tuple[str, str]:\n    module, base_dir = finder.crawl_up(f)\n    return module, normalise_path(base_dir)\n\n\n"
    }
  ],
  "assertions": [
    "assert crawl(finder, '/setup.py') == ('setup', '/')",
    "assert crawl(finder, '/a/setup.py') == ('setup', '/a')",
    "assert crawl(finder, '/a/b/setup.py') == ('setup', '/a/b')",
    "assert crawl(finder, '/a/setup.py') == ('a.setup', '/')",
    "assert crawl(finder, '/a/invalid-name/setup.py') == ('setup', '/a/invalid-name')",
    "assert crawl(finder, '/a/b/setup.py') == ('setup', '/a/b')",
    "assert crawl(finder, '/a/b/c/setup.py') == ('c.setup', '/a/b')"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_crawl_no_namespace(self) -> None:\n        options = Options()\n        options.namespace_packages = False\n\n        finder = SourceFinder(FakeFSCache({\"/setup.py\"}), options)\n        assert crawl(finder, \"/setup.py\") == (\"setup\", \"/\")\n\n        finder = SourceFinder(FakeFSCache({\"/a/setup.py\"}), options)\n        assert crawl(finder, \"/a/setup.py\") == (\"setup\", \"/a\")\n\n        finder = SourceFinder(FakeFSCache({\"/a/b/setup.py\"}), options)\n        assert crawl(finder, \"/a/b/setup.py\") == (\"setup\", \"/a/b\")\n\n        finder = SourceFinder(FakeFSCache({\"/a/setup.py\", \"/a/__init__.py\"}), options)\n        assert crawl(finder, \"/a/setup.py\") == (\"a.setup\", \"/\")\n\n        finder = SourceFinder(FakeFSCache({\"/a/invalid-name/setup.py\", \"/a/__init__.py\"}), options)\n        assert crawl(finder, \"/a/invalid-name/setup.py\") == (\"setup\", \"/a/invalid-name\")\n\n        finder = SourceFinder(FakeFSCache({\"/a/b/setup.py\", \"/a/__init__.py\"}), options)\n        assert crawl(finder, \"/a/b/setup.py\") == (\"setup\", \"/a/b\")\n\n        finder = SourceFinder(\n            FakeFSCache({\"/a/b/c/setup.py\", \"/a/__init__.py\", \"/a/b/c/__init__.py\"}), options\n        )\n        assert crawl(finder, \"/a/b/c/setup.py\") == (\"c.setup\", \"/a/b\")"
}