{
  "test_name": "test_ctor_w_valid_wheel_w_description_header",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_wheel.py",
  "static_methods": [
    {
      "name": "self._makeOne",
      "source_code": "    def _makeOne(self, filename=None, metadata_version=None):\n        if metadata_version is not None:\n            return self._getTargetClass()(filename, metadata_version)\n        return self._getTargetClass()(filename)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_sdist.py",
      "line_number": 13
    },
    {
      "name": "self.assertEqual",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "self.assertTrue",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    }
  ],
  "dynamic_methods": [
    {
      "function": "self._makeOne",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/pkginfo/tests/test_sdist.py",
      "line": 13,
      "caller": "test_ctor_w_valid_wheel_w_description_header",
      "source_code": "    def _makeOne(self, filename=None, metadata_version=None):\n        if metadata_version is not None:\n            return self._getTargetClass()(filename, metadata_version)\n        return self._getTargetClass()(filename)\n\n"
    },
    {
      "function": "self.assertEqual",
      "filename": "",
      "line": 0,
      "caller": "test_ctor_w_valid_wheel_w_description_header",
      "source_code": ""
    },
    {
      "function": "self.assertTrue",
      "filename": "",
      "line": 0,
      "caller": "test_ctor_w_valid_wheel_w_description_header",
      "source_code": ""
    }
  ],
  "assertions": [],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_ctor_w_valid_wheel_w_description_header(self):\n        import os\n        d, _ = os.path.split(__file__)\n        filename = ('%s/../../docs/examples/'\n                    'distlib-0.3.1-py2.py3-none-any.whl') % d\n        wheel = self._makeOne(filename, metadata_version='1.1')\n        self.assertEqual(wheel.metadata_version, '1.1')\n        self.assertTrue(wheel.description)"
}