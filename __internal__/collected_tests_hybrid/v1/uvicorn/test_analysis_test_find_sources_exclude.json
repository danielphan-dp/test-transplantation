{
  "test_name": "test_find_sources_exclude",
  "test_file": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/mypy/test/test_find_sources.py",
  "static_methods": [
    {
      "name": "Options",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "join",
      "source_code": "    def join(self, timeout: int) -> None:\n        if isinstance(self._p, SpawnProcess):\n            self._p.join(timeout)\n        else:\n            self._p.wait(timeout)",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/watchfiles/run.py",
      "line_number": 357
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "FakeFSCache",
      "source_code": "",
      "file_path": "",
      "line_number": 0
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "len",
      "source_code": "",
      "file_path": "<built-in>",
      "line_number": 0
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    },
    {
      "name": "find_sources",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist",
      "file_path": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line_number": 301
    }
  ],
  "dynamic_methods": [
    {
      "function": "Options",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "join",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/watchfiles/run.py",
      "line": 357,
      "caller": "test_find_sources_exclude",
      "source_code": "    def join(self, timeout: int) -> None:\n        if isinstance(self._p, SpawnProcess):\n            self._p.join(timeout)\n        else:\n            self._p.wait(timeout)\n\n"
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "FakeFSCache",
      "filename": "",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "len",
      "filename": "<built-in>",
      "line": 0,
      "caller": "test_find_sources_exclude",
      "source_code": ""
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    },
    {
      "function": "find_sources",
      "filename": "/home/quark-ubuntu-wsl/test_transplantation_cs846_f24/test-transplantation/__internal__/_data/uvicorn/venv/lib/python3.9/site-packages/setuptools/command/egg_info.py",
      "line": 301,
      "caller": "test_find_sources_exclude",
      "source_code": "    def find_sources(self):\n        \"\"\"Generate SOURCES.txt manifest file\"\"\"\n        manifest_filename = os.path.join(self.egg_info, \"SOURCES.txt\")\n        mm = manifest_maker(self.distribution)\n        mm.manifest = manifest_filename\n        mm.run()\n        self.filelist = mm.filelist\n\n"
    }
  ],
  "assertions": [
    "assert find_sources(['/'], options, fscache) == [('a2', '/pkg'), ('a2.b.c.d.e', '/pkg'), ('e', '/pkg/a1/b/c/d')]",
    "assert find_sources(['/pkg/a1/b/f.py'], options, fscache) == [('f', '/pkg/a1/b')]",
    "assert find_sources(['/pkg/a2/b/f.py'], options, fscache) == [('a2.b.f', '/pkg')]",
    "assert find_sources(['/'], options, fscache) == [('a2', '/pkg'), ('a2.b.c.d.e', '/pkg'), ('a2.b.f', '/pkg')]",
    "assert find_sources(['/pkg/a1'], options, fscache) == [('e', '/pkg/a1/b/c/d'), ('f', '/pkg/a1/b')]",
    "assert find_sources(['/'], options, fscache) == [('a2', '/pkg'), ('a2.b.c.d.e', '/pkg'), ('a2.b.f', '/pkg')]",
    "assert find_sources(['/'], options, fscache) == [('a2', '/pkg'), ('a2.b.f', '/pkg'), ('f', '/pkg/a1/b')]",
    "assert find_sources(['/'], options, fscache) == [('a', '/dir')]",
    "assert find_sources([f'/dir/venv/{excluded_dir}'], options, fscache) == [('b', f'/dir/venv/{excluded_dir}')]",
    "assert find_sources([f'/dir/venv/{excluded_dir}/b.py'], options, fscache) == [('b', f'/dir/venv/{excluded_dir}')]",
    "assert find_sources(['/'], options, fscache) == [('a2', '/pkg'), ('a2.b.c.d.e', '/pkg'), ('a2.b.f', '/pkg')]",
    "assert len(find_sources(['/'], options, fscache)) == len(files)",
    "assert len(find_sources(['.'], options, fscache)) == len(files)"
  ],
  "mocks": [],
  "success": false,
  "test_source_code": "def test_find_sources_exclude(self) -> None:\n        options = Options()\n        options.namespace_packages = True\n\n        # default\n        for excluded_dir in [\"site-packages\", \".whatever\", \"node_modules\", \".x/.z\"]:\n            fscache = FakeFSCache({\"/dir/a.py\", f\"/dir/venv/{excluded_dir}/b.py\"})\n            assert find_sources([\"/\"], options, fscache) == [(\"a\", \"/dir\")]\n            with pytest.raises(InvalidSourceList):\n                find_sources([\"/dir/venv/\"], options, fscache)\n            assert find_sources([f\"/dir/venv/{excluded_dir}\"], options, fscache) == [\n                (\"b\", f\"/dir/venv/{excluded_dir}\")\n            ]\n            assert find_sources([f\"/dir/venv/{excluded_dir}/b.py\"], options, fscache) == [\n                (\"b\", f\"/dir/venv/{excluded_dir}\")\n            ]\n\n        files = {\n            \"/pkg/a1/b/c/d/e.py\",\n            \"/pkg/a1/b/f.py\",\n            \"/pkg/a2/__init__.py\",\n            \"/pkg/a2/b/c/d/e.py\",\n            \"/pkg/a2/b/f.py\",\n        }\n\n        # file name\n        options.exclude = [r\"/f\\.py$\"]\n        fscache = FakeFSCache(files)\n        assert find_sources([\"/\"], options, fscache) == [\n            (\"a2\", \"/pkg\"),\n            (\"a2.b.c.d.e\", \"/pkg\"),\n            (\"e\", \"/pkg/a1/b/c/d\"),\n        ]\n        assert find_sources([\"/pkg/a1/b/f.py\"], options, fscache) == [(\"f\", \"/pkg/a1/b\")]\n        assert find_sources([\"/pkg/a2/b/f.py\"], options, fscache) == [(\"a2.b.f\", \"/pkg\")]\n\n        # directory name\n        options.exclude = [\"/a1/\"]\n        fscache = FakeFSCache(files)\n        assert find_sources([\"/\"], options, fscache) == [\n            (\"a2\", \"/pkg\"),\n            (\"a2.b.c.d.e\", \"/pkg\"),\n            (\"a2.b.f\", \"/pkg\"),\n        ]\n        with pytest.raises(InvalidSourceList):\n            find_sources([\"/pkg/a1\"], options, fscache)\n        with pytest.raises(InvalidSourceList):\n            find_sources([\"/pkg/a1/\"], options, fscache)\n        with pytest.raises(InvalidSourceList):\n            find_sources([\"/pkg/a1/b\"], options, fscache)\n\n        options.exclude = [\"/a1/$\"]\n        assert find_sources([\"/pkg/a1\"], options, fscache) == [\n            (\"e\", \"/pkg/a1/b/c/d\"),\n            (\"f\", \"/pkg/a1/b\"),\n        ]\n\n        # paths\n        options.exclude = [\"/pkg/a1/\"]\n        fscache = FakeFSCache(files)\n        assert find_sources([\"/\"], options, fscache) == [\n            (\"a2\", \"/pkg\"),\n            (\"a2.b.c.d.e\", \"/pkg\"),\n            (\"a2.b.f\", \"/pkg\"),\n        ]\n        with pytest.raises(InvalidSourceList):\n            find_sources([\"/pkg/a1\"], options, fscache)\n\n        # OR two patterns together\n        for orred in [[\"/(a1|a3)/\"], [\"a1\", \"a3\"], [\"a3\", \"a1\"]]:\n            options.exclude = orred\n            fscache = FakeFSCache(files)\n            assert find_sources([\"/\"], options, fscache) == [\n                (\"a2\", \"/pkg\"),\n                (\"a2.b.c.d.e\", \"/pkg\"),\n                (\"a2.b.f\", \"/pkg\"),\n            ]\n\n        options.exclude = [\"b/c/\"]\n        fscache = FakeFSCache(files)\n        assert find_sources([\"/\"], options, fscache) == [\n            (\"a2\", \"/pkg\"),\n            (\"a2.b.f\", \"/pkg\"),\n            (\"f\", \"/pkg/a1/b\"),\n        ]\n\n        # nothing should be ignored as a result of this\n        big_exclude1 = [\n            \"/pkg/a/\",\n            \"/2\",\n            \"/1\",\n            \"/pk/\",\n            \"/kg\",\n            \"/g.py\",\n            \"/bc\",\n            \"/xxx/pkg/a2/b/f.py\",\n            \"xxx/pkg/a2/b/f.py\",\n        ]\n        big_exclude2 = [\"|\".join(big_exclude1)]\n        for big_exclude in [big_exclude1, big_exclude2]:\n            options.exclude = big_exclude\n            fscache = FakeFSCache(files)\n            assert len(find_sources([\"/\"], options, fscache)) == len(files)\n\n            files = {\n                \"pkg/a1/b/c/d/e.py\",\n                \"pkg/a1/b/f.py\",\n                \"pkg/a2/__init__.py\",\n                \"pkg/a2/b/c/d/e.py\",\n                \"pkg/a2/b/f.py\",\n            }\n            fscache = FakeFSCache(files)\n            assert len(find_sources([\".\"], options, fscache)) == len(files)"
}