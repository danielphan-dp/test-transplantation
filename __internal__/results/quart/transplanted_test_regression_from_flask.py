# This test file was generated by adapting tests from tests/test_regression.py
# to test the functionality in src/quart/app.py through test transplantation.

import pytest
from quart import Quart, abort, redirect, url_for

@pytest.fixture
def app():
    app = Quart(__name__)

    class Foo(Exception):
        whatever = 42

    @app.errorhandler(Foo)
    async def handle_foo(e):
        return str(e.whatever)

    @app.route("/")
    async def index():
        raise abort(redirect(url_for("test")))

    @app.route("/test")
    async def test():
        raise Foo()

    return app

@pytest.mark.asyncio
async def test_aborting(app):
    # Create a test client using the Quart test client
    async with app.test_client() as client:
        # Test the redirect from the index route
        response = await client.get("/")
        location_parts = response.headers["Location"].rpartition("/")

        if location_parts[0]:
            # For older Werkzeug that used absolute redirects.
            assert location_parts[0] == "http://localhost"

        assert location_parts[2] == "test"

        # Test the custom error handler for the Foo exception
        response = await client.get("/test")
        assert response.data == b"42"