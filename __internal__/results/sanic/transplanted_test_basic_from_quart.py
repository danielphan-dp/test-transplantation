# This test file was generated by adapting tests from tests/test_basic.py (donor) to sanic/app.py (host)

import pytest
from sanic import Sanic
from sanic.response import json, text
from sanic.exceptions import SanicException
from sanic_testing import TestManager

@pytest.fixture
def app():
    app = Sanic("test_app")

    @app.route("/")
    async def index(request):
        return text("index")

    @app.route("/json", methods=["POST"])
    async def json_endpoint(request):
        data = request.json
        return json(data)

    @app.route("/error")
    async def error(request):
        raise SanicException("Something went wrong", status_code=409)

    @app.route("/param/<value>")
    async def param(request, value):
        return text(value)

    @app.websocket("/ws")
    async def websocket_handler(request, ws):
        while True:
            data = await ws.recv()
            await ws.send(data)

    return app

@pytest.mark.parametrize("path", ["/"])
async def test_index(app, path):
    test_client = app.test_client
    request, response = await test_client.get(path)
    assert response.status == 200
    assert response.text == "index"

async def test_json(app):
    test_client = app.test_client
    request, response = await test_client.post("/json", json={"key": "value"})
    assert response.status == 200
    assert response.json == {"key": "value"}

async def test_error(app):
    test_client = app.test_client
    request, response = await test_client.get("/error")
    assert response.status == 409
    assert response.text == "Something went wrong"

async def test_param(app):
    test_client = app.test_client
    request, response = await test_client.get("/param/test_value")
    assert response.status == 200
    assert response.text == "test_value"

async def test_websocket(app):
    test_client = app.test_client
    async with test_client.websocket("/ws") as ws:
        await ws.send("hello")
        data = await ws.recv()
        assert data == "hello"