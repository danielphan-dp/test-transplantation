# This test file was generated by adapting tests from tests/test_basic.py
# to test the functionality in sanic/app.py through test transplantation.

import pytest
from sanic import Sanic
from sanic.response import json, text
from sanic.exceptions import SanicException
from sanic_testing import TestManager
from sanic_testing.testing import SanicTestClient

@pytest.fixture
def app() -> Sanic:
    app = Sanic("test_app")

    @app.route("/")
    async def index(request):
        return text("index")

    @app.route("/json", methods=["POST"])
    async def json_endpoint(request):
        data = request.json
        return json(data)

    @app.route("/error")
    async def error(request):
        raise SanicException("Something went wrong", status_code=409)

    @app.route("/param/<value>")
    async def param(request, value):
        return text(value)

    return app

def test_index(app: Sanic):
    test_client = SanicTestClient(app)
    request, response = test_client.get("/")
    assert response.status_code == 200
    assert response.text == "index"

def test_json(app: Sanic):
    test_client = SanicTestClient(app)
    request, response = test_client.post("/json", json={"key": "value"})
    assert response.status_code == 200
    assert response.json == {"key": "value"}

def test_error(app: Sanic):
    test_client = SanicTestClient(app)
    request, response = test_client.get("/error")
    assert response.status_code == 409
    assert response.text == "Something went wrong"

def test_param(app: Sanic):
    test_client = SanicTestClient(app)
    request, response = test_client.get("/param/test_value")
    assert response.status_code == 200
    assert response.text == "test_value"

def test_not_found(app: Sanic):
    test_client = SanicTestClient(app)
    request, response = test_client.get("/not_found")
    assert response.status_code == 404